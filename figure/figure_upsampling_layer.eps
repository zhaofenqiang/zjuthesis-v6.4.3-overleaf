%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: figure_upsampling_layer.pdf
%%Creator: (Adobe Acrobat 21.5.0)
%%For: zfq
%%CreationDate: 2021/6/27, 上午11:12
%%BoundingBox: 0 0 460 530
%%HiResBoundingBox: 0 0 459.9562 529.7248
%%CropBox: 0 0 459.9562 529.7248
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1079 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2021-06-27T03:11:14Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2021-06-27T11:11:59+08:00"
   xmp:MetadataDate="2021-06-27T11:11:59+08:00"
   pdf:Producer="macOS 版本11.3.1（版号20E241） Quartz PDFContext"
   xmpMM:DocumentID="uuid:e6444ba5-b7d1-fa40-8f55-12524628239e"
   xmpMM:InstanceID="uuid:794c4cea-e21d-744a-884c-0f708da27093">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>赵奋强</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">draw_picture</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -529.725 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 529.725 li
459.956 529.725 li
459.956 0 li
cp
clp
-40.8485 -7.60889 mo
521.951 -7.60889 li
521.951 657.391 li
-40.8485 657.391 li
cp
false sop
0 0 0 0 cmyk
f
gsave
-40.8485 657.391 mo
522.151 657.391 li
522.151 -7.60889 li
-40.8485 -7.60889 li
cp
clp
-40.8485 -7.60889 mo
522.151 -7.60889 li
522.151 657.318 li
-40.8485 657.318 li
cp
f
379.842 271.943 mo
337.051 343.684 li
.62829 .284672 0 0 cmyk
19050 lw
0 lc
0 lj
8 ml
[] 0 dsh
true sadj
gsave
[-4.61778e-05 0 0 4.61748e-05 379.842 271.943 ]ct
@
grestore newpath
359.868 304.006 mo
344.255 330.158 li
345.514 330.909 li
361.127 304.757 li
cp
343.372 328.777 mo
343.005 333.68 li
347.148 331.031 li
cp
.75021 .679683 .670222 .90164 cmyk
f
340.507 207.002 mo
279.639 309.05 li
.62829 .284672 0 0 cmyk
gsave
[-4.61778e-05 0 0 4.61748e-05 340.507 207.002 ]ct
@
grestore newpath
281.227 307.757 mo
294.848 285.061 li
293.591 284.306 li
279.97 307.003 li
cp
295.728 286.443 mo
296.105 281.541 li
291.956 284.18 li
cp
.75021 .679683 .670222 .90164 cmyk
f
364.401 241.125 mo
279.032 241.125 li
.62829 .284672 0 0 cmyk
gsave
[-4.61778e-05 0 0 4.61748e-05 364.401 241.125 ]ct
@
grestore newpath
325.409 240.317 mo
350.575 240.317 li
350.575 241.783 li
325.409 241.783 li
cp
349.842 238.851 mo
354.24 241.05 li
349.842 243.249 li
cp
.75021 .679683 .670222 .90164 cmyk
f
294.127 20.577 mo
351.184 124.211 li
.62829 .284672 0 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 294.127 20.577 ]ct
@
grestore newpath
356.935 55.319 mo
271.566 55.3191 li
gsave
[-4.61778e-05 0 0 4.61748e-05 356.935 55.319 ]ct
@
grestore newpath
333.041 21.1965 mo
272.173 123.244 li
gsave
[-4.61778e-05 0 0 4.61748e-05 333.041 21.1965 ]ct
@
grestore newpath
253.523 86.7137 mo
289.563 152.176 li
gsave
[4.61778e-05 0 0 4.61748e-05 253.523 86.7137 ]ct
@
grestore newpath
353.211 123.078 mo
267.843 123.078 li
gsave
[-4.61778e-05 0 0 4.61748e-05 353.211 123.078 ]ct
@
grestore newpath
372.376 86.1376 mo
329.585 157.879 li
gsave
[-4.61778e-05 0 0 4.61748e-05 372.376 86.1376 ]ct
@
grestore newpath
193.429 117.498 mo
207.883 93.4127 li
206.625 92.6583 li
192.172 116.744 li
cp
208.763 94.7956 mo
209.14 89.8928 li
204.991 92.5325 li
cp
.765255 .551598 0 0 cmyk
f
186.926 128.823 mo
170.58 154.61 li
171.818 155.395 li
188.164 129.608 li
cp
169.734 153.206 mo
169.237 158.099 li
173.449 155.561 li
cp
f
171.732 20.464 mo
132.784 20.464 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 171.732 20.464 ]ct
@
grestore newpath
170.918 20.8687 mo
208.785 89.6492 li
gsave
[4.61778e-05 0 0 4.61748e-05 170.918 20.8687 ]ct
@
grestore newpath
189.972 54.6589 mo
130.117 157.593 li
gsave
[-4.61778e-05 0 0 4.61748e-05 189.972 54.6589 ]ct
@
grestore newpath
132.815 19.7969 mo
92.0552 89.8928 li
gsave
[-4.61778e-05 0 0 4.61748e-05 132.815 19.7969 ]ct
@
grestore newpath
208.284 89.3744 mo
91.8866 89.3551 li
gsave
[-4.61778e-05 0 0 -4.61748e-05 208.284 89.3744 ]ct
@
grestore newpath
112.306 54.9508 mo
169.172 158.237 li
gsave
[4.61778e-05 0 0 4.61748e-05 112.306 54.9508 ]ct
@
grestore newpath
167.618 160.768 mo
129.015 160.762 li
gsave
[-4.61778e-05 0 0 -4.61748e-05 167.618 160.768 ]ct
@
grestore newpath
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: IAAAAA+DengXian-Regular Initial
ct_T42Dict begin
-0.141 -0.25 1.148 0.953
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+DengXian-Regular
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000008986670
676d000000000000095400000e79676c79660000000000001be800001772
6865616400000000000017d0000000366868656100000000000018080000
0024686d7478000000000000182c0000003c6c6f63610000000000001868
000000206d6178700000000000001888000000206e616d65000000000000
18a80000002c7072657000000000000018d4000003146764697200000000
000000000000000006650013060d001b060d001b0452001b0000ffe50000
ffe50000ffe5fe03fff6060d001c0000ffe4000000730077006d006d0070
006500650077006d007900630070006500600055006f007400650127006b
006f00610061007f0079006d005c0063006c0072007b007000750065006c
00550061006f007400590075006501270059006200690074004a00590065
0070005900610069004d0057005c006300690071007f0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000055d
0001000005310015007905310015000000000000000000000000000003aa
0014007affb0ffec0000ffb0ffec0000ffb0ffec0000fe25000000000531
000cfcb2fff4000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000085007f0000000000000069
0063005b000000000088007e0075009000000072006b005e00000000007f
0086000000000000006a005f046400150079404927262587868584838281
807f7e7d7c7b7a797877767574737271706f6e6d6c6b6a69686766656463
6261605f5e5d5c5b5a5958575655545351504f4e4d4c4b4a49484746281f
100a092c01b10b0a432343650a2d2c00b10a0b4323430b2d2c01b00643b0
0743650a2d2cb04f2b20b0405158214b525845441b2121591b2321b040b0
042545b004254561648a63525845441b212159592d2c00b00743b006430b
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb002
435458b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb0
02435458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c
2320b000508a8a64b10003255458b0401bb10103255458b005438b59b04f
2b5923b0622b2321235865592d2cb108000c215460432d2cb10c000c2154
60432d2c012047b0024320b8100062b81000635723b8010062b810006357
5a58b020606659482d2cb1000225b00225b0022553b800352378b00225b0
022560b020632020b00625236250588a21b00160231b2020b00625236252
582321b001611b8a212321205959b8ffc11c60b0206323212d2cb1020042
b123018851b1400188535a58b910000020885458b202010243604259b124
01885158b920000040885458b2020202436042b12401885458b202200243
6042004b014b5258b2020802436042591bb940000080885458b202040243
604259b94000008063b80100885458b202080243604259b94000010063b8
0200885458b202100243604259b12601885158b94000020063b804008854
58b202400243604259b94000040063b80800885458b20280024360425959
59595959b10002435458400a0540084009400c020d021bb10102435458b2
054008ba010000090100b30c010d011bb18002435258b2054008b80180b1
09401bb2054008ba01800009014059b9400000808855b94000020063b804
0088555a58b30c000d011bb30c000d0159595942424242422d2c45b1024e
2b23b04f2b20b0405158214b5158b0022545b1014e2b60591b2321b00325
4520648a63b0405358b1024e2b601b215959442d2c20b00050205823651b
2359b114148a7045b04f2b23b1610626602b8a58b005438b592358655923
103a2d2cb003254963234660b04f2b23b00425b0042549b0032563562060
b062602bb003252010468a4660b02063613a2d2cb00016b1020325b10104
25013e003eb10102060cb00a236542b00b2342b1020325b1010425013f00
3fb10102060cb006236542b0072342b00116b10002435458452345201869
8a6323622020b0405058671b665961b02063b0402361b00423421bb10400
4221215918012d2c2045b1004e2b442d2c4b51b1404f2b505b582045b101
4e2b208a8a4420b1400426616361b1014e2b44211b23218a45b1014e2b20
8a234444592d2c4b51b1404f2b505b5845208ab0406163601b23214559b1
014e2b442d2c2345208a4523612064b04051b0042520b0005323b040515a
5ab1404f2b545a588a0c642364235358b140408a612063611b2063591b8a
5963b1024e2b60442d2c012d2c002d2c05b10b0a432343650a2d2cb10a0b
4323430b022d2cb002256366b00225b82000626023622d2cb0022563b020
6066b00225b82000626023622d2cb002256367b00225b82000626023622d
2cb002256366b02060b00225b82000626023622d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
ba005d1000000b256356602bb00725b00725b00625b00625b00c25b00c25
b00925b00825b06e2bb0041738b00725b00725b00726b06d2bb00425b004
25b00426b06d2bb0502bb00625b00625b00325b0712bb00525b00525b003
25b002173820b00625b00625b00525b0712b60b00625b00625b0042565b0
021738b00225b002256020b040535821b0406123b04061231bb8ffc05058
b0406023b04060235959b00825b00825b00426b0021738b00525b005258a
b002173820b0005258b00625b0082549b00325b00525496020b040525821
1bb0005258b00625b00625b00625b00625b00b25b00b2549b0041738b006
25b00625b00625b00625b00a25b00a25b00725b0712bb0041738b00425b0
0425b00525b00725b00525b0712bb00217381bb00425b00425b9ffc00002
173859595921212121212121212d2cb00425b0032587b00325b003258a20
b000505821b0651bb068592b64b00425b0042506b00425b0042549202063
b00325206351b1000325545b5821212321071b2063b0022520636120b053
2b8a63b00525b0052587b00425b004264ab00050586559b0042620014623
0046b00526200146230046b0001600b000234801b00023480020b0012348
b00223480120b0012348b002234823b2020001082338b2020001092338b1
020107b00116592d2c23100d0c8a63238a636064b940000400635058b000
381b3c592d2cb00625b00925b00925b00726b0762b23b0005458051b0459
b00425b00626b0772bb00525b00526b00525b00526b0762bb0005458051b
0459b0772b2d2cb00725b00a25b00a25b00826b0762b8ab0005458051b04
59b00525b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d
2cb00725b00a25b00a25b00826b0762b8a8a08b00425b00626b0772bb005
25b00526b00525b00526b0762bb0005458051b0459b0772b2d2cb00825b0
0b25b00b25b00926b0762bb00426b0042608b00525b00726b0772bb00625
b00626b00625b00626b0762b08b0772b2d2c03b00325b003254ab00425b0
03254a02b00525b005264ab00526b005264ab00426638a8a63612d2cb15d
0e25602bb00c2611b0052612b00a2539b0072539b00a25b00a25b00925b0
7c2bb00050b00b25b00825b00a25b07c2bb000505458b00725b00b2587b0
0425b004250bb00a2510b00925c1b00225b002250bb0072510b00625c11b
b00725b00b25b00b25b9ffff00762bb00425b004250bb00725b00a25b077
2bb00a25b00825b00825b9ffff00762bb00225b002250bb00a25b00725b0
772b59b00a2546b00a254660b0082546b008254660b00625b006250bb00c
25b00c25b00c2620b000505821b06a1bb06c592bb00425b004250bb00925
b00925b0092620b000505821b06a1bb06c592b23b00a2546b00a25466061
b0206323b0082546b00825466061b02063b1010c255458041b0559b00a26
2010b003253ab00626b006260bb0072620108a3ab10107265458041b0559
b005262010b002253a8a8a0b232010233a2d2c23b0015458b9000040001b
b940000000598ab0015458b9000040001bb94000000059b07d2b2d2c8a8a
080d8ab0015458b9000040001bb94000000059b07d2b2d2c08b0015458b9
000040001bb940000000590db07d2b2d2cb00426b00426080db00426b004
26080db07d2b2d2c200146230046b00a43b00b438a632362612d2cb0092b
b006252eb005257dc5b00625b00525b0042520b000505821b06a1bb06c59
2bb00525b00425b0032520b000505821b06a1bb06c592b18b00825b00725
b00625b00a25b06f2bb00625b00525b0042620b000505821b0661bb06859
2bb00525b00425b0042620b000505821b0661bb068592b54587db0042510
b00325c5b0022510b00125c5b0052621b00526211bb00626b00425b00325
b00826b06f2b59b100024354587db00225b0822bb00525b0822b20206961
b00443012361b06060206961b0206120b00826b008268ab00217388a8a61
20696161b00217381b2121212159182d2c4b52b1010243535a5823102001
3c003c1b2121592d2c23b00225b00225535820b00425583c1b3959b00160
b8ffe91c592121212d2cb0022547b0022547548a20201011b001608a2012
b00161b0852b2d2cb0042547b002254754232012b001612320b006262020
1011b00160b00626b0852b8a8ab0852b2d2cb00243b00152582121212121
1b462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a592d2c2045b0
032546524bb013515b58b0022546206861b00325b003253f2321381b2111
592d2c2045b00325465058b0022546206861b00325b003253f2321381b21
11592d0000000001000000012148ae2109445f0f3cf5001b080000000000
c9ab180100000000d194bf1cfedffdf9093607a100000014000200000000
000000010000067bfe2500000993fedffdee093600010000000000000000
000000000000000f08000000080000270800004c0800003d0800006a0800
00f0080000850800005a080000600800005c0800003d080000c908000054
0800007f080000750000000001050188026302b4033c03ff0509063106f5
07a9089e09840ab10bb900010000000f009d00090000000000020010002f
0088000002830e7900000000000000010012000100000000000600170000
4141414141432b44656e675869616e2d526567756c617200000041120409
006404080055040800590408000104060055040700640406005504060059
04430442b2501fe8411b044200f80442000200e8044200f8044200020401
0033040000550400005903ef003303ee005503ee0059043f043d0021001f
043e043db23c1f27410e043d0037043d0002043b04380018001f043a0438
0032001f04390438b2501fd7412204380001044b000104490055044a0033
044900550449005903fb003303fa005503fa005903ed000103eb005503ec
003303eb005503eb005904350433003c001f04340433b2641f4841210433
0001042f042e0064001f04040064040300550403005903fe003303fd0055
03fd005903f9000103f7005503f8003303f7005503f7005903e900ff03e8
005503e840ff59512cff1f502b451f4f2b801f4e2bff1f4d2bab1f4c2b5e
1f4b2b341f4a2a801f492aff1f482a801f4729ff1f4629561f45292f1f44
291c1f4328721f4228ff1f4128801f40283d1f3f27ff1f3e26ff1f3d25ff
1f3c25261f3b24cd1f3a24ff1f3922ff1f3823ff1f3721931f3621ff1f35
20cd1f3420ff1f331eff1f321e801f311e4f1f301fff1f2f1f931f2e1dff
1f2d1cff1f243a1b195c23225e1f221bcd1f211aff1f2019ff1f1f1e2f1f
1e16ff1f1d17ff1f1c16ff1f1b3919625b183a16625b1a3919625b173a16
625b15193c16935a1325125511251055125910590d260c55052604550c59
04590f670e550b260a5507260655013600550e590a401659065900590926
085503260255085902590340400501b9019000542b4bb807ff524bb00850
5bb00188b02553b00188b040515ab00688b000555a5b58b101018e59858d
8d001d424bb0905358b20300001d4259b10202435158b104038e59002b00
2b2b2b002b002b002b002b2b2b2b2b002b002b2b2b002b002b2b2b012b01
2b012b012b012b012b002b2b2b012b002b2b2b012b012b002b2b2b2b2b2b
012b2b002b2b2b2b2b2b012b2b002b2b2b2b2b2b012b2b2b2b002b2b2b2b
2b2b2b2b2b2b002b2b002b2b2b002b2b002b2b012b00742b2b002b2b2b00
2b2b002b2b2b01742b2b2b00742b2b002b2b002b2b0173742b002b002b2b
002b2b1800>
[6003 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4412 12 <00040054fea807ae062f00060030007d008300234010822f021b1b497c06
787f4c2220490149002f5d3333332f333312392f33333330311724250615
040701171607140706070203243706070407273637363722072736371213
171607140706070607060716333613243726270706072736373726270706
072732373726353427171617140706070615141725363717220705161725
363717060705161736371716140706070607161736371617022722030605
26013716170726540181017d0efe1cc00241892102252522cfec01139b18
0afea8e6335a2b669acb933c2e22b0678d1d02232325254d5d2fb376715a
0158c3481fae4a62166846b4120b6e5c671258687d0410a81a02181d0404
0401464f710a5a62feb20217018d5c58136d4efe751640ac5c8315174138
45947d8b501f39486083a2cfc7fed52b022b4aa883508133379a5a388552
05bb501308080a0d33fec9febe172b42412b2f7931296cfc217d113d011d
010a5412070a080a3a3d819a4d0ba6faf243b9c2d323101d8e020c1d93a4
16131f980c11a5b1648716020d0c1219405e65666c350f1e8b103462cd4a
10218b080f45aea4b6b8600e1108124e5a9cba2d08d7351dfecd120123a2
7247067360786f627600>IAAAAA+DengXian-Regular AddT42Char 
1 1656 6 <00040085fecf07730635000c0012005a0069004540205b2724103b0d240b
3b02243c4c4c4545245434343b3b242c2033205757642464002f2f12392f
3333113311392f33113311392f3311331133113311331133113333303113
361317161516070607060726011617072627131213171617140706070607
060721113427171617160706071133363715262723113332371526272311
213237323315262321220735321716332111232207351617331121060726
011716160706151114172336371126855012831b020e1f0825293101f23b
3772323973eb219c140210291506100a04011a0c97190204122104f62f6a
5445f6be27756834be01331362180d7129fcee2b6f0c275413016ccf3364
6235cffecf35753dfe9d9812040e250c870b02020296bc01311b04040412
1f33cdaa0e0225a4b429d18bfdfc010801f4310604040815561f3b290e01
2b359118040b080e2371fee0020a7f0a02fe500c7f0b02fde1087b0d0d7b
0206021f0d7f0a0201b0a4e92903ae1702100c2364fa3742917b5805db3b
>IAAAAA+DengXian-Regular AddT42Char 
1 2046 7 <0002005afec7079106230067009b00554028723f39096f8e215f5f3d3d6f
575e5e6f2924246f312c2c6f1967206762626f776b7e6b9a9a8a6f8a002f
2f12392f3333113311392f3333113311392f3311392f3311392f3311392f
331133321133323233303101110607262716332025171615140706232227
262322070607112136371526272111211123060735161733352306073516
173336370607111617233637211617233637112627363717161514070623
222726232207060715333637152627231121112106073516170535161733
352627171615140706151533363715262723113637061506071116070607
262716333237362711060727363711230604dfc4c71f3348520186019a56
0604050906061517191bd37501a0524d4d52fe6001605e426260445e6c4a
5a564e4154560a02020a8b0a02fcf8020a850a02020a9c8f460602040a05
0c110f0f0e524848584a564c48012ffec352585c50fccb5c459e020aa009
12180c4856504e0c565a0a5452042d21b8082b482a220d23028f6b5a94c0
9e4d042b01081a15503905867409070504060206062712fee7020a7f0b02
fc040145020a7f0a02fa020b7f0a02020a544dfd5c4a6643374554545602
914660064a6d0a07040304020303110af1020a7f0a02fec503fc020b7f0a
02377f0b02f652751505090c131a73ee020b7f0a02fe7b29354340252bfd
cfac252d1047500d09116202024c4a8c295a01b80200>IAAAAA+DengXian-Regular AddT42Char 
1 0 1 <00060027fed107a006400015004c005000540058005c00e240a559411616
48485001505c524f4856010356513b1e1e553326263a2134480104481448
4448032b5c3b5c6b5c030b5c1b5c2b5c6b5c7b5c8b5c062b5c3b5c7b5c8b
5ceb5c052b4f5b4f9b4f032b4f6b4f8b4f9b4fab4ffb4f062b4f3b4f7b4f
ab4ffb4f05104f01020f4f01df51ef5102af51019051012f513f51021051
01bf55cf550200551055025f21af21bf21cf2104485c4f5155212155514f
5c48060c2a002c100c010c002f5d2f33331217392f2f2f2f2f2f5d5d5d5d
5d5d5d715d5f5d5d71725d71725d7111333311331133113311335f5d1133
11335d113311333330310117161514070607060711061723362711060726
270001331136271617163333372126073516372137342726371716140706
070721163715260721072116370617113316371526072126073516013521
1511152135011521350121352101dba2121627172b35020e8b0e02435a40
64012f01645f020f38161b25f10ffe6a314c443701a00c0a06029f15121d
040d01cf2f4a4e2dfe2b0e01212f5e0e02852b504c31fb9b394c4c03a8fd
5e02a2fd5e02a2fd5e02a2fd5e0625440808060f163b6d7dfafc58544c5e
0416768a3018010cfbcb03e33a540a0302ac030f7f0e02a61a3224052504
1510192391020e7f0f03ac02114c3ffc1a020a7b0f02020f7b0a010ebdbd
01debfbf0114b2b2fc02aa00>IAAAAA+DengXian-Regular AddT42Char 

1 0 0 <> IAAAAA+DengXian-Regular AddT42Char 
IAAAAA+DengXian-Regular /CharStrings get begin
/g12 12 def
/g6 6 def
/g7 7 def
/g1 1 def
end
IAAAAA+DengXian-Regular /Encoding get
dup 33 /g12 put
dup 34 /g6 put
dup 35 /g7 put
dup 36 /g1 put
pop
end
%ADOEndSubsetFont
/GHVRLH+DengXian-Regular /IAAAAA+DengXian-Regular findfont ct_VMDictPut/GHVRLH+DengXian-Regular*1 [33{/.notdef}rp /g12 /g6 /g7 /g1 219{/.notdef}rp]GHVRLH+DengXian-Regular nfGHVRLH+DengXian-Regular*1 [14 0 0 -13.9991 0 0 ]msf200.175 14.9511 mo(!"#$)[14.0756 14.0756 14.0756 0 ]xsh210.359 88.4038 mo
242.687 88.4038 li
242.687 90.1631 li
210.359 90.1631 li
cp
241.807 86.6446 mo
247.085 89.2835 li
241.807 91.9224 li
cp
f
%ADOBeginSubsetFont: KAAAAA+DengXian-Regular Initial
ct_T42Dict begin
-0.141 -0.25 1.148 0.953
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+DengXian-Regular
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000008986670
676d000000000000095400000e79676c79660000000000001bc000000a2e
6865616400000000000017d0000000366868656100000000000018080000
0024686d7478000000000000182c000000206c6f6361000000000000184c
000000126d6178700000000000001860000000206e616d65000000000000
18800000002c7072657000000000000018ac000003146764697200000000
000000000000000006650013060d001b060d001b0452001b0000ffe50000
ffe50000ffe5fe03fff6060d001c0000ffe4000000730077006d006d0070
006500650077006d007900630070006500600055006f007400650127006b
006f00610061007f0079006d005c0063006c0072007b007000750065006c
00550061006f007400590075006501270059006200690074004a00590065
0070005900610069004d0057005c006300690071007f0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000055d
0001000005310015007905310015000000000000000000000000000003aa
0014007affb0ffec0000ffb0ffec0000ffb0ffec0000fe25000000000531
000cfcb2fff4000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000085007f0000000000000069
0063005b000000000088007e0075009000000072006b005e00000000007f
0086000000000000006a005f046400150079404927262587868584838281
807f7e7d7c7b7a797877767574737271706f6e6d6c6b6a69686766656463
6261605f5e5d5c5b5a5958575655545351504f4e4d4c4b4a49484746281f
100a092c01b10b0a432343650a2d2c00b10a0b4323430b2d2c01b00643b0
0743650a2d2cb04f2b20b0405158214b525845441b2121591b2321b040b0
042545b004254561648a63525845441b212159592d2c00b00743b006430b
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb002
435458b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb0
02435458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c
2320b000508a8a64b10003255458b0401bb10103255458b005438b59b04f
2b5923b0622b2321235865592d2cb108000c215460432d2cb10c000c2154
60432d2c012047b0024320b8100062b81000635723b8010062b810006357
5a58b020606659482d2cb1000225b00225b0022553b800352378b00225b0
022560b020632020b00625236250588a21b00160231b2020b00625236252
582321b001611b8a212321205959b8ffc11c60b0206323212d2cb1020042
b123018851b1400188535a58b910000020885458b202010243604259b124
01885158b920000040885458b2020202436042b12401885458b202200243
6042004b014b5258b2020802436042591bb940000080885458b202040243
604259b94000008063b80100885458b202080243604259b94000010063b8
0200885458b202100243604259b12601885158b94000020063b804008854
58b202400243604259b94000040063b80800885458b20280024360425959
59595959b10002435458400a0540084009400c020d021bb10102435458b2
054008ba010000090100b30c010d011bb18002435258b2054008b80180b1
09401bb2054008ba01800009014059b9400000808855b94000020063b804
0088555a58b30c000d011bb30c000d0159595942424242422d2c45b1024e
2b23b04f2b20b0405158214b5158b0022545b1014e2b60591b2321b00325
4520648a63b0405358b1024e2b601b215959442d2c20b00050205823651b
2359b114148a7045b04f2b23b1610626602b8a58b005438b592358655923
103a2d2cb003254963234660b04f2b23b00425b0042549b0032563562060
b062602bb003252010468a4660b02063613a2d2cb00016b1020325b10104
25013e003eb10102060cb00a236542b00b2342b1020325b1010425013f00
3fb10102060cb006236542b0072342b00116b10002435458452345201869
8a6323622020b0405058671b665961b02063b0402361b00423421bb10400
4221215918012d2c2045b1004e2b442d2c4b51b1404f2b505b582045b101
4e2b208a8a4420b1400426616361b1014e2b44211b23218a45b1014e2b20
8a234444592d2c4b51b1404f2b505b5845208ab0406163601b23214559b1
014e2b442d2c2345208a4523612064b04051b0042520b0005323b040515a
5ab1404f2b545a588a0c642364235358b140408a612063611b2063591b8a
5963b1024e2b60442d2c012d2c002d2c05b10b0a432343650a2d2cb10a0b
4323430b022d2cb002256366b00225b82000626023622d2cb0022563b020
6066b00225b82000626023622d2cb002256367b00225b82000626023622d
2cb002256366b02060b00225b82000626023622d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
ba005d1000000b256356602bb00725b00725b00625b00625b00c25b00c25
b00925b00825b06e2bb0041738b00725b00725b00726b06d2bb00425b004
25b00426b06d2bb0502bb00625b00625b00325b0712bb00525b00525b003
25b002173820b00625b00625b00525b0712b60b00625b00625b0042565b0
021738b00225b002256020b040535821b0406123b04061231bb8ffc05058
b0406023b04060235959b00825b00825b00426b0021738b00525b005258a
b002173820b0005258b00625b0082549b00325b00525496020b040525821
1bb0005258b00625b00625b00625b00625b00b25b00b2549b0041738b006
25b00625b00625b00625b00a25b00a25b00725b0712bb0041738b00425b0
0425b00525b00725b00525b0712bb00217381bb00425b00425b9ffc00002
173859595921212121212121212d2cb00425b0032587b00325b003258a20
b000505821b0651bb068592b64b00425b0042506b00425b0042549202063
b00325206351b1000325545b5821212321071b2063b0022520636120b053
2b8a63b00525b0052587b00425b004264ab00050586559b0042620014623
0046b00526200146230046b0001600b000234801b00023480020b0012348
b00223480120b0012348b002234823b2020001082338b2020001092338b1
020107b00116592d2c23100d0c8a63238a636064b940000400635058b000
381b3c592d2cb00625b00925b00925b00726b0762b23b0005458051b0459
b00425b00626b0772bb00525b00526b00525b00526b0762bb0005458051b
0459b0772b2d2cb00725b00a25b00a25b00826b0762b8ab0005458051b04
59b00525b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d
2cb00725b00a25b00a25b00826b0762b8a8a08b00425b00626b0772bb005
25b00526b00525b00526b0762bb0005458051b0459b0772b2d2cb00825b0
0b25b00b25b00926b0762bb00426b0042608b00525b00726b0772bb00625
b00626b00625b00626b0762b08b0772b2d2c03b00325b003254ab00425b0
03254a02b00525b005264ab00526b005264ab00426638a8a63612d2cb15d
0e25602bb00c2611b0052612b00a2539b0072539b00a25b00a25b00925b0
7c2bb00050b00b25b00825b00a25b07c2bb000505458b00725b00b2587b0
0425b004250bb00a2510b00925c1b00225b002250bb0072510b00625c11b
b00725b00b25b00b25b9ffff00762bb00425b004250bb00725b00a25b077
2bb00a25b00825b00825b9ffff00762bb00225b002250bb00a25b00725b0
772b59b00a2546b00a254660b0082546b008254660b00625b006250bb00c
25b00c25b00c2620b000505821b06a1bb06c592bb00425b004250bb00925
b00925b0092620b000505821b06a1bb06c592b23b00a2546b00a25466061
b0206323b0082546b00825466061b02063b1010c255458041b0559b00a26
2010b003253ab00626b006260bb0072620108a3ab10107265458041b0559
b005262010b002253a8a8a0b232010233a2d2c23b0015458b9000040001b
b940000000598ab0015458b9000040001bb94000000059b07d2b2d2c8a8a
080d8ab0015458b9000040001bb94000000059b07d2b2d2c08b0015458b9
000040001bb940000000590db07d2b2d2cb00426b00426080db00426b004
26080db07d2b2d2c200146230046b00a43b00b438a632362612d2cb0092b
b006252eb005257dc5b00625b00525b0042520b000505821b06a1bb06c59
2bb00525b00425b0032520b000505821b06a1bb06c592b18b00825b00725
b00625b00a25b06f2bb00625b00525b0042620b000505821b0661bb06859
2bb00525b00425b0042620b000505821b0661bb068592b54587db0042510
b00325c5b0022510b00125c5b0052621b00526211bb00626b00425b00325
b00826b06f2b59b100024354587db00225b0822bb00525b0822b20206961
b00443012361b06060206961b0206120b00826b008268ab00217388a8a61
20696161b00217381b2121212159182d2c4b52b1010243535a5823102001
3c003c1b2121592d2c23b00225b00225535820b00425583c1b3959b00160
b8ffe91c592121212d2cb0022547b0022547548a20201011b001608a2012
b00161b0852b2d2cb0042547b002254754232012b001612320b006262020
1011b00160b00626b0852b8a8ab0852b2d2cb00243b00152582121212121
1b462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a592d2c2045b0
032546524bb013515b58b0022546206861b00325b003253f2321381b2111
592d2c2045b00325465058b0022546206861b00325b003253f2321381b21
11592d0000000001000000012148ae2109445f0f3cf5001b080000000000
c9ab180100000000d194bf1cfedffdf9093607a100000014000200000000
000000010000067bfe2500000993fedffdee093600010000000000000000
000000000000000808000000080000680800007908000058080000580800
0068080000b40800007700000000014101d8027f03040376041105170000
000100000008009900080000000000020010002f0088000002830e790000
00000000000100120001000000000006001700004141414141452b44656e
675869616e2d526567756c61720000004112040900640408005504080059
040800010406005504070064040600550406005904430442b2501fe8411b
044200f80442000200e8044200f804420002040100330400005504000059
03ef003303ee005503ee0059043f043d0021001f043e043db23c1f27410e
043d0037043d0002043b04380018001f043a04380032001f04390438b250
1fd7412204380001044b000104490055044a0033044900550449005903fb
003303fa005503fa005903ed000103eb005503ec003303eb005503eb0059
04350433003c001f04340433b2641f48412104330001042f042e0064001f
04040064040300550403005903fe003303fd005503fd005903f9000103f7
005503f8003303f7005503f7005903e900ff03e8005503e840ff59512cff
1f502b451f4f2b801f4e2bff1f4d2bab1f4c2b5e1f4b2b341f4a2a801f49
2aff1f482a801f4729ff1f4629561f45292f1f44291c1f4328721f4228ff
1f4128801f40283d1f3f27ff1f3e26ff1f3d25ff1f3c25261f3b24cd1f3a
24ff1f3922ff1f3823ff1f3721931f3621ff1f3520cd1f3420ff1f331eff
1f321e801f311e4f1f301fff1f2f1f931f2e1dff1f2d1cff1f243a1b195c
23225e1f221bcd1f211aff1f2019ff1f1f1e2f1f1e16ff1f1d17ff1f1c16
ff1f1b3919625b183a16625b1a3919625b173a16625b15193c16935a1325
125511251055125910590d260c55052604550c5904590f670e550b260a55
07260655013600550e590a40165906590059092608550326025508590259
0340400501b9019000542b4bb807ff524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59858d8d001d424bb0905358b2
0300001d4259b10202435158b104038e59002b002b2b2b002b002b002b00
2b2b2b2b2b002b002b2b2b002b002b2b2b012b012b012b012b012b012b00
2b2b2b012b002b2b2b012b012b002b2b2b2b2b2b012b2b002b2b2b2b2b2b
012b2b002b2b2b2b2b2b012b2b2b2b002b2b2b2b2b2b2b2b2b2b002b2b00
2b2b2b002b2b002b2b012b00742b2b002b2b2b002b2b002b2b2b01742b2b
2b00742b2b002b2b002b2b0173742b002b002b2b002b2b1800>
[2607 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1544 5 <00030068fec5078705f2002300290035002f40150c050335172c03241727
0300101017171a0f08031a002f2f333312392f3311331133113311331133
113333303113211121260735163721163715262321112116371526072111
0617233627112126073516250227371613051213171607060706070607f0
02d3fddd50584c5c04b8394a542dfddf02c537525433fd39020f900f02fd
313e4e4c01ee9abe7283d80197ec6e811f06022d1b14759e02080373020e
830f02020f830cfc8d020e830f02fdc2504b3566023e020f830e8d010bdb
4ca8feca24010e01024e12080b140a25bfe3>KAAAAA+DengXian-Regular AddT42Char 
1 944 3 <00040058fed5076d06250025002c003200560033401731152e202a152637
1915483c4f3c373715082020150015002f2f11392f3311392f3333113311
331133113311331133303101171616070607060721323706070607020306
070605262716333237363712132106072627240116170405272403371617
072601363711232207351633331134271716171407061711333237152607
231136370615040704669e1b0419291e272b02454c6b03020a020e13065a
54fee80d3169465e2a50062108fd5d61645256012702520a17febefed56e
01167b548f90626ffb85a0c2874c5a5f47870c961402101f024c4c585a4a
4c9a7210fe79fe06252908150c124a5e5d0d0f186547fd9bfe8ab7394214
56520b131d7901d30268b6922519e3fe115d37a6d98956023a5c7d966092
fddb103502b70d7f0c014243751502080815225ffec30c7f0f02fd682735
563d5e67>KAAAAA+DengXian-Regular AddT42Char 

1 0 0 <> KAAAAA+DengXian-Regular AddT42Char 
KAAAAA+DengXian-Regular /CharStrings get begin
/g5 5 def
/g3 3 def
end
KAAAAA+DengXian-Regular /Encoding get
dup 33 /g5 put
dup 34 /g3 put
pop
end
%ADOEndSubsetFont
/GHVRLI+DengXian-Regular /KAAAAA+DengXian-Regular findfont ct_VMDictPut/GHVRLI+DengXian-Regular*1 [33{/.notdef}rp /g5 /g3 221{/.notdef}rp]GHVRLI+DengXian-Regular nfGHVRLI+DengXian-Regular*1 [12 0 0 -11.9992 0 0 ]msf214.602 154.151 mo(!")[11.7288 0 ]xsh153.915 54.1537 mo
186.58 54.1537 li
186.58 55.6198 li
153.915 55.6198 li
cp
185.847 52.6877 mo
190.245 54.8868 li
185.847 57.0858 li
cp
.765255 .551598 0 0 cmyk
f
152.83 52.2122 mo
169.352 23.8367 li
168.085 23.099 li
151.563 51.4745 li
cp
170.25 25.2078 mo
170.563 20.3005 li
166.449 22.9948 li
cp
f
147.625 50.1652 mo
133.228 23.8272 li
134.515 23.124 li
148.912 49.462 li
cp
132.293 25.1735 mo
132.114 20.2595 li
136.153 23.0641 li
cp
f
144.514 55.8158 mo
114.015 55.5398 li
114.028 54.0738 li
144.528 54.3498 li
cp
114.735 57.0124 mo
110.356 54.7736 li
114.774 52.6144 li
cp
f
113.531 127.216 mo
128.836 154.718 li
127.555 155.431 li
112.25 127.929 li
cp
129.761 153.365 mo
129.978 158.278 li
125.918 155.504 li
cp
f
107.288 127.731 mo
89.9706 155.051 li
91.209 155.835 li
108.526 128.516 li
cp
89.1248 153.646 mo
88.6275 158.539 li
92.8398 156.001 li
cp
f
104.734 124.366 mo
74.2347 124.09 li
74.248 122.624 li
104.748 122.9 li
cp
74.9545 125.563 mo
70.5761 123.324 li
74.9943 121.165 li
cp
f
193.095 123.066 mo
160.642 123.195 li
160.648 124.661 li
193.101 124.532 li
cp
161.369 121.726 mo
156.98 123.942 li
161.387 126.124 li
cp
f
112.564 122.644 mo
139.316 122.934 li
139.3 124.4 li
112.548 124.11 li
cp
138.599 121.46 mo
142.973 123.707 li
138.551 125.858 li
cp
f
112.249 121.512 mo
125.87 98.8156 li
124.613 98.0613 li
110.992 120.758 li
cp
126.75 100.198 mo
127.127 95.2957 li
122.978 97.9355 li
cp
f
186.73 120.981 mo
174.441 98.3628 li
175.729 97.663 li
188.018 120.282 li
cp
173.503 99.7067 mo
173.335 94.7923 li
177.367 97.6072 li
cp
f
148.056 59.3308 mo
135.123 79.7344 li
136.361 80.5193 li
149.295 60.1156 li
cp
134.277 78.3304 mo
133.78 83.2225 li
137.992 80.685 li
cp
f
106.647 118.368 mo
93.2799 93.9135 li
94.5664 93.2104 li
107.934 117.665 li
cp
92.3449 95.2599 mo
92.1651 90.3459 li
96.2045 93.1504 li
cp
f
152.497 55.6224 mo
165.706 79.3583 li
164.425 80.0712 li
151.216 56.3352 li
cp
166.631 78.0049 mo
166.848 82.9174 li
162.787 80.1435 li
cp
f
.75021 .679683 .670222 .90164 cmyk
GHVRLI+DengXian-Regular*1 [12 0 0 -11.9992 0 0 ]msf230.237 67.2711 mo(!")[11.7288 0 ]xsh143.87 120.075 mo
145.824 116.715 150.131 115.575 153.491 117.528 cv
156.851 119.482 157.991 123.789 156.038 127.149 cv
154.084 130.509 149.776 131.649 146.416 129.695 cv
143.056 127.742 141.916 123.434 143.87 120.075 cv
cp
.369879 .299321 .304356 .000976577 cmyk
f
164.396 85.5085 mo
166.35 82.1488 170.658 81.0088 174.018 82.9623 cv
177.378 84.9158 178.518 89.2231 176.564 92.5829 cv
174.61 95.9427 170.303 97.0827 166.943 95.1292 cv
163.583 93.1756 162.443 88.8683 164.396 85.5085 cv
cp
f
199.542 275.209 mo
159.735 343.666 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 199.542 275.209 ]ct
@
grestore newpath
161.867 206.766 mo
123.079 206.759 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 -4.61748e-05 161.867 206.766 ]ct
@
grestore newpath
162.035 207.812 mo
198.924 274.814 li
gsave
[3.99202e-05 2.32099e-05 -2.32114e-05 3.99176e-05 162.035 207.812 ]ct
@
grestore newpath
161.808 207.601 mo
98.291 314.09 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 161.808 207.601 ]ct
@
grestore newpath
180.473 240.483 mo
120.753 343.185 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 180.473 240.483 ]ct
@
grestore newpath
122.956 206.657 mo
83.2106 275.01 li
gsave
[-4.61778e-05 0 0 4.61748e-05 122.956 206.657 ]ct
@
grestore newpath
123.102 207.146 mo
178.742 308.208 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[4.61778e-05 0 0 4.61748e-05 123.102 207.146 ]ct
@
grestore newpath
179.989 240.923 mo
102.869 240.923 li
gsave
[-4.61778e-05 0 0 4.61748e-05 179.989 240.923 ]ct
@
grestore newpath
199.122 275.179 mo
83.2642 275.179 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 199.122 275.179 ]ct
@
grestore newpath
102.626 240.67 mo
159.348 343.696 li
gsave
[4.61778e-05 0 0 4.61748e-05 102.626 240.67 ]ct
@
grestore newpath
83.2872 275.303 mo
121.003 343.807 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[4.61778e-05 0 0 4.61748e-05 83.2872 275.303 ]ct
@
grestore newpath
180.338 309.577 mo
104.041 309.565 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 180.338 309.577 ]ct
@
grestore newpath
159.12 343.364 mo
121.049 343.357 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 159.12 343.364 ]ct
@
grestore newpath
201.299 274.988 mo
247.934 274.988 li
247.934 276.747 li
201.299 276.747 li
cp
247.055 273.229 mo
252.333 275.868 li
247.055 278.506 li
cp
.75021 .679683 .670222 .90164 cmyk
f
%ADOBeginSubsetFont: IAAAAA+DengXian-Regular AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLH+DengXian-Regular gcheck setglobal} if
1 2578 8 <00090060fee1079305f80027002c00300034005000640068006c007100f3
40a802282b1b04190619150e170a0a2e2a322d3e37703122011d6a5e6669
3649014917366d016d062a8417017406840602660601440601842a01752a
01442a013b2a01042d01342d742d842df42d0404700174708470f4700360
7001347001041d01641d741d841df41d04401d0102005e01305e405e605e
705e805ef05e0630694069f0690317062a2d701d5e69695e1d702d2a0617
0811532065018065b065c065e065f06505654b11002f332f5d7133121739
2f2f2f2f2f2f2f2f5d5d715f5d5d715d5d5d715d715d5d5d5d5d5d5d5d11
12395d11395d113311331133333311333311331133322f12393932111217
393031012111363736370607061506070607151417233635350407262736
371123220735163321323715260135211536031521350115213513222306
073532171633213237020716170607262706072627363726011633213237
06151514172623212207362735341715213505152135033637211606f4fc
ed152933120a0a021d2d160d0d8c0dfe56f00433686b733d61445a05f650
4f56fc32fe749898018cfe74018ce304061929060d583501b45a4a5cbdbb
e3482fe38f88ce153fc89294fd043e56037f4a5a0d0d5056fc854c4c0f02
7203bbfc4503bb5c7e3cfe81410306fd8d07080a062b470904020a040294
684467477b45401778031002df0c7b0d09770cfd758dd11101b09696010e
b0b0fef402067b020b0dfef3f89f3a2f507f7f8781403d4499a804f00c0c
6551c35a5a0c0c3d69d956177575d77979fc0ca898a4>GHVRLH+DengXian-Regular AddT42Char 
1 1222 4 <0001006afed3079806190024001d400c1f0f0c14081b080303230c23002f
2f12392f3333113311333230311700132106073516172111342717161516
07060711213237152627211201060700030201266a02cd52fdcd44626b3b
023b0c9a1802121f0402603e7d7546fdb9e702944a4afdaed177fd9841cb
016702cc020a7f0a020189427f15040606132b6efe870c7f0a02fd15fee7
225d01980212fdfafe4a3100>GHVRLH+DengXian-Regular AddT42Char 
1 3170 9 <0004005cff0e07a406330005000c0012005f004d40273d1104482d292015
14560453235332393a4f045231312352232918482948290c591b0e080118
0c002f2f33333333331239392f2f11123939113311121739321112173911
331133333330311337161707260336131617020303371617072605112511
342717161516070617112536370607020706072627163332373613051114
172336351105110617162037361316170207060706272627263711070607
273637371134271716151607065c42ba7b506f91aabf2234a88c224ba6ac
509101dd01370c9a1602142102011b5a5c08020d261fc512372821532621
0afeac0c8b0cfec908878b01924e8b293948659f5ef6f864832e2f023d58
58256f544f0c9a1602142103815e89715e7bfc5ce801c24131fec4feb406
69607999658c27febc4801b04e6c18020b0810136afe6c4c19257135fd97
10522d504c062606023e50fda45c6f755602434dfcfe83050c0a0701043c
21fee8020c03020d0e312f7b02fc121b2577101716015f546e1802090812
1700>GHVRLH+DengXian-Regular AddT42Char 
1 522 2 <0002004cfed907b20637001500490014b743022535350e020e002f2f1239
2f3311333031130013171607140706070607111617233635110607260111
001317160607220700071106171620373637363716170607060706270623
22272627110607262736251134271716151607064c015cfc971502172d2d
3d48020a8b0c76943f0439014ab07d14041a274afeebe7042d2b0158393c
100e0b316204060a0832ef54406c67aa0689a63f3aa401040c9e16021223
028b011f028d4e0a06060a135c7f7ffb3e526f754c0404bdb83702f0fd2d
012701256d100f0858fec5c7fe335c101919144c40742d1413182b21e702
030710a801ae626d562b25c1033b408315020804131c>GHVRLH+DengXian-Regular AddT42Char 
1 3922 11 <000300c9fed7073f06370080008d009300334017110e928f8c832b5c021e
781e2b2b0e0a16161d1d580e58002f2f12392f33113311392f3333113332
113332333211333031131633213521220735163321353427171615160706
151521323715262321152132370615151417233635352117160706070607
060736373637171607062322272607060536373637262737161707262706
070607111607060726271633323736271104052627363736250607060706
072627262736373637211514172336353534033637171607060706070607
26253716050726c93d640267fe00693f337502000c9f1902152601f56147
4563fe0b0256683d0c0c8b0dfd3537120402182d2d3a95e9c766696c1d04
011308092d2d96fe5f6cc3c26b27545cb0a668324f3460ba5a043123d90b
334d322c163502fec7fed113167a73db010b7b94270c448f020219145c31
90a3fdb70c8b0c0cfcd7622102022521297ff04d040443fa01024cc00442
0db70d7f0c3b6f3b1a040706101f503b0c7f0db70d345e2b5e2d3b524823
0c08070202293564060e33775e170c0701022374e0060b0a06373a52a0bd
5852520408100bfe6f851b21104c4c0a08103b017914253d4602102dc90c
0c0302061a0408462405144cae6d494233584662fb6d56f84a190a0c0206
256f9c48f273719a7095>GHVRLH+DengXian-Regular AddT42Char 
1 1384 5 <000200f0fef206f4063d000e0044003e402628241b313a17423d40318031
023f3d4f3d6f3d032431173d3d173124046006a006b006030600002f2f5d
17392f2f2f2f5d5d11331133113311333031012336351134271716160706
171114010615151417262321060706072132370207161514052627163332
37363736373637212207363736363516332111212207351633213206cb94
0d0daa0f040f2902fd960c0c6450fe1a08120805022b4e611d0e03fd7e1b
1f624fc652790608080602fdc760501f0a0e0d456b01e1fdb84e4f415c02
1364fef2727d05b96043140219060683fa627406477242e3525c0c50a441
250cfed9f40f11d9076d3504191e734c9552290c6a5b72b75a0d01580c83
0c00>GHVRLH+DengXian-Regular AddT42Char 
GHVRLH+DengXian-Regular /CharStrings get begin
/g8 8 def
/g4 4 def
/g9 9 def
/g2 2 def
/g11 11 def
/g5 5 def
end
GHVRLH+DengXian-Regular /Encoding get
dup 37 /g8 put
dup 38 /g4 put
dup 39 /g9 put
dup 40 /g2 put
dup 41 /g11 put
dup 42 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLH+DengXian-Regular*1 [33{/.notdef}rp /g12 /g6 /g7 /g1 /g8 /g4 /g9 /g2 /g11 /g5 213{/.notdef}rp]GHVRLH+DengXian-Regular nfGHVRLH+DengXian-Regular*1 [14 0 0 -13.9991 0 0 ]msf176.306 181.511 mo(%&$'\(\)*)[14.0756 14.0756 14.0756 14.0756 14.0756 14.0756 0 ]xsh235.089 185.236 mo
204.321 236.819 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 235.089 185.236 ]ct
@
grestore newpath
254.025 220.186 mo
234.483 253.793 li
gsave
[-4.61778e-05 0 0 4.61748e-05 254.025 220.186 ]ct
@
grestore newpath
214.885 185.235 mo
244.083 238.268 li
gsave
[4.61778e-05 0 0 4.61748e-05 214.885 185.235 ]ct
@
grestore newpath
246.236 203.154 mo
202.252 203.154 li
gsave
[-4.61778e-05 0 0 4.61748e-05 246.236 203.154 ]ct
@
grestore newpath
244.787 237.999 mo
203.618 237.999 li
gsave
[-4.61778e-05 0 0 4.61748e-05 244.787 237.999 ]ct
@
grestore newpath
195.319 220.186 mo
213.822 253.793 li
gsave
[4.61778e-05 0 0 4.61748e-05 195.319 220.186 ]ct
@
grestore newpath
216.419 201.185 mo
216.419 197.414 219.476 194.358 223.246 194.358 cv
227.016 194.358 230.073 197.414 230.073 201.185 cv
230.073 204.955 227.016 208.011 223.246 208.011 cv
219.476 208.011 216.419 204.955 216.419 201.185 cv
cp
0 0 0 0 cmyk
f
216.419 201.185 mo
216.419 197.414 219.476 194.358 223.246 194.358 cv
227.016 194.358 230.073 197.414 230.073 201.185 cv
230.073 204.955 227.016 208.011 223.246 208.011 cv
219.476 208.011 216.419 204.955 216.419 201.185 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 216.419 194.358 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c7966000000000000396400000d2c
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000246c6f63610000000000001424
000000146d6178700000000000001438000000206e616d65000000000000
145800000020707265700000000000001478000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000009040e0000040e006b040e
0048040e00ae040e0072040e0067040e0030040e0065040e006b000000bf
01830247031103cc04e105bb068e06960001000000090059000500490002
00020010002f008700001236023500010001000000010012000100000000
0006000e00004141414141472b43616c69627269b10903415302c802c600
38001f02c702c60038001f02dd003802da005502d9003802d7005502d800
3802d7005502d6003802d5005502d4003802d3005502d2003802d1005502
bf003802be005502bd003802bc0055000402db003402db005402db000300
3402db005402db006402db00a402db00d402db0005006b02d50001000b02
d10001001402c2004402c2006402c2007402c2009402c2000500a402be00
0100a402bc000100200284b40918014a20b80283b40918014a20b80282b4
0918014a20b80281b40918014a20b80280b40918014a20b8027fb4091801
4a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8
027bb40918014a20b8027ab40918014a20b80279b40918014a20b80278b4
0918014a20b80277b40918014a20b80276b40918014a20b80275b4091801
4a20b80274b40918014a20b80273b40918014a20b80271b40918014a20b8
0270b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db4
0918014a20b8026cb40918014a20b8026bb40918014a20b8026ab4091801
4a20b80269b40918014a20b80268b40918014a20b80267b40918014a20b8
0266b40918014a20b80265b40918014a20b80264b40918014a20b80263b4
0918014a20b80262b40918014a20b80261b40918014a20b80260b4091801
4a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8
025cb40918014a20b8025bb40918014a20b8025ab40918014a20b80259b4
0918014a20b80258b40918014a20b80257b40918014a20b80256b4091801
4a20b80255b40918014a20b80254b40918014a20b80253b40918014a20b8
0252b40918014a20b80251b40918014a20b80250b40918014a20b8024fb4
0918014a20b8024eb40918014a20b8024db40918014a20b8024cb4091801
4a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b8
0248b40918014a20b80247b40918014a20b80246b40918014a20b80245b4
0918014a20b80244b40918014a20b80243b40918014a20b80242b4091801
4a20b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8
023eb40918014a20b8023db40918014a20b8023cb40918014a20b8023bb4
0918014a20b8023ab40918014a20b80239b40918014a20b80238b4091801
4a20b80237b40918014a20b80236b40918014a20b80235b40918014a20b8
0234b40918014a20b80233b40918014a20b80232b40918014a20b80231b4
0918014a20b80230b40918014a20b8022fb40918014a20b8022eb4091801
4a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8
022ab40918014a20b80229b40918014a20b80228b40918014a20b80227b4
0918014a20b80226b40918014a20b80225b40918014a20b80224b4091801
4a20b80223b40918014a20b80222b40918014a20b80221b40918014a20b8
0220b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db4
0918014a20b8021cb40918014a20b8021bb40918014a20b8021ab4091801
4a20b80219b40918014a20b80218b40918014a20b80217b40918014a20b8
0216b40918014a20b80215b40918014a20b80214b40918014a20b80213b4
0918014a20b80212b40918014a20b80211b40918014a20b80210b4091801
4a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8
020cb40918014a20b8020bb40918014a20b8020ab40918014a20b80209b4
0918014a20b80208b40918014a20b80207b40918014a20b80206b4091801
4a20b80205b40918014a20b80204b40918014a20b80203b40918014a20b8
0202b40918014a20b80201b40918014a20b80200b40918014a20b801ffb4
0918014a20b801feb40918014a20b801fdb40918014a20b801fcb4091801
4a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b4
0918014a20b801f4b40918014a20b801f3b40918014a20b801f2b4091801
4a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b8
01eeb40918014a20b801edb40918014a20b801ecb40918014a20b801ebb4
0918014a20b801eab40918014a20b801e9b40918014a20b801e8b4091801
4a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b8
01e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b4
0918014a20b801e0b40918014a20b801dfb40918014a20b801deb4091801
4a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b8
01dab40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b4
0918014a20b801d6b40918014a20b801d5b40918014a20b801d4b4091801
4a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b8
01d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb4
0918014a20b801ccb40918014a20b801cbb40918014a20b801cab4091801
4a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b8
01c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b4
0918014a20b801c2b40918014a20b801c1b40918014a20b801c0b4091801
4a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b8
01bcb40918014a20b801bbb40918014a20b801bab40918014a20b801b9b4
0918014a20b801b8b40918014a20b801b7b40918014a20b801b6b4091801
4a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b8
01b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb4
0918014a20b801aeb40918014a20b801adb40918014a20b801acb4091801
4a20b801abb40918014a20b801aab40918014a20b801a9b40918014a20b8
01a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b4
0918014a20b801a4b40918014a20b801a3b40918014a20b801a2b4091801
4a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8
019eb40918014a20b8019db40918014a20b8019cb40918014a20b8019bb4
0918014a20b8019ab40918014a20b80199b40918014a20b80198b4091801
4a20b80197b40918014a20b80196b40918014a20b80195b40918014a20b8
0194b40918014a20b80193b40918014a20b80192b40918014a20b80191b4
0918014a20b80190b40918014a20b8018fb40918014a20b8018eb4091801
4a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8
018ab40918014a20b80189b40918014a20b80188b40918014a20b80187b4
0918014a20b80186b40918014a20b80185b40918014a20b80184b4091801
4a20b80183b40918014a20b80182b40918014a20b80181b40918014a20b8
0180b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db4
0918014a20b8017cb40918014a20b8017bb40918014a20b8017ab4091801
4a20b80179b40918014a20b80178b40918014a20b80177b40918014a20b8
0176b40918014a20b80175b40918014a20b80174b40918014a20b80173b4
0918014a20b80172b40918014a20b80171b40918014a20b80170b4091801
4a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8
016cb40918014a20b8016bb40918014a20b8016ab40918014a20b80169b4
0918014a20b80168b40918014a20b80167b40918014a20b80166b4091801
4a20b80165b40918014a20b80164b40918014a20b80163b40918014a20b8
0162b40918014a20b80161b40918014a20b80160b40918014a20b8015fb4
0918014a20b8015eb40918014a20b8015db40918014a20b8015cb4091801
4a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b8
0158b40918014a20b80157b40918014a20b80156b40918014a20b80155b4
0918014a20b80154b40918014a20b80153b40918014a20b80152b4091801
4a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8
014cb40918014a20b8014bb40918014a20b8014ab40918014a20b80149b4
0918014a20b80148b40918014a20b80147b40918014a20b80146b4091801
4a20b80145b40918014a20b80144b40918014a20b80143b30918014ab802
84b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b2
1e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e
1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb8
0277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273
b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d
421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451f
b8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb802
66b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b2
1c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c44
1fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb8
0259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255
b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c
451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451f
b8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb802
48b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b2
1b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b49
1fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8
023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237
b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b
4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1f
b8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb802
2ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b2
1b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b
1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8
021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219
b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a
4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1f
b80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb802
0cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b2
1a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b21951
1fb80203b219501fb80202b219511fb80201b219511fb80200b219511fb8
01ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb801fb
b219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219
511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541f
b801f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801
eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801eab2
18541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b21853
1fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb8
01e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb801dd
b218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218
541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561f
b801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801
d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb2
17571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b21757
1fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb8
01c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bf
b217561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217
571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217571f
b801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801
b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2
165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e
1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb8
01a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1
b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db216
3f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1f
b80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb801
94b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2
165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f
1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb8
0187b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183
b215661fb80182b215661fb80181b215551fb80180b215451fb8017fb215
361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215621f
b8017ab215641fb80179b215661fb80178b215661fb80177b215661fb801
76b215661fb80175b215661fb80174b215661fb80173b215451fb80172b2
15621fb80171b215621fb80170b215631fb8016fb215641fb8016eb21566
1fb8016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb8
0169b215621fb80168b215621fb80167b215611fb80166b215641fb80165
b215641fb80164b215661fb80163b215661fb80162b215661fb80161b215
661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215451f
b8015cb215451fb8015bb215361fb8015ab215611fb80159b215621fb801
58b215621fb80157b215631fb80156b215641fb80155b215661fb80154b2
15661fb80153b215661fb80152b215661fb80151b214401fb80150b21455
1fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8
014bb214401fb8014ab214411fb80149b214401fb80148b214401fb80147
b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214
801fb80142b212461fb80141b212461fb80140b212461fb8013fb212461f
b8013eb212441fb8013db212461fb8013cb211591fb8013bb211591fb801
3ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2
115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b21147
1fb80131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8
012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129
b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211
561fb80124b211561fb80123b211571fb80122b211581fb80121b211591f
b80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb801
1cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2
105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f
1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8
010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010b
b2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b210
5f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1f
b80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631f
fd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f
641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641f
ee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f
641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681f
df0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d
6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1f
d00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d
6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311f
c10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731f
ba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c
741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1f
ab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b
7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f
9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b
7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f
8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f55
7d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557b
ab7a557955775578ab7755ba028600660285403c5576ab75550475147574
7503f47501ab750144750130750102007510752075030c7455725573ab72
55007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ff
c0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab67
556638645565ab645563386255613860555f385d555eab5d555c385a555b
ab5a55593858555703251f5638545555ab54555338515552ab51554f384e
554e03251f4d384b554cab4b554a38485549ab4855473846554503381f00
1c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b0400
1bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf
18024018292c460f17cf17df17ef1704134017292e460016101620160315
b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f16
2326460f15010f151f150245ef1501860003012001010001100120010308
b8ffc0b401151f4603bd0100010000050001019000542b4bb80800524bb0
08505bb00188b02553b00188b040515ab00688b000555a5b58b101018e59
b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b203a0
a01d42594bb0805358b20340401d42594bb0ff5358b20300001d42592b5e
7375732b58403d0011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
2b5e7375732b2b745e732b2b5e73742b73742b7374745e735901755e7374
2b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e
732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841
ff0284006402830064028200640281006402800064027f0064027e006402
7d0064027c0064027b0064027a0064027900640278006402770064027600
640275006402740064027300640271006402700064026f0064026e006402
6d0064026c0064026b0064026a0064026900640268006402670064026600
64026500640264006402630064026200640261006402600064025f006402
5e0064025d0064025c0064025b0064025a00640259006402580064025700
640256006402550064025400640253006402520064025100640250006402
4f0064024e0064024d0064024c0064024b0064024a006402490064024800
640247006402460064024500640244006402430064024200640241006402
400064023f0064023e0064023d0064023c0064023b0064023a0064023900
640238006402370064023600640235006402340064023300640232006402
31006402300064022f0064022e0064022d0064022c0064022b0064022a00
640229006402280064022700640226006402250064022400640223006402
2200640221006402200064021f0064021e0064021d0064021c0064021b00
64021a006402190064021800640217006402160064021500640214006402
130064021200640211006402100064020f0064020e0064020d0064020c00
64020b0064020a0064020900640208006402070064020600640205006402
0441ff00640203006402020064020100640200006401ff006401fe006401
fd006401fc006401fb006401fa006401f9006401f8006401f7006401f600
6401f5006401f4006401f3006401f2006401f1006401f0006401ef006401
ee006401ed006401ec006401eb006401ea006401e9006401e8006401e700
6401e6006401e5006401e4006401e3006401e2006401e1006401e0006401
df006401de006401dd006401dc006401db006401da006401d9006401d800
6401d7006401d6006401d5006401d4006401d3006401d2006401d1006401
d0006401cf006401ce006401cd006401cc006401cb006401ca006401c900
6401c8006401c7006401c6006401c5006401c4006401c3006401c2006401
c1006401c0006401bf006401be006401bd006401bc006401bb006401ba00
6401b9006401b8006401b7006401b6006401b5006401b4006401b3006401
b2006401b1006401b0006401af006401ae006401ad006401ac006401ab00
6401aa006401a9006401a8006401a7006401a6006401a5006401a4006401
a3006401a2006401a1006401a00064019f0064019e0064019d0064019c00
64019b0064019a0064019900640198006401970064019600640195006401
94006401930064019200640191006401900064018f0064018e0064018d00
64018c0064018b0064018a00640189006401880064018700640186006401
85006441800184006401830064018200640181006401800064017f006401
7e0064017d0064017c0064017b0064017a00640179006401780064017700
640176006401750064017400640173006401720064017100640170006401
6f0064016e0064016d0064016c0064016b0064016a006401690064016800
640167006401660064016500640164006401630064016200640161006401
600064015f0064015e0064015d0064015c0064015b0064015a0064015900
640158006401570064015600640155006401540064015300640152006401
500064014f0064014e0064014c0064014b0064014a006401490064014800
6401470064014600640145006401440064014300642b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
00737373737373742b2b2b2b2b2b2b2b2b2b185f5e0000>
[3373 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1166 3 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>MAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>MAAAAA+Calibri AddT42Char 
MAAAAA+Calibri /CharStrings get begin
/g3 3 def
end
MAAAAA+Calibri /Encoding get
dup 33 /g3 put
pop
end
%ADOEndSubsetFont
/GHVRLJ+Calibri /MAAAAA+Calibri findfont ct_VMDictPut/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 222{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf220.277 205.271 mo(!)sh197.744 237.863 mo
197.744 234.093 200.8 231.037 204.57 231.037 cv
208.341 231.037 211.397 234.093 211.397 237.863 cv
211.397 241.633 208.341 244.689 204.57 244.689 cv
200.8 244.689 197.744 241.633 197.744 237.863 cv
cp
0 0 0 0 cmyk
f
197.744 237.863 mo
197.744 234.093 200.8 231.037 204.57 231.037 cv
208.341 231.037 211.397 234.093 211.397 237.863 cv
211.397 241.633 208.341 244.689 204.57 244.689 cv
200.8 244.689 197.744 241.633 197.744 237.863 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 197.744 231.037 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 1570 4 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g4 4 def
end
GHVRLJ+Calibri /Encoding get
dup 34 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 221{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf201.602 241.751 mo(")sh236.649 237.863 mo
236.649 234.093 239.705 231.037 243.476 231.037 cv
247.246 231.037 250.302 234.093 250.302 237.863 cv
250.302 241.633 247.246 244.689 243.476 244.689 cv
239.705 244.689 236.649 241.633 236.649 237.863 cv
cp
0 0 0 0 cmyk
f
236.649 237.863 mo
236.649 234.093 239.705 231.037 243.476 231.037 cv
247.246 231.037 250.302 234.093 250.302 237.863 cv
250.302 241.633 247.246 244.689 243.476 244.689 cv
239.705 244.689 236.649 241.633 236.649 237.863 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 236.649 231.037 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 2934 7 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g7 7 def
end
GHVRLJ+Calibri /Encoding get
dup 35 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 /g7 220{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf240.507 241.751 mo(#)sh174.002 240.918 mo
174.002 237.093 177.103 233.992 180.928 233.992 cv
184.753 233.992 187.855 237.093 187.855 240.918 cv
187.855 244.743 184.753 247.844 180.928 247.844 cv
177.103 247.844 174.002 244.743 174.002 240.918 cv
cp
0 0 0 0 cmyk
f
174.002 240.918 mo
174.002 237.093 177.103 233.992 180.928 233.992 cv
184.753 233.992 187.855 237.093 187.855 240.918 cv
187.855 244.743 184.753 247.844 180.928 247.844 cv
177.103 247.844 174.002 244.743 174.002 240.918 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 174.002 233.992 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf177.959 244.871 mo(!)sh153.838 206.247 mo
153.838 202.422 156.939 199.321 160.765 199.321 cv
164.59 199.321 167.691 202.422 167.691 206.247 cv
167.691 210.072 164.59 213.173 160.765 213.173 cv
156.939 213.173 153.838 210.072 153.838 206.247 cv
cp
0 0 0 0 cmyk
f
153.838 206.247 mo
153.838 202.422 156.939 199.321 160.765 199.321 cv
164.59 199.321 167.691 202.422 167.691 206.247 cv
167.691 210.072 164.59 213.173 160.765 213.173 cv
156.939 213.173 153.838 210.072 153.838 206.247 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 153.838 199.321 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf157.796 210.311 mo(")sh117.815 207.023 mo
117.815 203.198 120.916 200.097 124.742 200.097 cv
128.567 200.097 131.668 203.198 131.668 207.023 cv
131.668 210.848 128.567 213.949 124.742 213.949 cv
120.916 213.949 117.815 210.848 117.815 207.023 cv
cp
0 0 0 0 cmyk
f
117.815 207.023 mo
117.815 203.198 120.916 200.097 124.742 200.097 cv
128.567 200.097 131.668 203.198 131.668 207.023 cv
131.668 210.848 128.567 213.949 124.742 213.949 cv
120.916 213.949 117.815 210.848 117.815 207.023 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 117.815 200.097 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 1944 5 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g5 5 def
end
GHVRLJ+Calibri /Encoding get
dup 36 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 /g7 /g5 219{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf121.773 211.031 mo($)sh95.7607 241.657 mo
95.7607 237.832 98.8617 234.731 102.687 234.731 cv
106.512 234.731 109.614 237.832 109.614 241.657 cv
109.614 245.482 106.512 248.583 102.687 248.583 cv
98.8617 248.583 95.7607 245.482 95.7607 241.657 cv
cp
0 0 0 0 cmyk
f
95.7607 241.657 mo
95.7607 237.832 98.8618 234.731 102.687 234.731 cv
106.513 234.731 109.614 237.832 109.614 241.657 cv
109.614 245.482 106.513 248.583 102.687 248.583 cv
98.8618 248.583 95.7607 245.482 95.7607 241.657 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 95.7607 234.731 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 2498 6 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g6 6 def
end
GHVRLJ+Calibri /Encoding get
dup 37 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 /g7 /g5 /g6 218{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf99.7182 245.591 mo(%)sh114.653 275.058 mo
114.653 271.233 117.754 268.132 121.579 268.132 cv
125.405 268.132 128.506 271.233 128.506 275.058 cv
128.506 278.883 125.405 281.984 121.579 281.984 cv
117.754 281.984 114.653 278.883 114.653 275.058 cv
cp
0 0 0 0 cmyk
f
114.653 275.058 mo
114.653 271.233 117.754 268.132 121.579 268.132 cv
125.405 268.132 128.506 271.233 128.506 275.058 cv
128.506 278.883 125.405 281.984 121.579 281.984 cv
117.754 281.984 114.653 278.883 114.653 275.058 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 114.653 268.132 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf118.61 278.951 mo(#)sh154.058 275.124 mo
154.058 271.299 157.16 268.198 160.985 268.198 cv
164.81 268.198 167.911 271.299 167.911 275.124 cv
167.911 278.949 164.81 282.05 160.985 282.05 cv
157.16 282.05 154.058 278.949 154.058 275.124 cv
cp
0 0 0 0 cmyk
f
154.058 275.124 mo
154.058 271.299 157.16 268.198 160.985 268.198 cv
164.81 268.198 167.911 271.299 167.911 275.124 cv
167.911 278.949 164.81 282.05 160.985 282.05 cv
157.16 282.05 154.058 278.949 154.058 275.124 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 154.058 268.198 ]ct
@
grestore newpath
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 382 1 <0002006bffed03bd05200034004800c6b0852b58b9004affc040170f024d
604a012b753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a
35016a35014b35013a35012b350135b80243b670000120000100b8ffe0b3
0f014d00b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff303005
26b80100b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b
5d5de15d5d5d5d5d12392f10e15d5d5d5d5d3231305d2b1b4009303aff6c
3030051326b80100b46c13590544b80115b26c055f00183f2b3f2b12392f
2b30315901140e0223222e0435343e0433321e0615140e0223222e022322
0e02073e0333321e0207342e0223220e0207141e0233323e0203bd346ca6
71517c5c3d2510122e4f77a66e254c402c0e07040201070b090b26364d33
5d865529031a414d563169905926ae17365a42254a453f1a213f5e3f405e
3e1d01a3559f7949284a6c8aa45e53aa9e8b673c090f120b0d0f130e121a
10080e110e4c80a95c0f1e180f396589603a5f42240d171f1281ae692d30
5165>GHVRLJ+Calibri AddT42Char 
1 3356 8 <ffff006bffed03bd0520020600010000>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g8 8 def
end
GHVRLJ+Calibri /Encoding get
dup 38 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 /g7 /g5 /g6 /g8 217{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf158.016 279.191 mo(&)sh224.158 251.908 mo
224.158 269.738 li
222.398 269.738 li
222.398 251.908 li
cp
225.917 268.858 mo
223.278 274.136 li
220.639 268.858 li
cp
f
%ADOBeginSubsetFont: OAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003940000002ec
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d747800000000000014000000000c6c6f6361000000000000140c
000000086d6178700000000000001414000000206e616d65000000000000
143400000020707265700000000000001454000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000003040e000003fc009e03fc
005e000000bf012b0176000100000003004f00050000000000020010002f
0087000012360235000000000000000100120001000000000006000e0000
4141414141492b43616c69627269b10903415302c802c60038001f02c702
c60038001f02dd003802da005502d9003802d7005502d8003802d7005502
d6003802d5005502d4003802d3005502d2003802d1005502bf003802be00
5502bd003802bc0055000402db003402db005402db0003003402db005402
db006402db00a402db00d402db0005006b02d50001000b02d10001001402
c2004402c2006402c2007402c2009402c2000500a402be000100a402bc00
0100200284b40918014a20b80283b40918014a20b80282b40918014a20b8
0281b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb4
0918014a20b8027db40918014a20b8027cb40918014a20b8027bb4091801
4a20b8027ab40918014a20b80279b40918014a20b80278b40918014a20b8
0277b40918014a20b80276b40918014a20b80275b40918014a20b80274b4
0918014a20b80273b40918014a20b80271b40918014a20b80270b4091801
4a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8
026cb40918014a20b8026bb40918014a20b8026ab40918014a20b80269b4
0918014a20b80268b40918014a20b80267b40918014a20b80266b4091801
4a20b80265b40918014a20b80264b40918014a20b80263b40918014a20b8
0262b40918014a20b80261b40918014a20b80260b40918014a20b8025fb4
0918014a20b8025eb40918014a20b8025db40918014a20b8025cb4091801
4a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b8
0258b40918014a20b80257b40918014a20b80256b40918014a20b80255b4
0918014a20b80254b40918014a20b80253b40918014a20b80252b4091801
4a20b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8
024eb40918014a20b8024db40918014a20b8024cb40918014a20b8024bb4
0918014a20b8024ab40918014a20b80249b40918014a20b80248b4091801
4a20b80247b40918014a20b80246b40918014a20b80245b40918014a20b8
0244b40918014a20b80243b40918014a20b80242b40918014a20b80241b4
0918014a20b80240b40918014a20b8023fb40918014a20b8023eb4091801
4a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8
023ab40918014a20b80239b40918014a20b80238b40918014a20b80237b4
0918014a20b80236b40918014a20b80235b40918014a20b80234b4091801
4a20b80233b40918014a20b80232b40918014a20b80231b40918014a20b8
0230b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db4
0918014a20b8022cb40918014a20b8022bb40918014a20b8022ab4091801
4a20b80229b40918014a20b80228b40918014a20b80227b40918014a20b8
0226b40918014a20b80225b40918014a20b80224b40918014a20b80223b4
0918014a20b80222b40918014a20b80221b40918014a20b80220b4091801
4a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8
021cb40918014a20b8021bb40918014a20b8021ab40918014a20b80219b4
0918014a20b80218b40918014a20b80217b40918014a20b80216b4091801
4a20b80215b40918014a20b80214b40918014a20b80213b40918014a20b8
0212b40918014a20b80211b40918014a20b80210b40918014a20b8020fb4
0918014a20b8020eb40918014a20b8020db40918014a20b8020cb4091801
4a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b8
0208b40918014a20b80207b40918014a20b80206b40918014a20b80205b4
0918014a20b80204b40918014a20b80203b40918014a20b80202b4091801
4a20b80201b40918014a20b80200b40918014a20b801ffb40918014a20b8
01feb40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb4
0918014a20b801fab40918014a20b801f9b40918014a20b801f8b4091801
4a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b8
01f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b4
0918014a20b801f0b40918014a20b801efb40918014a20b801eeb4091801
4a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b8
01eab40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b4
0918014a20b801e6b40918014a20b801e5b40918014a20b801e4b4091801
4a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b8
01e0b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb4
0918014a20b801dcb40918014a20b801dbb40918014a20b801dab4091801
4a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b8
01d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b4
0918014a20b801d2b40918014a20b801d1b40918014a20b801d0b4091801
4a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b8
01ccb40918014a20b801cbb40918014a20b801cab40918014a20b801c9b4
0918014a20b801c8b40918014a20b801c7b40918014a20b801c6b4091801
4a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b8
01c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb4
0918014a20b801beb40918014a20b801bdb40918014a20b801bcb4091801
4a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b8
01b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b4
0918014a20b801b4b40918014a20b801b3b40918014a20b801b2b4091801
4a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b8
01aeb40918014a20b801adb40918014a20b801acb40918014a20b801abb4
0918014a20b801aab40918014a20b801a9b40918014a20b801a8b4091801
4a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b8
01a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b4
0918014a20b801a0b40918014a20b8019fb40918014a20b8019eb4091801
4a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8
019ab40918014a20b80199b40918014a20b80198b40918014a20b80197b4
0918014a20b80196b40918014a20b80195b40918014a20b80194b4091801
4a20b80193b40918014a20b80192b40918014a20b80191b40918014a20b8
0190b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db4
0918014a20b8018cb40918014a20b8018bb40918014a20b8018ab4091801
4a20b80189b40918014a20b80188b40918014a20b80187b40918014a20b8
0186b40918014a20b80185b40918014a20b80184b40918014a20b80183b4
0918014a20b80182b40918014a20b80181b40918014a20b80180b4091801
4a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8
017cb40918014a20b8017bb40918014a20b8017ab40918014a20b80179b4
0918014a20b80178b40918014a20b80177b40918014a20b80176b4091801
4a20b80175b40918014a20b80174b40918014a20b80173b40918014a20b8
0172b40918014a20b80171b40918014a20b80170b40918014a20b8016fb4
0918014a20b8016eb40918014a20b8016db40918014a20b8016cb4091801
4a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b8
0168b40918014a20b80167b40918014a20b80166b40918014a20b80165b4
0918014a20b80164b40918014a20b80163b40918014a20b80162b4091801
4a20b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8
015eb40918014a20b8015db40918014a20b8015cb40918014a20b8015bb4
0918014a20b8015ab40918014a20b80159b40918014a20b80158b4091801
4a20b80157b40918014a20b80156b40918014a20b80155b40918014a20b8
0154b40918014a20b80153b40918014a20b80152b40918014a20b80150b4
0918014a20b8014fb40918014a20b8014eb40918014a20b8014cb4091801
4a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b8
0148b40918014a20b80147b40918014a20b80146b40918014a20b80145b4
0918014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb8
0283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027f
b21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e
3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431f
b80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb802
72b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb2
1d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c45
1fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb8
0265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261
b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c
451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451f
b80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb802
54b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b2
1c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c45
1fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb8
0247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243
b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b
4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1f
b8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb802
36b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b2
1b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c
1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb8
0229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225
b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b
4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1f
b8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb802
18b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b2
1a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e
1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8
020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207
b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219
501fb80202b219511fb80201b219511fb80200b219511fb801ffb219511f
b801feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801
fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b2
19511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b21854
1fb801f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb8
01edb218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9
b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218
541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541f
b801e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801
dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b2
18541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b21757
1fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb8
01cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cb
b217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217
571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561f
b801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801
beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab2
17571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b21757
1fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb8
01b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801ad
b2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b216
3f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1f
b801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801
a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2
165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e
1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb8
0193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018f
b2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb216
5b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1f
b80186b215611fb80185b215621fb80184b215621fb80183b215661fb801
82b215661fb80181b215551fb80180b215451fb8017fb215361fb8017eb2
15361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab21564
1fb80179b215661fb80178b215661fb80177b215661fb80176b215661fb8
0175b215661fb80174b215661fb80173b215451fb80172b215621fb80171
b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215
661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215621f
b80168b215621fb80167b215611fb80166b215641fb80165b215641fb801
64b215661fb80163b215661fb80162b215661fb80161b215661fb80160b2
15661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb21545
1fb8015bb215361fb8015ab215611fb80159b215621fb80158b215621fb8
0157b215631fb80156b215641fb80155b215661fb80154b215661fb80153
b215661fb80152b215661fb80151b214401fb80150b214551fb8014fb214
561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401f
b8014ab214411fb80149b214401fb80148b214401fb80147b214411fb801
46b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b2
12461fb80141b212461fb80140b212461fb8013fb212461fb8013eb21244
1fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb8
0139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135
b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211
551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211591f
b8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb801
28b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b2
11561fb80123b211571fb80122b211581fb80121b211591fb80120b2115a
1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8
011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117
b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b210
5f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1f
b8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb801
0ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2
105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f
1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f
621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641f
f40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f
621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671f
e50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e
681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311f
d60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d
2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1f
c70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ff
c00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c
741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741f
b10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b
7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1f
a20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b
7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f
930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0a
a71f8503251f8403381f8301381f8255805581ab80557f557d557eab7d55
0b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a55795577
5578ab7755ba028600660285403c5576ab755504751475747503f47501ab
750144750130750102007510752075030c7455725573ab72550072507280
72b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d10
4671556f5570ab6f556e666d556a03251f6938675568ab67556638645565
ab645563386255613860555f385d555eab5d555c385a555bab5a55593858
555703251f5638545555ab54555338515552ab51554f384e554e03251f4d
384b554cab4b554a38485549ab4855473846554503381f001c101c201c03
10b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03
120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c
460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d
5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f162326460f1501
0f151f150245ef1501860003012001010001100120010308b8ffc0b40115
1f4603bd0100010000050001019000542b4bb80800524bb008505bb00188
b02553b00188b040515ab00688b000555a5b58b101018e59b101024354b0
144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0
805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b5840
3d0011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f
0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d31
3746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d
30460003012001010001100120010308b8ffc0b301151f462b5e7375732b
2b745e732b2b5e73742b73742b7374745e735901755e73742b2b2b2b5e73
2b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f
73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402
830064028200640281006402800064027f0064027e0064027d0064027c00
64027b0064027a0064027900640278006402770064027600640275006402
740064027300640271006402700064026f0064026e0064026d0064026c00
64026b0064026a0064026900640268006402670064026600640265006402
64006402630064026200640261006402600064025f0064025e0064025d00
64025c0064025b0064025a00640259006402580064025700640256006402
5500640254006402530064025200640251006402500064024f0064024e00
64024d0064024c0064024b0064024a006402490064024800640247006402
460064024500640244006402430064024200640241006402400064023f00
64023e0064023d0064023c0064023b0064023a0064023900640238006402
370064023600640235006402340064023300640232006402310064023000
64022f0064022e0064022d0064022c0064022b0064022a00640229006402
280064022700640226006402250064022400640223006402220064022100
6402200064021f0064021e0064021d0064021c0064021b0064021a006402
190064021800640217006402160064021500640214006402130064021200
640211006402100064020f0064020e0064020d0064020c0064020b006402
0a00640209006402080064020700640206006402050064020441ff006402
03006402020064020100640200006401ff006401fe006401fd006401fc00
6401fb006401fa006401f9006401f8006401f7006401f6006401f5006401
f4006401f3006401f2006401f1006401f0006401ef006401ee006401ed00
6401ec006401eb006401ea006401e9006401e8006401e7006401e6006401
e5006401e4006401e3006401e2006401e1006401e0006401df006401de00
6401dd006401dc006401db006401da006401d9006401d8006401d7006401
d6006401d5006401d4006401d3006401d2006401d1006401d0006401cf00
6401ce006401cd006401cc006401cb006401ca006401c9006401c8006401
c7006401c6006401c5006401c4006401c3006401c2006401c1006401c000
6401bf006401be006401bd006401bc006401bb006401ba006401b9006401
b8006401b7006401b6006401b5006401b4006401b3006401b2006401b100
6401b0006401af006401ae006401ad006401ac006401ab006401aa006401
a9006401a8006401a7006401a6006401a5006401a4006401a3006401a200
6401a1006401a00064019f0064019e0064019d0064019c0064019b006401
9a0064019900640198006401970064019600640195006401940064019300
64019200640191006401900064018f0064018e0064018d0064018c006401
8b0064018a00640189006401880064018700640186006401850064418001
84006401830064018200640181006401800064017f0064017e0064017d00
64017c0064017b0064017a00640179006401780064017700640176006401
7500640174006401730064017200640171006401700064016f0064016e00
64016d0064016c0064016b0064016a006401690064016800640167006401
660064016500640164006401630064016200640161006401600064015f00
64015e0064015d0064015c0064015b0064015a0064015900640158006401
570064015600640155006401540064015300640152006401500064014f00
64014e0064014c0064014b0064014a006401490064014800640147006401
4600640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b007373737373
73742b2b2b2b2b2b2b2b2b2b185f5e0000>
[749 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 382 1 <0001009e029c03570588002f0037b0852b58400e1e281f272f17070f1006
0a0b230b002f2f12173931301b400e1e281f272f17070f10060a0b230b00
182f2f121739303159011606070606272713160623222637130706262726
26373727263637363617170326363332160703373616171616070703490e
0217171d0cd51c03202e2e20031cd40c1e1717010ef1f10e0117171e0cd4
1c03202e2e20031cd50c1d1717020ef103a70623272812099bfefa0f1010
0f01069b0912282723066b6a0723272712099a010510101010fefb9a0912
282623076a00>OAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>OAAAAA+Calibri AddT42Char 
OAAAAA+Calibri /CharStrings get begin
/g1 1 def
end
OAAAAA+Calibri /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
/GHVRLK+Calibri /OAAAAA+Calibri findfont ct_VMDictPut/GHVRLK+Calibri*1 [33{/.notdef}rp /g1 222{/.notdef}rp]GHVRLK+Calibri nfGHVRLK+Calibri*1 [18 0 0 -17.9988 0 0 ]msf169.85 454.391 mo(!)sh262.966 401.658 mo
224.019 401.658 li
.251957 .1991 .204257 0 cmyk
gsave
[-4.61778e-05 0 0 4.61748e-05 262.966 401.658 ]ct
@
grestore newpath
262.812 401.513 mo
281.358 435.197 li
gsave
[4.61778e-05 0 0 4.61748e-05 262.812 401.513 ]ct
@
grestore newpath
263.044 401.723 mo
222.089 470.385 li
gsave
[-4.61778e-05 0 0 4.61748e-05 263.044 401.723 ]ct
@
grestore newpath
281.206 435.303 mo
260.733 470.512 li
gsave
[-4.61778e-05 0 0 4.61748e-05 281.206 435.303 ]ct
@
grestore newpath
223.518 401.355 mo
203.42 435.918 li
gsave
[-4.61778e-05 0 0 4.61748e-05 223.518 401.355 ]ct
@
grestore newpath
223.753 401.815 mo
261.593 470.547 li
gsave
[4.61778e-05 0 0 4.61748e-05 223.753 401.815 ]ct
@
grestore newpath
280.698 435.73 mo
203.67 435.73 li
gsave
[-4.61778e-05 0 0 4.61748e-05 280.698 435.73 ]ct
@
grestore newpath
261.282 470.275 mo
221.8 470.275 li
gsave
[-4.61778e-05 0 0 4.61748e-05 261.282 470.275 ]ct
@
grestore newpath
203.541 435.595 mo
222.365 469.784 li
gsave
[4.61778e-05 0 0 4.61748e-05 203.541 435.595 ]ct
@
grestore newpath
255.328 401.739 mo
255.328 397.852 258.479 394.702 262.365 394.702 cv
266.252 394.702 269.403 397.852 269.403 401.739 cv
269.403 405.625 266.252 408.776 262.365 408.776 cv
258.479 408.776 255.328 405.625 255.328 401.739 cv
cp
0 0 0 0 cmyk
f
255.328 401.739 mo
255.328 397.852 258.479 394.702 262.365 394.702 cv
266.252 394.702 269.403 397.852 269.403 401.739 cv
269.403 405.625 266.252 408.776 262.365 408.776 cv
258.479 408.776 255.328 405.625 255.328 401.739 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 255.328 394.702 ]ct
@
grestore newpath
216.622 402.618 mo
216.622 398.732 219.772 395.581 223.659 395.581 cv
227.546 395.581 230.697 398.732 230.697 402.618 cv
230.697 406.505 227.546 409.655 223.659 409.655 cv
219.772 409.655 216.622 406.505 216.622 402.618 cv
cp
0 0 0 0 cmyk
f
216.622 402.618 mo
216.622 398.732 219.772 395.581 223.659 395.581 cv
227.546 395.581 230.697 398.732 230.697 402.618 cv
230.697 406.505 227.546 409.655 223.659 409.655 cv
219.772 409.655 216.622 406.505 216.622 402.618 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 216.622 395.581 ]ct
@
grestore newpath
197.855 433.992 mo
197.855 430.105 201.006 426.955 204.892 426.955 cv
208.779 426.955 211.93 430.105 211.93 433.992 cv
211.93 437.878 208.779 441.029 204.892 441.029 cv
201.006 441.029 197.855 437.878 197.855 433.992 cv
cp
0 0 0 0 cmyk
f
197.855 433.992 mo
197.855 430.105 201.006 426.955 204.892 426.955 cv
208.779 426.955 211.93 430.105 211.93 433.992 cv
211.93 437.878 208.779 441.029 204.892 441.029 cv
201.006 441.029 197.855 437.878 197.855 433.992 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 197.855 426.955 ]ct
@
grestore newpath
213.983 468.297 mo
213.983 464.411 217.133 461.26 221.02 461.26 cv
224.907 461.26 228.058 464.411 228.058 468.297 cv
228.058 472.184 224.907 475.334 221.02 475.334 cv
217.133 475.334 213.983 472.184 213.983 468.297 cv
cp
0 0 0 0 cmyk
f
213.983 468.297 mo
213.983 464.411 217.133 461.26 221.02 461.26 cv
224.907 461.26 228.058 464.411 228.058 468.297 cv
228.058 472.184 224.907 475.334 221.02 475.334 cv
217.133 475.334 213.983 472.184 213.983 468.297 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 213.983 461.26 ]ct
@
grestore newpath
252.982 469.763 mo
252.982 465.877 256.133 462.726 260.02 462.726 cv
263.906 462.726 267.057 465.877 267.057 469.763 cv
267.057 473.65 263.906 476.8 260.02 476.8 cv
256.133 476.8 252.982 473.65 252.982 469.763 cv
cp
0 0 0 0 cmyk
f
252.982 469.763 mo
252.982 465.877 256.133 462.726 260.019 462.726 cv
263.906 462.726 267.057 465.877 267.057 469.763 cv
267.057 473.65 263.906 476.8 260.019 476.8 cv
256.133 476.8 252.982 473.65 252.982 469.763 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 252.982 462.726 ]ct
@
grestore newpath
272.628 436.044 mo
272.628 432.158 275.779 429.007 279.666 429.007 cv
283.553 429.007 286.703 432.158 286.703 436.044 cv
286.703 439.931 283.553 443.081 279.666 443.081 cv
275.779 443.081 272.628 439.931 272.628 436.044 cv
cp
0 0 0 0 cmyk
f
272.628 436.044 mo
272.628 432.158 275.779 429.007 279.666 429.007 cv
283.553 429.007 286.703 432.158 286.703 436.044 cv
286.703 439.931 283.553 443.081 279.666 443.081 cv
275.779 443.081 272.628 439.931 272.628 436.044 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 272.628 429.007 ]ct
@
grestore newpath
234.802 435.458 mo
234.802 431.571 237.953 428.421 241.839 428.421 cv
245.726 428.421 248.877 431.571 248.877 435.458 cv
248.877 439.344 245.726 442.495 241.839 442.495 cv
237.953 442.495 234.802 439.344 234.802 435.458 cv
cp
0 0 0 0 cmyk
f
234.802 435.458 mo
234.802 431.571 237.953 428.421 241.839 428.421 cv
245.726 428.421 248.877 431.571 248.877 435.458 cv
248.877 439.344 245.726 442.495 241.839 442.495 cv
237.953 442.495 234.802 439.344 234.802 435.458 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 234.802 428.421 ]ct
@
grestore newpath
431.468 440.546 mo
390.935 510.252 li
.765255 .551598 0 0 cmyk
gsave
[3.99202e-05 2.32099e-05 -2.32114e-05 3.99176e-05 431.468 440.546 ]ct
@
grestore newpath
394.159 373.349 mo
357.009 373.343 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 394.159 373.349 ]ct
@
grestore newpath
393.962 373.15 mo
431.364 441.084 li
gsave
[4.61778e-05 0 0 4.61748e-05 393.962 373.15 ]ct
@
grestore newpath
395.2 368.382 mo
329.227 478.987 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 395.2 368.382 ]ct
@
grestore newpath
412.399 405.82 mo
348.2 515.659 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 412.399 405.82 ]ct
@
grestore newpath
356.203 369.306 mo
315.519 439.271 li
gsave
[3.99202e-05 2.32099e-05 -2.32114e-05 3.99176e-05 356.203 369.306 ]ct
@
grestore newpath
356.346 374.876 mo
411.398 474.868 li
gsave
[4.61778e-05 0 0 4.61748e-05 356.346 374.876 ]ct
@
grestore newpath
413.156 406.26 mo
336.748 406.247 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 413.156 406.26 ]ct
@
grestore newpath
430.711 440.536 mo
313.075 440.516 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 430.711 440.536 ]ct
@
grestore newpath
334.734 406.112 mo
391.44 509.109 li
gsave
[4.61778e-05 0 0 4.61748e-05 334.734 406.112 ]ct
@
grestore newpath
313.931 442.422 mo
352.186 511.907 li
gsave
[3.99202e-05 2.32099e-05 -2.32114e-05 3.99176e-05 313.931 442.422 ]ct
@
grestore newpath
412.264 474.914 mo
335.968 474.902 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 412.264 474.914 ]ct
@
grestore newpath
391.046 509.478 mo
352.975 509.471 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 391.046 509.478 ]ct
@
grestore newpath
165.845 445.859 mo
126.039 514.317 li
gsave
[-4.61778e-05 0 0 4.61748e-05 165.845 445.859 ]ct
@
grestore newpath
128.17 377.416 mo
89.382 377.41 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 -4.61748e-05 128.17 377.416 ]ct
@
grestore newpath
128.339 378.463 mo
165.227 445.464 li
gsave
[3.99202e-05 2.32099e-05 -2.32114e-05 3.99176e-05 128.339 378.463 ]ct
@
grestore newpath
128.112 378.251 mo
64.5944 484.741 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 128.112 378.251 ]ct
@
grestore newpath
146.776 411.133 mo
87.0564 513.836 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 146.776 411.133 ]ct
@
grestore newpath
89.2597 377.308 mo
49.5139 445.66 li
gsave
[-4.61778e-05 0 0 4.61748e-05 89.2597 377.308 ]ct
@
grestore newpath
89.4054 377.797 mo
145.046 478.858 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[4.61778e-05 0 0 4.61748e-05 89.4054 377.797 ]ct
@
grestore newpath
146.292 411.573 mo
69.1728 411.573 li
gsave
[-4.61778e-05 0 0 4.61748e-05 146.292 411.573 ]ct
@
grestore newpath
165.425 445.83 mo
49.5676 445.83 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-4.61778e-05 0 0 4.61748e-05 165.425 445.83 ]ct
@
grestore newpath
68.9291 411.32 mo
125.651 514.347 li
gsave
[4.61778e-05 0 0 4.61748e-05 68.9291 411.32 ]ct
@
grestore newpath
49.5905 445.953 mo
87.306 514.457 li
.765255 .551598 0 0 cmyk
[] 0 dsh
gsave
[4.61778e-05 0 0 4.61748e-05 49.5905 445.953 ]ct
@
grestore newpath
146.641 480.228 mo
70.3448 480.215 li
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 146.641 480.228 ]ct
@
grestore newpath
125.423 514.131 mo
87.3524 514.125 li
.369879 .299321 .304356 .000976577 cmyk
[19050 19050 ] 0 dsh
gsave
[-3.99202e-05 -2.32099e-05 -2.32114e-05 3.99176e-05 125.423 514.131 ]ct
@
grestore newpath
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: IAAAAA+DengXian-Regular AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLH+DengXian-Regular gcheck setglobal} if
1 5474 14 <00020075fedd0785063d004a009c004f40254b0c33293b3b0c6b5f725f8a
8a0c2000270046460c569a5d9a95950c17091e0904047c0c7c002f2f1239
2f3333113311392f3333113311392f3333113311392f3333113311392f33
321133303101333637232207351633333637171615160706070607060721
323715262321060721323715262321060721323702071617161707262537
161736372122072627363736373637232207351601171615160706070607
060733323715262323060333353427171617140706071533323715262323
113637061706071114172336353506072627262736371123220726272627
3637363723220735163333360400ac230e7558473966842202aa1b021630
0e04060a0701175c444c54fed7191801be50523d65fe2d1e3401c35068d3
813666351f50f6fea24c7d8b6f70fe814f4a19252f13181d0a0493485642
fe419e1902172b1d0c120807bd5c44544cdd387dde0da01f021d2302755e
44465c75ea6c1002aa9e0d8c0dcb9c020e1f10cfd7de4b4a02041512431d
5e44644e504c528143037f93650c7a0cdb892d080608112054172739250c
7a0c896f0c7b0d739a0dfea4cf274223146fcdc368505ca2dd1845331327
376a23110d7b0c02ba410a0b080e1d5421411f120c7f0cacfec38f507315
040c0a111c52a40c7f0cfef43c43683a2731ff004e60525ce03e4c062354
1f2145012f0c060b3b2f0a3eb8e10c7f0ce3>GHVRLH+DengXian-Regular AddT42Char 
1 4872 13 <0009007fff37077505d700350049004d005100550059005d00610065011a
4029585301534a275701575250561e00580001004f1509091c615c63630c
0446e04af04a024f4a6f4a024ab8ffc0404e090c481f522f52af52cf5204
d052e052f052037f520140525052023f5201df5601b05601d056e056f056
038f569f560260567056022f563f56020056105602ef4f01d84f01032b4f
3b4fcb4f034fb8ffc040241619488b4f9b4f02644f01504f0102404f012f
043f04cf0403e004f004028f049f040204b8ffc04022090e482f46018f46
9f46024a52564f044646044f56524a062b605b3b624b2430302b002f3311
33332f3333331217392f2f2f2f2f2f5d712b5d5d715d5f5d5d5d2b715f71
715d5d5d5d5d71715d5d5d5d712b5d5d111239331133333232113311335d
1133113311337111335d3031012136372122073516332136371716171407
060706072116371526232106072116370617113316371526072126073516
373311342716033536271637211637061715061726072126073613152135
11211521011521352515213513211521213521152515213502500100160f
fdf34b50524902251302951d02192004070a02c935443c3dfd1b15120204
35540e02b2334a4e2bfa0a394e4243c30d58dd020e4e3f04a831540e0202
0e4938fb5f46520efe03a2fc5e03a2fc5e03a2fc5e03a291fea4015cfe3e
feaafe54014502c743420c760c5a2d1d06080a0c110e1314020e760c483d
020e403dfd4c020e770f02020f770e0202a0434e0c01dbae41460e02020e
3b42ae354a0e02020e40fbba858502466dfee96c6cc16a6a03c3d5d5d5d5
d5d5>GHVRLH+DengXian-Regular AddT42Char 
1 784 3 <0004003dfee107ba0627005d0067006d0079003b401b55790870146c0869
14473d39391460424214240c260c0808531453002f2f12392f3333113311
392f3311392f333211331133113311333230311324132122073516332136
372122073516332136271716151607060706072132371526072106072132
371526072112050607242706070607060526271633323736372111061514
372116373637161706070627212227263711342706072601163321323726
2721060137161707260536371716150607060706073d017bfafe54435d5b
4501e8331efe634460604401b83c03a41b0219270a181b026f4d616747fd
781e2b034e4d616543fe99ae01aa3f23fef49a0206080404fe8f06313b38
c0020806fd8902d101a8873035104052484641b2fe129c3539020d9fec2b
020a4a3e01cc4a445448fe694afe956191716770029b924b791b021d271e
4a5a010e7d013a0d7f0c54640c7f0ce1fc1f04080815214bb2770c7f0e02
62560c7f0f02fee9543b4c6a841b46622bba054646065c335afe2d0b065a
07023935aa3910c9333c04252369018b354c81893f011f0d0d5a75690321
54898a5a986baaaa450f0c0a080b2f6e7700>GHVRLH+DengXian-Regular AddT42Char 
1 3562 10 <0005003dfedb07bc060a000b001f002300290063002f401525280a02211e
1e3a493050302b2b3a1320205a3a5a002f2f12392f3311392f3333113311
392f33333233323031052413171614072207060726133637112627161721
323706071116172623210613112111010702033716012322073516173311
060726271633203717160623222726232207060706071133363715262323
1516170607262711161723363511060726273602bc010fcd87181a2f5077
e344f20a02020a705201ae408d0a02020a8940fe504e050247010872bdbe
6c98faf89841736852a26ca615293b1c015ff440120609090f0c15293d25
411d0c9b3c7577389dbc8b372347a6020a870c758f4a50d19ca201cf5410
0d068fcdfc3a02f3714302304b690a030d733dfdcc3b790d03031bfd4e02
b2fa17500145011743e302bd0d7b0a0201430a18494002686a1f0903030d
060f0602fea6020a7b0d719a792d41717ffd0e4a7f774e02f6fcf22b16b7
>GHVRLH+DengXian-Regular AddT42Char 
GHVRLH+DengXian-Regular /CharStrings get begin
/g14 14 def
/g13 13 def
/g3 3 def
/g10 10 def
end
GHVRLH+DengXian-Regular /Encoding get
dup 43 /g14 put
dup 44 /g13 put
dup 45 /g3 put
dup 46 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLH+DengXian-Regular*1 [33{/.notdef}rp /g12 /g6 /g7 /g1 /g8 /g4 /g9 /g2 /g11 /g5 /g14 /g13 /g3 /g10 209{/.notdef}rp]GHVRLH+DengXian-Regular nfGHVRLH+DengXian-Regular*1 [14 0 0 -13.9991 0 0 ]msf210.623 371.831 mo(+,-.)[14.0756 14.0756 14.0756 0 ]xsh55.8622 479.449 mo
55.8622 473.573 60.6261 468.809 66.5026 468.809 cv
72.3791 468.809 77.143 473.573 77.143 479.449 cv
77.143 485.325 72.3791 490.089 66.5026 490.089 cv
60.6261 490.089 55.8622 485.325 55.8622 479.449 cv
cp
.467353 0 .87747 0 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+CambriaMath
Type42DictBegin
[<000100000008000800080008676c79660000000000000148000002266865
6164000000000000008c000000366868656100000000000000c400000024
686d747800000000000000e8000000106c6f636100000000000000f80000
000a6d6178700000000000000104000000206e616d650000000000000124
0000002467646972000000000000000000000000000100000006e66638ef
545c5f0f3cf5001b080000000000b9e6983d00000000d18d01e4f434ec4a
16f118ef00000009000200000000000000010000079afe390000175af434
fda416f1000100000000000000000000000000000004054400be04750069
0450005c03ae006900000050009e00e30113000000010000000400350004
0000000000020010002f0086000009a41128000000000000000100120001
0000000000060012000041414141414b2b43616d627269614d61746800>
[551 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 316 2 <0002005cfff003e705960018002d00003707270136353426273f01330317
3e01333216151402062322030615141633323e0435342623220e0207f85c
4001031733420cfd3ab00d61aa556d7985ec92850f0f4550294a4d453a20
3b41305d7248193141100477662e2a22023409fd44048274a697a5fec1bb
016c46424f461b3e6594a94d68683d8d9473>QAAAAA+CambriaMath AddT42Char 
1 0 0 <000400be0000048605540028002c0030003400000135343e02373e033534
2623220e020723353e0133321e0215140e02070e031d0117152335011121
1101112111023706162a2417261b0f413e2030241909603c894346633e1c
0f243c2c20261507129001fcfd060361fc3801e71616252a3527192f3339
234b521424321e821e2e1d334629263e3d462d212c27281c066ea1a1fee4
049afb6604f7faac0554>QAAAAA+CambriaMath AddT42Char 
QAAAAA+CambriaMath /CharStrings get begin
/g2 2 def
end
QAAAAA+CambriaMath /Encoding get
dup 33 /g2 put
pop
end
%ADOEndSubsetFont
/GHVRLL+CambriaMath /QAAAAA+CambriaMath findfont ct_VMDictPut/GHVRLL+CambriaMath*1 [33{/.notdef}rp /g2 222{/.notdef}rp]GHVRLL+CambriaMath nfGHVRLL+CambriaMath*1 [19 0 0 -18.9987 0 0 ]msf61.3068 485.591 mo(!)sh141.441 412.148 mo
141.441 408.868 144.1 406.209 147.38 406.209 cv
150.66 406.209 153.319 408.868 153.319 412.148 cv
153.319 415.427 150.66 418.086 147.38 418.086 cv
144.1 418.086 141.441 415.427 141.441 412.148 cv
cp
f
141.441 412.148 mo
141.441 408.868 144.1 406.209 147.38 406.209 cv
150.66 406.209 153.319 408.868 153.319 412.148 cv
153.319 415.427 150.66 418.086 147.38 418.086 cv
144.1 418.086 141.441 415.427 141.441 412.148 cv
cp
.75021 .679683 .670222 .90164 cmyk
[] 0 dsh
gsave
[4.61778e-05 0 0 4.61748e-05 141.441 406.209 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /SAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c7966000000000000396000000b6a
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000206c6f63610000000000001420
000000126d6178700000000000001434000000206e616d65000000000000
145400000020707265700000000000001474000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000008040e0000040e006b040e
0072040e0067040e0030040e0065040e006b040e0063000000bf0183023e
0353042d0500050805b50000000100000008005900050049000200020010
002f0087000012360235000100010000000100120001000000000006000e
000041414141414d2b43616c69627269b10903415302c802c60038001f02
c702c60038001f02dd003802da005502d9003802d7005502d8003802d700
5502d6003802d5005502d4003802d3005502d2003802d1005502bf003802
be005502bd003802bc0055000402db003402db005402db0003003402db00
5402db006402db00a402db00d402db0005006b02d50001000b02d1000100
1402c2004402c2006402c2007402c2009402c2000500a402be000100a402
bc000100200284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f162326460f
15010f151f150245ef1501860003012001010001100120010308b8ffc0b4
01151f4603bd0100010000050001019000542b4bb80800524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d4259
4bb0805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b
58403d0011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f
0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d031640
0d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f434640
0b2d30460003012001010001100120010308b8ffc0b301151f462b5e7375
732b2b745e732b2b5e73742b73742b7374745e735901755e73742b2b2b2b
5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e
735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400
6402830064028200640281006402800064027f0064027e0064027d006402
7c0064027b0064027a006402790064027800640277006402760064027500
6402740064027300640271006402700064026f0064026e0064026d006402
6c0064026b0064026a006402690064026800640267006402660064026500
640264006402630064026200640261006402600064025f0064025e006402
5d0064025c0064025b0064025a0064025900640258006402570064025600
64025500640254006402530064025200640251006402500064024f006402
4e0064024d0064024c0064024b0064024a00640249006402480064024700
640246006402450064024400640243006402420064024100640240006402
3f0064023e0064023d0064023c0064023b0064023a006402390064023800
640237006402360064023500640234006402330064023200640231006402
300064022f0064022e0064022d0064022c0064022b0064022a0064022900
640228006402270064022600640225006402240064022300640222006402
21006402200064021f0064021e0064021d0064021c0064021b0064021a00
640219006402180064021700640216006402150064021400640213006402
1200640211006402100064020f0064020e0064020d0064020c0064020b00
64020a00640209006402080064020700640206006402050064020441ff00
640203006402020064020100640200006401ff006401fe006401fd006401
fc006401fb006401fa006401f9006401f8006401f7006401f6006401f500
6401f4006401f3006401f2006401f1006401f0006401ef006401ee006401
ed006401ec006401eb006401ea006401e9006401e8006401e7006401e600
6401e5006401e4006401e3006401e2006401e1006401e0006401df006401
de006401dd006401dc006401db006401da006401d9006401d8006401d700
6401d6006401d5006401d4006401d3006401d2006401d1006401d0006401
cf006401ce006401cd006401cc006401cb006401ca006401c9006401c800
6401c7006401c6006401c5006401c4006401c3006401c2006401c1006401
c0006401bf006401be006401bd006401bc006401bb006401ba006401b900
6401b8006401b7006401b6006401b5006401b4006401b3006401b2006401
b1006401b0006401af006401ae006401ad006401ac006401ab006401aa00
6401a9006401a8006401a7006401a6006401a5006401a4006401a3006401
a2006401a1006401a00064019f0064019e0064019d0064019c0064019b00
64019a006401990064019800640197006401960064019500640194006401
930064019200640191006401900064018f0064018e0064018d0064018c00
64018b0064018a0064018900640188006401870064018600640185006441
800184006401830064018200640181006401800064017f0064017e006401
7d0064017c0064017b0064017a0064017900640178006401770064017600
64017500640174006401730064017200640171006401700064016f006401
6e0064016d0064016c0064016b0064016a00640169006401680064016700
640166006401650064016400640163006401620064016100640160006401
5f0064015e0064015d0064015c0064015b0064015a006401590064015800
640157006401560064015500640154006401530064015200640150006401
4f0064014e0064014c0064014b0064014a00640149006401480064014700
64014600640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00737373
737373742b2b2b2b2b2b2b2b2b2b185f5e0000>
[2923 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 774 2 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>SAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>SAAAAA+Calibri AddT42Char 
SAAAAA+Calibri /CharStrings get begin
/g2 2 def
end
SAAAAA+Calibri /Encoding get
dup 33 /g2 put
pop
end
%ADOEndSubsetFont
/GHVRLM+Calibri /SAAAAA+Calibri findfont ct_VMDictPut/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 222{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf144.704 415.751 mo(!)sh120.142 377.229 mo
120.142 373.95 122.801 371.291 126.08 371.291 cv
129.36 371.291 132.019 373.95 132.019 377.229 cv
132.019 380.509 129.36 383.168 126.08 383.168 cv
122.801 383.168 120.142 380.509 120.142 377.229 cv
cp
0 0 0 0 cmyk
f
120.142 377.229 mo
120.142 373.95 122.801 371.291 126.081 371.291 cv
129.36 371.291 132.019 373.95 132.019 377.229 cv
132.019 380.509 129.36 383.168 126.081 383.168 cv
122.801 383.168 120.142 380.509 120.142 377.229 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 120.142 371.291 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLM+Calibri gcheck setglobal} if
1 1148 3 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>GHVRLM+Calibri AddT42Char 
GHVRLM+Calibri /CharStrings get begin
/g3 3 def
end
GHVRLM+Calibri /Encoding get
dup 34 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 /g3 221{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf123.405 380.951 mo(")sh84.1185 376.686 mo
84.1185 373.406 86.7774 370.748 90.0573 370.748 cv
93.3372 370.748 95.9961 373.406 95.9961 376.686 cv
95.9961 379.966 93.3372 382.625 90.0573 382.625 cv
86.7774 382.625 84.1185 379.966 84.1185 376.686 cv
cp
0 0 0 0 cmyk
f
84.1185 376.686 mo
84.1185 373.406 86.7774 370.748 90.0573 370.748 cv
93.3372 370.748 95.9962 373.406 95.9962 376.686 cv
95.9962 379.966 93.3372 382.625 90.0573 382.625 cv
86.7774 382.625 84.1185 379.966 84.1185 376.686 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 84.1185 370.748 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLM+Calibri gcheck setglobal} if
1 1702 4 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00>GHVRLM+Calibri AddT42Char 
GHVRLM+Calibri /CharStrings get begin
/g4 4 def
end
GHVRLM+Calibri /Encoding get
dup 35 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 /g3 /g4 220{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf87.3816 380.471 mo(#)sh62.064 411.32 mo
62.064 408.04 64.7229 405.382 68.0029 405.382 cv
71.2828 405.382 73.9417 408.04 73.9417 411.32 cv
73.9417 414.6 71.2828 417.258 68.0029 417.258 cv
64.7229 417.258 62.064 414.6 62.064 411.32 cv
cp
0 0 0 0 cmyk
f
62.064 411.32 mo
62.064 408.04 64.7229 405.382 68.0028 405.382 cv
71.2827 405.382 73.9417 408.04 73.9417 411.32 cv
73.9417 414.6 71.2827 417.258 68.0028 417.258 cv
64.7229 417.258 62.064 414.6 62.064 411.32 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 62.064 405.382 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLM+Calibri gcheck setglobal} if
1 2138 5 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00>GHVRLM+Calibri AddT42Char 
GHVRLM+Calibri /CharStrings get begin
/g5 5 def
end
GHVRLM+Calibri /Encoding get
dup 36 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 /g3 /g4 /g5 219{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf65.3271 415.031 mo($)sh120.372 445.83 mo
120.372 442.55 123.031 439.891 126.311 439.891 cv
129.591 439.891 132.25 442.55 132.25 445.83 cv
132.25 449.11 129.591 451.768 126.311 451.768 cv
123.031 451.768 120.372 449.11 120.372 445.83 cv
cp
0 0 0 0 cmyk
f
120.372 445.83 mo
120.372 442.55 123.031 439.891 126.311 439.891 cv
129.591 439.891 132.25 442.55 132.25 445.83 cv
132.25 449.109 129.591 451.768 126.311 451.768 cv
123.031 451.768 120.372 449.109 120.372 445.83 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 120.372 439.891 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLM+Calibri gcheck setglobal} if
1 2576 7 <00010063fffa03af050e001f00f2b0852b58b90011ffe8400a1121014c11
1010014d11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8
fff8400a0b014d74110126110110b8ffe8400a1121014c101010014d10b8
ffe8b30f014d10b8fff0b30d014d10b8ffe8400b0b0c014c751001261001
06b8fff0b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ff
d8b40b014d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d
15b8ffe0b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2b
cd2b2b31305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b1bb2051a11b801
2db46c1a510b5500183f3f2b3230315901140e0207010e03232226263637
0121222635343e023321321e0203af03050906fe2e050f17241a22261102
0601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c0f0903
060d130d044a2824131c130906121c00>GHVRLM+Calibri AddT42Char 
GHVRLM+Calibri /CharStrings get begin
/g7 7 def
end
GHVRLM+Calibri /Encoding get
dup 37 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 /g3 /g4 /g5 /g7 218{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf123.635 449.591 mo(%)sh391.564 451.113 mo
391.677 453.094 li
392.012 455.089 li
392.551 457.049 li
393.278 458.958 li
394.179 460.801 li
395.239 462.565 li
396.445 464.233 li
397.781 465.793 li
399.234 467.228 li
400.79 468.523 li
402.437 469.664 li
404.159 470.635 li
405.945 471.419 li
407.781 472 li
409.652 472.362 li
411.504 472.484 li
413.32 472.603 li
413.247 472.594 li
415.048 472.942 li
414.983 472.925 li
416.756 473.487 li
416.697 473.465 li
418.427 474.225 li
418.375 474.199 li
420.049 475.142 li
420.003 475.113 li
421.606 476.223 li
421.564 476.192 li
423.082 477.455 li
423.045 477.422 li
424.463 478.822 li
424.43 478.786 li
425.734 480.309 li
425.704 480.27 li
426.88 481.899 li
426.853 481.858 li
427.888 483.579 li
427.863 483.534 li
428.742 485.331 li
428.721 485.282 li
429.428 487.14 li
429.411 487.087 li
429.934 488.99 li
429.918 488.911 li
430.044 489.878 li
431.207 489.726 li
431.076 488.719 li
430.534 486.749 li
429.807 484.84 li
428.906 482.996 li
427.846 481.233 li
426.641 479.564 li
425.305 478.005 li
423.851 476.57 li
422.295 475.274 li
420.649 474.133 li
418.926 473.163 li
417.14 472.378 li
415.305 471.797 li
413.434 471.435 li
411.581 471.314 li
409.765 471.194 li
409.838 471.204 li
408.037 470.855 li
408.102 470.872 li
406.329 470.31 li
406.388 470.333 li
404.658 469.573 li
404.71 469.599 li
403.036 468.656 li
403.082 468.685 li
401.48 467.574 li
401.521 467.605 li
400.003 466.342 li
400.04 466.376 li
398.622 464.975 li
398.655 465.011 li
397.351 463.489 li
397.381 463.527 li
396.205 461.898 li
396.232 461.939 li
395.197 460.219 li
395.222 460.263 li
394.343 458.467 li
394.365 458.515 li
393.657 456.657 li
393.674 456.711 li
393.151 454.807 li
393.164 454.866 li
392.84 452.932 li
392.847 452.995 li
392.735 451.046 li
cp
428.815 489.405 mo
430.935 492.718 li
432.314 489.034 li
cp
f
409.071 512.112 mo
453.012 512.112 li
453.012 513.431 li
409.071 513.431 li
cp
409.731 514.75 mo
405.772 512.771 li
409.731 510.792 li
cp
452.352 510.792 mo
456.31 512.771 li
452.352 514.75 li
cp
f
%ADOBeginSubsetFont: UAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /UAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003958000007ec
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d747800000000000014000000001c6c6f6361000000000000141c
000000106d617870000000000000142c000000206e616d65000000000000
144c0000002070726570000000000000146c000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000007040e000004a10023045a
00ac0444006104ec00ac03ad00ac02050097000000bf016c023a02d2034f
03cb03f6000100000007004f00050000000000020010002f008700001236
0235000000000000000100120001000000000006000e000041414141414f
2b43616c69627269b10903415302c802c60038001f02c702c60038001f02
dd003802da005502d9003802d7005502d8003802d7005502d6003802d500
5502d4003802d3005502d2003802d1005502bf003802be005502bd003802
bc0055000402db003402db005402db0003003402db005402db006402db00
a402db00d402db0005006b02d50001000b02d10001001402c2004402c200
6402c2007402c2009402c2000500a402be000100a402bc000100200284b4
0918014a20b80283b40918014a20b80282b40918014a20b80281b4091801
4a20b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8
027db40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab4
0918014a20b80279b40918014a20b80278b40918014a20b80277b4091801
4a20b80276b40918014a20b80275b40918014a20b80274b40918014a20b8
0273b40918014a20b80271b40918014a20b80270b40918014a20b8026fb4
0918014a20b8026eb40918014a20b8026db40918014a20b8026cb4091801
4a20b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b8
0268b40918014a20b80267b40918014a20b80266b40918014a20b80265b4
0918014a20b80264b40918014a20b80263b40918014a20b80262b4091801
4a20b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8
025eb40918014a20b8025db40918014a20b8025cb40918014a20b8025bb4
0918014a20b8025ab40918014a20b80259b40918014a20b80258b4091801
4a20b80257b40918014a20b80256b40918014a20b80255b40918014a20b8
0254b40918014a20b80253b40918014a20b80252b40918014a20b80251b4
0918014a20b80250b40918014a20b8024fb40918014a20b8024eb4091801
4a20b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8
024ab40918014a20b80249b40918014a20b80248b40918014a20b80247b4
0918014a20b80246b40918014a20b80245b40918014a20b80244b4091801
4a20b80243b40918014a20b80242b40918014a20b80241b40918014a20b8
0240b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db4
0918014a20b8023cb40918014a20b8023bb40918014a20b8023ab4091801
4a20b80239b40918014a20b80238b40918014a20b80237b40918014a20b8
0236b40918014a20b80235b40918014a20b80234b40918014a20b80233b4
0918014a20b80232b40918014a20b80231b40918014a20b80230b4091801
4a20b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8
022cb40918014a20b8022bb40918014a20b8022ab40918014a20b80229b4
0918014a20b80228b40918014a20b80227b40918014a20b80226b4091801
4a20b80225b40918014a20b80224b40918014a20b80223b40918014a20b8
0222b40918014a20b80221b40918014a20b80220b40918014a20b8021fb4
0918014a20b8021eb40918014a20b8021db40918014a20b8021cb4091801
4a20b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b8
0218b40918014a20b80217b40918014a20b80216b40918014a20b80215b4
0918014a20b80214b40918014a20b80213b40918014a20b80212b4091801
4a20b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8
020eb40918014a20b8020db40918014a20b8020cb40918014a20b8020bb4
0918014a20b8020ab40918014a20b80209b40918014a20b80208b4091801
4a20b80207b40918014a20b80206b40918014a20b80205b40918014a20b8
0204b40918014a20b80203b40918014a20b80202b40918014a20b80201b4
0918014a20b80200b40918014a20b801ffb40918014a20b801feb4091801
4a20b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b8
01fab40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b4
0918014a20b801f6b40918014a20b801f5b40918014a20b801f4b4091801
4a20b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b8
01f0b40918014a20b801efb40918014a20b801eeb40918014a20b801edb4
0918014a20b801ecb40918014a20b801ebb40918014a20b801eab4091801
4a20b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b8
01e6b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b4
0918014a20b801e2b40918014a20b801e1b40918014a20b801e0b4091801
4a20b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b8
01dcb40918014a20b801dbb40918014a20b801dab40918014a20b801d9b4
0918014a20b801d8b40918014a20b801d7b40918014a20b801d6b4091801
4a20b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b8
01d2b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb4
0918014a20b801ceb40918014a20b801cdb40918014a20b801ccb4091801
4a20b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b8
01c8b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b4
0918014a20b801c4b40918014a20b801c3b40918014a20b801c2b4091801
4a20b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b8
01beb40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb4
0918014a20b801bab40918014a20b801b9b40918014a20b801b8b4091801
4a20b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b8
01b4b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b4
0918014a20b801b0b40918014a20b801afb40918014a20b801aeb4091801
4a20b801adb40918014a20b801acb40918014a20b801abb40918014a20b8
01aab40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b4
0918014a20b801a6b40918014a20b801a5b40918014a20b801a4b4091801
4a20b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b8
01a0b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db4
0918014a20b8019cb40918014a20b8019bb40918014a20b8019ab4091801
4a20b80199b40918014a20b80198b40918014a20b80197b40918014a20b8
0196b40918014a20b80195b40918014a20b80194b40918014a20b80193b4
0918014a20b80192b40918014a20b80191b40918014a20b80190b4091801
4a20b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8
018cb40918014a20b8018bb40918014a20b8018ab40918014a20b80189b4
0918014a20b80188b40918014a20b80187b40918014a20b80186b4091801
4a20b80185b40918014a20b80184b40918014a20b80183b40918014a20b8
0182b40918014a20b80181b40918014a20b80180b40918014a20b8017fb4
0918014a20b8017eb40918014a20b8017db40918014a20b8017cb4091801
4a20b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b8
0178b40918014a20b80177b40918014a20b80176b40918014a20b80175b4
0918014a20b80174b40918014a20b80173b40918014a20b80172b4091801
4a20b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8
016eb40918014a20b8016db40918014a20b8016cb40918014a20b8016bb4
0918014a20b8016ab40918014a20b80169b40918014a20b80168b4091801
4a20b80167b40918014a20b80166b40918014a20b80165b40918014a20b8
0164b40918014a20b80163b40918014a20b80162b40918014a20b80161b4
0918014a20b80160b40918014a20b8015fb40918014a20b8015eb4091801
4a20b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8
015ab40918014a20b80159b40918014a20b80158b40918014a20b80157b4
0918014a20b80156b40918014a20b80155b40918014a20b80154b4091801
4a20b80153b40918014a20b80152b40918014a20b80150b40918014a20b8
014fb40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb4
0918014a20b8014ab40918014a20b80149b40918014a20b80148b4091801
4a20b80147b40918014a20b80146b40918014a20b80145b40918014a20b8
0144b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151f
b80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb802
7eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab2
1e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d43
1fb80275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb8
0271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026d
b21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c
451fb80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451f
b80264b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb802
60b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb2
1c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c45
1fb80257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb8
0253b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024f
b21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c
451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1f
b80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb802
42b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb2
1b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c
1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb8
0235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231
b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b
4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1f
b80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb802
24b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b2
1b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c
1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb8
0217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213
b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a
4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1f
b8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb802
06b219501fb80205b219511fb80204b219511fb80203b219501fb80202b2
19511fb80201b219511fb80200b219511fb801ffb219511fb801feb21950
1fb801fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb8
01f9b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5
b218541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218
541fb801f0b218531fb801efb218541fb801eeb218541fb801edb218541f
b801ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801
e8b218541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b2
18531fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b21853
1fb801dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb8
01dbb218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7
b217571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217
571fb801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561f
b801ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801
cab217561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b2
17571fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b21757
1fb801c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb8
01bdb217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9
b217571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217
571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1f
b801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801
acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2
163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b
1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8
019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019b
b2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b216
5b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1f
b80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb801
8eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2
165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b21561
1fb80185b215621fb80184b215621fb80183b215661fb80182b215661fb8
0181b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017d
b215611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215
661fb80178b215661fb80177b215661fb80176b215661fb80175b215661f
b80174b215661fb80173b215451fb80172b215621fb80171b215621fb801
70b215631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb2
15661fb8016bb215661fb8016ab215661fb80169b215621fb80168b21562
1fb80167b215611fb80166b215641fb80165b215641fb80164b215661fb8
0163b215661fb80162b215661fb80161b215661fb80160b215661fb8015f
b215661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215
361fb8015ab215611fb80159b215621fb80158b215621fb80157b215631f
b80156b215641fb80155b215661fb80154b215661fb80153b215661fb801
52b215661fb80151b214401fb80150b214551fb8014fb214561fb8014eb2
14831fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab21441
1fb80149b214401fb80148b214401fb80147b214411fb80146b2147e1fb8
0145b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141
b212461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212
461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1f
b80138b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb801
34b2115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b2
11571fb8012fb211571fb8012eb211581fb8012db211591fb8012cb21159
1fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb8
0127b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123
b211571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb211
5a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1f
b8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb801
16b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2
105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f
1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb8
0109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105
b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b210
5f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621f
fa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f
621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621f
eb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e
681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671f
dc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d
6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1f
cd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d
681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d
311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741f
b70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c
741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1f
a80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b
7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f
990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b
6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f
8403381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b
7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba
028600660285403c5576ab755504751475747503f47501ab750144750130
750102007510752075030c7455725573ab7255007250728072b072043bb0
72e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570
ab6f556e666d556a03251f6938675568ab67556638645565ab6455633862
55613860555f385d555eab5d555c385a555bab5a55593858555703251f56
38545555ab54555338515552ab51554f384e554e03251f4d384b554cab4b
554a38485549ab4855473846554503381f001c101c201c0310b8ffc0404e
1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02
290f1901434f19016f197f198f19030f18cf18024018292c460f17cf17df
17ef1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3
163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f150245
ef1501860003012001010001100120010308b8ffc0b401151f4603bd0100
010000050001019000542b4bb80800524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58b1
01018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340
401d42594bb0ff5358b20300001d42592b5e7375732b58403d0011e011f0
110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0e
ff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040
270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120
01010001100120010308b8ffc0b301151f462b5e7375732b2b745e732b2b
5e73742b73742b7374745e735901755e73742b2b2b2b5e732b5e732b7374
755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b
2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200
640281006402800064027f0064027e0064027d0064027c0064027b006402
7a0064027900640278006402770064027600640275006402740064027300
640271006402700064026f0064026e0064026d0064026c0064026b006402
6a0064026900640268006402670064026600640265006402640064026300
64026200640261006402600064025f0064025e0064025d0064025c006402
5b0064025a00640259006402580064025700640256006402550064025400
6402530064025200640251006402500064024f0064024e0064024d006402
4c0064024b0064024a006402490064024800640247006402460064024500
640244006402430064024200640241006402400064023f0064023e006402
3d0064023c0064023b0064023a0064023900640238006402370064023600
64023500640234006402330064023200640231006402300064022f006402
2e0064022d0064022c0064022b0064022a00640229006402280064022700
640226006402250064022400640223006402220064022100640220006402
1f0064021e0064021d0064021c0064021b0064021a006402190064021800
640217006402160064021500640214006402130064021200640211006402
100064020f0064020e0064020d0064020c0064020b0064020a0064020900
6402080064020700640206006402050064020441ff006402030064020200
64020100640200006401ff006401fe006401fd006401fc006401fb006401
fa006401f9006401f8006401f7006401f6006401f5006401f4006401f300
6401f2006401f1006401f0006401ef006401ee006401ed006401ec006401
eb006401ea006401e9006401e8006401e7006401e6006401e5006401e400
6401e3006401e2006401e1006401e0006401df006401de006401dd006401
dc006401db006401da006401d9006401d8006401d7006401d6006401d500
6401d4006401d3006401d2006401d1006401d0006401cf006401ce006401
cd006401cc006401cb006401ca006401c9006401c8006401c7006401c600
6401c5006401c4006401c3006401c2006401c1006401c0006401bf006401
be006401bd006401bc006401bb006401ba006401b9006401b8006401b700
6401b6006401b5006401b4006401b3006401b2006401b1006401b0006401
af006401ae006401ad006401ac006401ab006401aa006401a9006401a800
6401a7006401a6006401a5006401a4006401a3006401a2006401a1006401
a00064019f0064019e0064019d0064019c0064019b0064019a0064019900
640198006401970064019600640195006401940064019300640192006401
91006401900064018f0064018e0064018d0064018c0064018b0064018a00
640189006401880064018700640186006401850064418001840064018300
64018200640181006401800064017f0064017e0064017d0064017c006401
7b0064017a00640179006401780064017700640176006401750064017400
6401730064017200640171006401700064016f0064016e0064016d006401
6c0064016b0064016a006401690064016800640167006401660064016500
640164006401630064016200640161006401600064015f0064015e006401
5d0064015c0064015b0064015a0064015900640158006401570064015600
640155006401540064015300640152006401500064014f0064014e006401
4c0064014b0064014a006401490064014800640147006401460064014500
6401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b
2b2b2b2b2b2b185f5e0000>
[2029 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1444 4 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>UAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>UAAAAA+Calibri AddT42Char 
UAAAAA+Calibri /CharStrings get begin
/g4 4 def
end
UAAAAA+Calibri /Encoding get
dup 33 /g4 put
pop
end
%ADOEndSubsetFont
/GHVRLN+Calibri /UAAAAA+Calibri findfont ct_VMDictPut/GHVRLN+Calibri*1 [33{/.notdef}rp /g4 222{/.notdef}rp]GHVRLN+Calibri nfGHVRLN+Calibri*1 [14 0 0 -13.9991 0 0 ]msf423.21 526.151 mo(!)sh405.772 492.734 mo
422.395 492.734 li
422.395 509.356 li
405.772 509.356 li
cp
0 .993988 1 0 cmyk
f
405.772 492.734 mo
422.396 492.734 li
422.396 509.356 li
405.772 509.356 li
cp
.75021 .679683 .670222 .90164 cmyk
12700 lw
gsave
[4.61778e-05 0 0 4.61748e-05 405.772 492.734 ]ct
@
grestore newpath
422.624 492.718 mo
439.247 492.718 li
439.247 509.34 li
422.624 509.34 li
cp
.80734 .00329595 .96704 0 cmyk
f
422.624 492.718 mo
439.247 492.718 li
439.247 509.34 li
422.624 509.34 li
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 422.624 492.718 ]ct
@
grestore newpath
439.491 492.718 mo
456.114 492.718 li
456.114 509.34 li
439.491 509.34 li
cp
.868376 .537468 0 0 cmyk
f
439.491 492.718 mo
456.114 492.718 li
456.114 509.34 li
439.491 509.34 li
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 439.491 492.718 ]ct
@
grestore newpath
255.885 408.16 mo
216.938 408.16 li
.251957 .1991 .204257 0 cmyk
19050 lw
gsave
[-4.61778e-05 0 0 4.61748e-05 255.885 408.16 ]ct
@
grestore newpath
255.731 408.015 mo
274.276 441.699 li
gsave
[4.61778e-05 0 0 4.61748e-05 255.731 408.015 ]ct
@
grestore newpath
255.963 408.225 mo
215.008 476.887 li
gsave
[-4.61778e-05 0 0 4.61748e-05 255.963 408.225 ]ct
@
grestore newpath
274.125 441.805 mo
253.651 477.014 li
gsave
[-4.61778e-05 0 0 4.61748e-05 274.125 441.805 ]ct
@
grestore newpath
216.437 407.857 mo
196.339 442.42 li
gsave
[-4.61778e-05 0 0 4.61748e-05 216.437 407.857 ]ct
@
grestore newpath
216.671 408.317 mo
254.512 477.049 li
gsave
[4.61778e-05 0 0 4.61748e-05 216.671 408.317 ]ct
@
grestore newpath
273.616 442.232 mo
196.588 442.232 li
gsave
[-4.61778e-05 0 0 4.61748e-05 273.616 442.232 ]ct
@
grestore newpath
254.201 476.777 mo
214.719 476.777 li
gsave
[-4.61778e-05 0 0 4.61748e-05 254.201 476.777 ]ct
@
grestore newpath
196.46 442.097 mo
215.283 476.286 li
gsave
[4.61778e-05 0 0 4.61748e-05 196.46 442.097 ]ct
@
grestore newpath
248.246 408.241 mo
248.246 404.354 251.397 401.204 255.284 401.204 cv
259.171 401.204 262.321 404.354 262.321 408.241 cv
262.321 412.127 259.171 415.278 255.284 415.278 cv
251.397 415.278 248.246 412.127 248.246 408.241 cv
cp
0 0 0 0 cmyk
f
248.246 408.241 mo
248.246 404.354 251.397 401.204 255.284 401.204 cv
259.171 401.204 262.321 404.354 262.321 408.241 cv
262.321 412.127 259.171 415.278 255.284 415.278 cv
251.397 415.278 248.246 412.127 248.246 408.241 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 248.246 401.204 ]ct
@
grestore newpath
209.54 409.12 mo
209.54 405.234 212.691 402.083 216.578 402.083 cv
220.464 402.083 223.615 405.234 223.615 409.12 cv
223.615 413.007 220.464 416.157 216.578 416.157 cv
212.691 416.157 209.54 413.007 209.54 409.12 cv
cp
0 0 0 0 cmyk
f
209.54 409.12 mo
209.54 405.234 212.691 402.083 216.578 402.083 cv
220.464 402.083 223.615 405.234 223.615 409.12 cv
223.615 413.007 220.464 416.157 216.578 416.157 cv
212.691 416.157 209.54 413.007 209.54 409.12 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 209.54 402.083 ]ct
@
grestore newpath
190.773 440.494 mo
190.773 436.607 193.924 433.457 197.811 433.457 cv
201.698 433.457 204.848 436.607 204.848 440.494 cv
204.848 444.38 201.698 447.531 197.811 447.531 cv
193.924 447.531 190.773 444.38 190.773 440.494 cv
cp
0 0 0 0 cmyk
f
190.773 440.494 mo
190.773 436.607 193.924 433.457 197.811 433.457 cv
201.698 433.457 204.848 436.607 204.848 440.494 cv
204.848 444.38 201.698 447.531 197.811 447.531 cv
193.924 447.531 190.773 444.38 190.773 440.494 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 190.773 433.457 ]ct
@
grestore newpath
206.901 474.799 mo
206.901 470.913 210.052 467.762 213.939 467.762 cv
217.825 467.762 220.976 470.913 220.976 474.799 cv
220.976 478.686 217.825 481.836 213.939 481.836 cv
210.052 481.836 206.901 478.686 206.901 474.799 cv
cp
0 0 0 0 cmyk
f
206.901 474.799 mo
206.901 470.913 210.052 467.762 213.939 467.762 cv
217.825 467.762 220.976 470.913 220.976 474.799 cv
220.976 478.686 217.825 481.836 213.939 481.836 cv
210.052 481.836 206.901 478.686 206.901 474.799 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 206.901 467.762 ]ct
@
grestore newpath
245.901 476.265 mo
245.901 472.379 249.051 469.228 252.938 469.228 cv
256.825 469.228 259.976 472.379 259.976 476.265 cv
259.976 480.152 256.825 483.302 252.938 483.302 cv
249.051 483.302 245.901 480.152 245.901 476.265 cv
cp
0 0 0 0 cmyk
f
245.901 476.265 mo
245.901 472.379 249.051 469.228 252.938 469.228 cv
256.825 469.228 259.976 472.379 259.976 476.265 cv
259.976 480.152 256.825 483.302 252.938 483.302 cv
249.051 483.302 245.901 480.152 245.901 476.265 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 245.901 469.228 ]ct
@
grestore newpath
265.547 442.546 mo
265.547 438.66 268.698 435.509 272.584 435.509 cv
276.471 435.509 279.622 438.66 279.622 442.546 cv
279.622 446.433 276.471 449.583 272.584 449.583 cv
268.698 449.583 265.547 446.433 265.547 442.546 cv
cp
0 0 0 0 cmyk
f
265.547 442.546 mo
265.547 438.66 268.698 435.509 272.584 435.509 cv
276.471 435.509 279.622 438.66 279.622 442.546 cv
279.622 446.433 276.471 449.583 272.584 449.583 cv
268.698 449.583 265.547 446.433 265.547 442.546 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 265.547 435.509 ]ct
@
grestore newpath
227.72 441.96 mo
227.72 438.073 230.871 434.923 234.758 434.923 cv
238.645 434.923 241.795 438.073 241.795 441.96 cv
241.795 445.846 238.645 448.997 234.758 448.997 cv
230.871 448.997 227.72 445.846 227.72 441.96 cv
cp
0 0 0 0 cmyk
f
227.72 441.96 mo
227.72 438.073 230.871 434.923 234.758 434.923 cv
238.645 434.923 241.795 438.073 241.795 441.96 cv
241.795 445.846 238.645 448.997 234.758 448.997 cv
230.871 448.997 227.72 445.846 227.72 441.96 cv
cp
.251957 .1991 .204257 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 227.72 434.923 ]ct
@
grestore newpath
248.554 413.848 mo
209.607 413.848 li
.765255 .551598 0 0 cmyk
28575 lw
gsave
[-4.61778e-05 0 0 4.61748e-05 248.554 413.848 ]ct
@
grestore newpath
248.4 413.703 mo
266.945 447.387 li
gsave
[4.61778e-05 0 0 4.61748e-05 248.4 413.703 ]ct
@
grestore newpath
248.632 413.913 mo
207.677 482.575 li
gsave
[-4.61778e-05 0 0 4.61748e-05 248.632 413.913 ]ct
@
grestore newpath
266.794 447.493 mo
246.321 482.703 li
gsave
[-4.61778e-05 0 0 4.61748e-05 266.794 447.493 ]ct
@
grestore newpath
209.106 413.545 mo
189.008 448.108 li
gsave
[-4.61778e-05 0 0 4.61748e-05 209.106 413.545 ]ct
@
grestore newpath
209.34 414.006 mo
247.181 482.737 li
gsave
[4.61778e-05 0 0 4.61748e-05 209.34 414.006 ]ct
@
grestore newpath
266.286 447.92 mo
189.257 447.92 li
gsave
[-4.61778e-05 0 0 4.61748e-05 266.286 447.92 ]ct
@
grestore newpath
246.87 482.465 mo
207.388 482.465 li
gsave
[-4.61778e-05 0 0 4.61748e-05 246.87 482.465 ]ct
@
grestore newpath
189.129 447.785 mo
207.952 481.974 li
gsave
[4.61778e-05 0 0 4.61748e-05 189.129 447.785 ]ct
@
grestore newpath
240.916 413.929 mo
240.916 410.042 244.066 406.892 247.953 406.892 cv
251.84 406.892 254.991 410.042 254.991 413.929 cv
254.991 417.815 251.84 420.966 247.953 420.966 cv
244.066 420.966 240.916 417.815 240.916 413.929 cv
cp
0 0 0 0 cmyk
f
240.916 413.929 mo
240.916 410.042 244.066 406.892 247.953 406.892 cv
251.84 406.892 254.991 410.042 254.991 413.929 cv
254.991 417.815 251.84 420.966 247.953 420.966 cv
244.066 420.966 240.916 417.815 240.916 413.929 cv
cp
.75021 .679683 .670222 .90164 cmyk
19050 lw
gsave
[4.61778e-05 0 0 4.61748e-05 240.916 406.892 ]ct
@
grestore newpath
%ADOBeginSubsetFont: WAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /WAAAAA+CambriaMath
Type42DictBegin
[<000100000008000800080008676c796600000000000001480000024a6865
6164000000000000008c000000366868656100000000000000c400000024
686d747800000000000000e8000000106c6f636100000000000000f80000
000a6d6178700000000000000104000000206e616d650000000000000124
0000002467646972000000000000000000000000000100000006e66638ef
545c5f0f3cf5001b080000000000b9e6983d00000000d18d01e4f434ec4a
16f118ef00000009000200000000000000010000079afe390000175af434
fda416f1000100000000000000000000000000000004054400be04750069
0450005c05e9003700000050009e00e30125000000010000000400350004
0000000000020010002f0086000009a41128000000000000000100120001
000000000006001200004141414141512b43616d627269614d61746800>
[587 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 454 3 <00010037fff005cc03bc00280000253612353426273721170e050723032e
012f0106020723032e02273721133e023f013303be9ca328300a01021b23
2a444c6780577729050b020b36ba89864c06122a300b01063c8d7d3c100b
90a6de014b682f2203313259608786a1bd7601a2319e2b0185febad202f1
3a48240431fcebe6f0af5f31>WAAAAA+CambriaMath AddT42Char 
1 0 0 <000400be0000048605540028002c0030003400000135343e02373e033534
2623220e020723353e0133321e0215140e02070e031d0117152335011121
1101112111023706162a2417261b0f413e2030241909603c894346633e1c
0f243c2c20261507129001fcfd060361fc3801e71616252a3527192f3339
234b521424321e821e2e1d334629263e3d462d212c27281c066ea1a1fee4
049afb6604f7faac0554>WAAAAA+CambriaMath AddT42Char 
WAAAAA+CambriaMath /CharStrings get begin
/g3 3 def
end
WAAAAA+CambriaMath /Encoding get
dup 33 /g3 put
pop
end
%ADOEndSubsetFont
/GHVRLO+CambriaMath /WAAAAA+CambriaMath findfont ct_VMDictPut/GHVRLO+CambriaMath*1 [33{/.notdef}rp /g3 222{/.notdef}rp]GHVRLO+CambriaMath nfGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf242 416.471 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /YAAAAA+CambriaMath
Type42DictBegin
[<000100000008000800080008676c79660000000000000160000004306865
6164000000000000008c000000366868656100000000000000c400000024
686d747800000000000000e8000000206c6f636100000000000001080000
00126d617870000000000000011c000000206e616d65000000000000013c
0000002467646972000000000000000000000000000100000006e66638ef
545c5f0f3cf5001b080000000000b9e6983d00000000d18d01e4f434ec4a
16f118ef00000009000200000000000000010000079afe390000175af434
fda416f1000100000000000000000000000000000008054400be04a100b7
04a1008804a1009d04a1005104a100af04a1008d04a100a600000050008f
00d80122016901a901f60218000000010000000800370004000000000002
0010002f0086000009a41128000000000000000100120001000000000006
001200004141414141532b43616d627269614d61746800>
[1073 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 432 3 <0001009dffef03ea050f0036000013353e0133321e0215140e0207151e03
15140e022322262735331e033332363534262b01353e0335342623220607
ac76d160508b6639244b6d47437457323c78b0765dc05681102c3b4d3181
85afac5869996632726c5b7b2103e5c5323322456744406250411e0c0c35
516a4050896438251ed832472d147b7d85896005314e683b606f6463>YAAAAA+CambriaMath AddT42Char 
1 0 0 <000400be0000048605540028002c0030003400000135343e02373e033534
2623220e020723353e0133321e0215140e02070e031d0117152335011121
1101112111023706162a2417261b0f413e2030241909603c894346633e1c
0f243c2c20261507129001fcfd060361fc3801e71616252a3527192f3339
234b521424321e821e2e1d334629263e3d462d212c27281c066ea1a1fee4
049afb6604f7faac0554>YAAAAA+CambriaMath AddT42Char 
YAAAAA+CambriaMath /CharStrings get begin
/g3 3 def
end
YAAAAA+CambriaMath /Encoding get
dup 33 /g3 put
pop
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath /YAAAAA+CambriaMath findfont ct_VMDictPut/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 222{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf249.419 418.631 mo(!)sh202.209 414.809 mo
202.209 410.922 205.36 407.771 209.247 407.771 cv
213.134 407.771 216.284 410.922 216.284 414.809 cv
216.284 418.695 213.134 421.846 209.247 421.846 cv
205.36 421.846 202.209 418.695 202.209 414.809 cv
cp
0 0 0 0 cmyk
f
202.209 414.808 mo
202.209 410.922 205.36 407.771 209.247 407.771 cv
213.134 407.771 216.284 410.922 216.284 414.808 cv
216.284 418.695 213.134 421.845 209.247 421.845 cv
205.36 421.845 202.209 418.695 202.209 414.808 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 202.209 407.771 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf203.689 416.951 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 580 4 <000200510000044305010022002e0000253e053d01213536003733113332
3e0237330e01072315141e02171521012135343e023723060207020b1e2a
1c0d0701fdcd950126959f1229331f150c55030703f60519312cfe50fef9
0180020304020b60bf613c080d1117233527834fcf0199cffce308192d24
376c38833a4024120c3c01e4c92264675d208bfeee8a>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g4 4 def
end
GHVRLP+CambriaMath /Encoding get
dup 34 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 221{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf210.788 419.111 mo(")sh183.443 446.182 mo
183.443 442.296 186.593 439.145 190.48 439.145 cv
194.367 439.145 197.518 442.296 197.518 446.182 cv
197.518 450.068 194.367 453.219 190.48 453.219 cv
186.593 453.219 183.443 450.068 183.443 446.182 cv
cp
0 0 0 0 cmyk
f
183.443 446.182 mo
183.443 442.296 186.593 439.145 190.48 439.145 cv
194.367 439.145 197.518 442.296 197.518 446.182 cv
197.518 450.068 194.367 453.219 190.48 453.219 cv
186.593 453.219 183.443 450.068 183.443 446.182 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 183.443 439.145 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf184.527 448.391 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 722 5 <000100afffeb03ff053f002b000013331e0133323635342623220e020727
11213e0337330721113e0133321e0215140e0223222627af801e78628386
8e80223736352152022a181d120e095a0efdb6357e405c956b3b427bb16f
58b863010c655788918b8702080e092d027501040e1917f2fe791216335f
8754609669372221>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g5 5 def
end
GHVRLP+CambriaMath /Encoding get
dup 35 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 /g5 220{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf191.946 450.551 mo(#)sh199.57 480.488 mo
199.57 476.601 202.721 473.45 206.608 473.45 cv
210.495 473.45 213.645 476.601 213.645 480.488 cv
213.645 484.374 210.495 487.525 206.608 487.525 cv
202.721 487.525 199.57 484.374 199.57 480.488 cv
cp
0 0 0 0 cmyk
f
199.57 480.487 mo
199.57 476.601 202.721 473.45 206.608 473.45 cv
210.495 473.45 213.645 476.601 213.645 480.487 cv
213.645 484.374 210.495 487.524 206.608 487.524 cv
202.721 487.524 199.57 484.374 199.57 480.487 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 199.57 473.45 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf200.655 482.711 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 850 6 <0002008dffeb042f050f002200340000011e011715260e0207173e033332
1e0215140e0223220235343e04032206070e03151021323e023534260385
0c140c79c294641c0b295052583258875e303c78b177e1e532618aaac69e
43713315170b0401014665401e78050f0e1a0d3b024483bf78051c291b0c
34648c565b9c703e0101fa70cdb18f693dfd8e241f0e1821312afe9e294d
71488692>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g6 6 def
end
GHVRLP+CambriaMath /Encoding get
dup 36 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 /g5 /g6 219{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf208.074 484.871 mo($)sh238.57 481.954 mo
238.57 478.067 241.721 474.917 245.607 474.917 cv
249.494 474.917 252.645 478.067 252.645 481.954 cv
252.645 485.84 249.494 488.991 245.607 488.991 cv
241.721 488.991 238.57 485.84 238.57 481.954 cv
cp
0 0 0 0 cmyk
f
238.57 481.954 mo
238.57 478.067 241.721 474.917 245.607 474.917 cv
249.494 474.917 252.645 478.067 252.645 481.954 cv
252.645 485.84 249.494 488.991 245.607 488.991 cv
241.721 488.991 238.57 485.84 238.57 481.954 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 238.57 474.917 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf240.049 484.151 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 1004 7 <000100a6fffb042204fc00110000090123350135212206070e0307231321
0422fdb599021afe582c3113080c0c0d096416036604ccfb2f2d04160f0e
0d070f1929200142>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g7 7 def
end
GHVRLP+CambriaMath /Encoding get
dup 37 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 /g5 /g6 /g7 218{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf247.468 486.311 mo(%)sh258.216 448.234 mo
258.216 444.348 261.367 441.197 265.254 441.197 cv
269.14 441.197 272.291 444.348 272.291 448.234 cv
272.291 452.121 269.14 455.271 265.254 455.271 cv
261.367 455.271 258.216 452.121 258.216 448.234 cv
cp
0 0 0 0 cmyk
f
258.216 448.234 mo
258.216 444.348 261.367 441.197 265.254 441.197 cv
269.14 441.197 272.291 444.348 272.291 448.234 cv
272.291 452.121 269.14 455.271 265.254 455.271 cv
261.367 455.271 258.216 452.121 258.216 448.234 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 258.216 441.197 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf259.695 450.551 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 286 2 <00010088000003ea050f0033000025323e0237330e010721353e03373e03
35342e022322060723353e0133321e0215140e02070e050702d62f38251a
115d050905fcb1184050663e5e7644191d3653365d7e238380d75668935c
290b1b2c2119505f6862521aa30718312b4790473436696c733e5e856858
3233563c226560c335302f507041274341422520546068666028>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g2 2 def
end
GHVRLP+CambriaMath /Encoding get
dup 38 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 /g5 /g6 /g7 /g2 217{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf267.114 452.711 mo(&)sh220.39 447.648 mo
220.39 443.762 223.54 440.611 227.427 440.611 cv
231.314 440.611 234.465 443.762 234.465 447.648 cv
234.465 451.534 231.314 454.685 227.427 454.685 cv
223.54 454.685 220.39 451.534 220.39 447.648 cv
cp
0 0 0 0 cmyk
f
220.39 447.648 mo
220.39 443.761 223.54 440.611 227.427 440.611 cv
231.314 440.611 234.465 443.761 234.465 447.648 cv
234.465 451.534 231.314 454.685 227.427 454.685 cv
223.54 454.685 220.39 451.534 220.39 447.648 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 220.39 440.611 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf221.869 449.831 mo(!)sh%ADOBeginSubsetFont: YAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLP+CambriaMath gcheck setglobal} if
1 160 1 <000100b70000040705080029000001141e02171e03171521353e03373e03
35113426232206072e01273e0137330e021502db04090f0a0c283e573dfc
e73b523a230d0e140c071e1c1f7a610d160c7cf37d3d02020101081f2d1f
16080c0d09050157570205090b080915202e2202cd2720403f172e184487
433757522800>GHVRLP+CambriaMath AddT42Char 
GHVRLP+CambriaMath /CharStrings get begin
/g1 1 def
end
GHVRLP+CambriaMath /Encoding get
dup 39 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLP+CambriaMath*1 [33{/.notdef}rp /g3 /g4 /g5 /g6 /g7 /g2 /g1 216{/.notdef}rp]GHVRLP+CambriaMath nfGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf229.044 451.991 mo(')sh200.43 410.036 mo
217.221 395.193 li
216.638 394.534 li
199.847 409.377 li
cp
199.413 408 mo
197.942 411.648 li
201.743 410.636 li
cp
217.656 396.57 mo
219.127 392.922 li
215.325 393.934 li
cp
f
GHVRLN+Calibri*1 [14 0 0 -13.9991 0 0 ]msf200.928 401.111 mo(!)sh81.3904 444.652 mo
81.3904 441.372 84.0493 438.714 87.3292 438.714 cv
90.6092 438.714 93.2681 441.372 93.2681 444.652 cv
93.2681 447.932 90.6092 450.59 87.3292 450.59 cv
84.0493 450.59 81.3904 447.932 81.3904 444.652 cv
cp
0 0 0 0 cmyk
f
81.3904 444.652 mo
81.3904 441.372 84.0493 438.714 87.3292 438.714 cv
90.6092 438.714 93.2681 441.372 93.2681 444.652 cv
93.2681 447.932 90.6092 450.59 87.3292 450.59 cv
84.0493 450.59 81.3904 447.932 81.3904 444.652 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 81.3904 438.714 ]ct
@
grestore newpath
%ADOBeginSubsetFont: SAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLM+Calibri gcheck setglobal} if
1 382 1 <0002006bffed03bd05200034004800c6b0852b58b9004affc040170f024d
604a012b753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a
35016a35014b35013a35012b350135b80243b670000120000100b8ffe0b3
0f014d00b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff303005
26b80100b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b
5d5de15d5d5d5d5d12392f10e15d5d5d5d5d3231305d2b1b4009303aff6c
3030051326b80100b46c13590544b80115b26c055f00183f2b3f2b12392f
2b30315901140e0223222e0435343e0433321e0615140e0223222e022322
0e02073e0333321e0207342e0223220e0207141e0233323e0203bd346ca6
71517c5c3d2510122e4f77a66e254c402c0e07040201070b090b26364d33
5d865529031a414d563169905926ae17365a42254a453f1a213f5e3f405e
3e1d01a3559f7949284a6c8aa45e53aa9e8b673c090f120b0d0f130e121a
10080e110e4c80a95c0f1e180f396589603a5f42240d171f1281ae692d30
5165>GHVRLM+Calibri AddT42Char 
1 2560 6 <ffff006bffed03bd0520020600010000>GHVRLM+Calibri AddT42Char 
GHVRLM+Calibri /CharStrings get begin
/g6 6 def
end
GHVRLM+Calibri /Encoding get
dup 38 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLM+Calibri*1 [33{/.notdef}rp /g2 /g3 /g4 /g5 /g7 /g6 217{/.notdef}rp]GHVRLM+Calibri nfGHVRLM+Calibri*1 [11 0 0 -10.9993 0 0 ]msf84.6535 448.391 mo(&)sh394.914 371.81 mo
355.966 371.81 li
.00231937 .260197 1 0 cmyk
gsave
[-4.61778e-05 0 0 4.61748e-05 394.914 371.81 ]ct
@
grestore newpath
394.759 371.665 mo
413.305 405.349 li
gsave
[4.61778e-05 0 0 4.61748e-05 394.759 371.665 ]ct
@
grestore newpath
392.623 374.242 mo
351.669 442.905 li
gsave
[-4.61778e-05 0 0 4.61748e-05 392.623 374.242 ]ct
@
grestore newpath
413.154 405.455 mo
392.68 440.665 li
gsave
[-4.61778e-05 0 0 4.61748e-05 413.154 405.455 ]ct
@
grestore newpath
355.465 371.507 mo
335.367 406.07 li
gsave
[-4.61778e-05 0 0 4.61748e-05 355.465 371.507 ]ct
@
grestore newpath
355.7 371.968 mo
393.541 440.699 li
gsave
[4.61778e-05 0 0 4.61748e-05 355.7 371.968 ]ct
@
grestore newpath
412.645 405.882 mo
335.617 405.882 li
gsave
[-4.61778e-05 0 0 4.61748e-05 412.645 405.882 ]ct
@
grestore newpath
393.229 440.427 mo
353.747 440.427 li
gsave
[-4.61778e-05 0 0 4.61748e-05 393.229 440.427 ]ct
@
grestore newpath
335.488 405.747 mo
354.312 439.936 li
gsave
[4.61778e-05 0 0 4.61748e-05 335.488 405.747 ]ct
@
grestore newpath
384.321 372.881 mo
384.321 367.262 388.876 362.706 394.495 362.706 cv
400.115 362.706 404.67 367.262 404.67 372.881 cv
404.67 378.5 400.115 383.055 394.495 383.055 cv
388.876 383.055 384.321 378.5 384.321 372.881 cv
cp
f
384.321 372.881 mo
384.321 367.262 388.876 362.706 394.495 362.706 cv
400.115 362.706 404.67 367.262 404.67 372.881 cv
404.67 378.5 400.115 383.055 394.495 383.055 cv
388.876 383.055 384.321 378.5 384.321 372.881 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 384.321 362.706 ]ct
@
grestore newpath
345.614 373.76 mo
345.614 368.141 350.17 363.586 355.789 363.586 cv
361.409 363.586 365.964 368.141 365.964 373.76 cv
365.964 379.379 361.409 383.934 355.789 383.934 cv
350.17 383.934 345.614 379.379 345.614 373.76 cv
cp
.00231937 .260197 1 0 cmyk
f
345.614 373.76 mo
345.614 368.141 350.17 363.586 355.789 363.586 cv
361.409 363.586 365.964 368.141 365.964 373.76 cv
365.964 379.379 361.409 383.934 355.789 383.934 cv
350.17 383.934 345.614 379.379 345.614 373.76 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 345.614 363.586 ]ct
@
grestore newpath
326.848 405.134 mo
326.848 399.515 331.403 394.96 337.023 394.96 cv
342.642 394.96 347.197 399.515 347.197 405.134 cv
347.197 410.753 342.642 415.308 337.023 415.308 cv
331.403 415.308 326.848 410.753 326.848 405.134 cv
cp
.00231937 .260197 1 0 cmyk
f
326.848 405.134 mo
326.848 399.515 331.403 394.96 337.023 394.96 cv
342.642 394.96 347.197 399.515 347.197 405.134 cv
347.197 410.753 342.642 415.308 337.023 415.308 cv
331.403 415.308 326.848 410.753 326.848 405.134 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 326.848 394.96 ]ct
@
grestore newpath
342.975 439.439 mo
342.975 433.82 347.531 429.265 353.15 429.265 cv
358.77 429.265 363.325 433.82 363.325 439.439 cv
363.325 445.058 358.77 449.613 353.15 449.613 cv
347.531 449.613 342.975 445.058 342.975 439.439 cv
cp
.00231937 .260197 1 0 cmyk
f
342.975 439.439 mo
342.975 433.82 347.531 429.265 353.15 429.265 cv
358.77 429.265 363.325 433.82 363.325 439.439 cv
363.325 445.058 358.77 449.613 353.15 449.613 cv
347.531 449.613 342.975 445.058 342.975 439.439 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 342.975 429.265 ]ct
@
grestore newpath
381.975 440.905 mo
381.975 435.286 386.53 430.731 392.15 430.731 cv
397.769 430.731 402.324 435.286 402.324 440.905 cv
402.324 446.524 397.769 451.079 392.15 451.079 cv
386.53 451.079 381.975 446.524 381.975 440.905 cv
cp
.00231937 .260197 1 0 cmyk
f
381.975 440.905 mo
381.975 435.286 386.53 430.731 392.15 430.731 cv
397.769 430.731 402.325 435.286 402.325 440.905 cv
402.325 446.524 397.769 451.079 392.15 451.079 cv
386.53 451.079 381.975 446.524 381.975 440.905 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 381.975 430.731 ]ct
@
grestore newpath
401.621 407.186 mo
401.621 401.567 406.177 397.012 411.796 397.012 cv
417.415 397.012 421.971 401.567 421.971 407.186 cv
421.971 412.805 417.415 417.36 411.796 417.36 cv
406.177 417.36 401.621 412.805 401.621 407.186 cv
cp
.00231937 .260197 1 0 cmyk
f
401.621 407.186 mo
401.621 401.567 406.177 397.012 411.796 397.012 cv
417.415 397.012 421.971 401.567 421.971 407.186 cv
421.971 412.805 417.415 417.36 411.796 417.36 cv
406.177 417.36 401.621 412.805 401.621 407.186 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 401.621 397.012 ]ct
@
grestore newpath
363.795 406.6 mo
363.795 400.981 368.35 396.426 373.969 396.426 cv
379.589 396.426 384.144 400.981 384.144 406.6 cv
384.144 412.219 379.589 416.774 373.969 416.774 cv
368.35 416.774 363.795 412.219 363.795 406.6 cv
cp
.00231937 .260197 1 0 cmyk
f
363.795 406.6 mo
363.795 400.981 368.35 396.426 373.969 396.426 cv
379.589 396.426 384.144 400.981 384.144 406.6 cv
384.144 412.219 379.589 416.774 373.969 416.774 cv
368.35 416.774 363.795 412.219 363.795 406.6 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 363.795 396.426 ]ct
@
grestore newpath
352.442 441.541 mo
313.494 441.541 li
0 .503929 0 0 cmyk
gsave
[-4.61778e-05 0 0 4.61748e-05 352.442 441.541 ]ct
@
grestore newpath
352.288 441.396 mo
370.833 475.08 li
gsave
[4.61778e-05 0 0 4.61748e-05 352.288 441.396 ]ct
@
grestore newpath
352.52 441.606 mo
331.945 476.099 li
gsave
[-4.61778e-05 0 0 4.61748e-05 352.52 441.606 ]ct
@
grestore newpath
370.682 475.186 mo
350.208 510.396 li
gsave
[-4.61778e-05 0 0 4.61748e-05 370.682 475.186 ]ct
@
grestore newpath
313.228 441.698 mo
351.069 510.43 li
gsave
[4.61778e-05 0 0 4.61748e-05 313.228 441.698 ]ct
@
grestore newpath
370.173 475.613 mo
329.568 475.613 li
gsave
[-4.61778e-05 0 0 4.61748e-05 370.173 475.613 ]ct
@
grestore newpath
341.849 442.611 mo
341.849 436.992 346.404 432.437 352.024 432.437 cv
357.643 432.437 362.199 436.992 362.199 442.611 cv
362.199 448.23 357.643 452.786 352.024 452.786 cv
346.404 452.786 341.849 448.23 341.849 442.611 cv
cp
.467353 0 .87747 0 cmyk
f
341.849 442.611 mo
341.849 436.992 346.405 432.437 352.024 432.437 cv
357.643 432.437 362.199 436.992 362.199 442.611 cv
362.199 448.23 357.643 452.786 352.024 452.786 cv
346.405 452.786 341.849 448.23 341.849 442.611 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 341.849 432.437 ]ct
@
grestore newpath
303.143 443.491 mo
303.143 437.872 307.698 433.317 313.318 433.317 cv
318.937 433.317 323.492 437.872 323.492 443.491 cv
323.492 449.11 318.937 453.665 313.318 453.665 cv
307.698 453.665 303.143 449.11 303.143 443.491 cv
cp
.467353 0 .87747 0 cmyk
f
303.143 443.491 mo
303.143 437.872 307.698 433.317 313.318 433.317 cv
318.937 433.317 323.492 437.872 323.492 443.491 cv
323.492 449.11 318.937 453.665 313.318 453.665 cv
307.698 453.665 303.143 449.11 303.143 443.491 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 303.143 433.317 ]ct
@
grestore newpath
339.503 510.636 mo
339.503 505.017 344.059 500.462 349.678 500.462 cv
355.297 500.462 359.853 505.017 359.853 510.636 cv
359.853 516.255 355.297 520.81 349.678 520.81 cv
344.059 520.81 339.503 516.255 339.503 510.636 cv
cp
.467353 0 .87747 0 cmyk
f
339.503 510.636 mo
339.503 505.017 344.059 500.462 349.678 500.462 cv
355.297 500.462 359.853 505.017 359.853 510.636 cv
359.853 516.255 355.297 520.81 349.678 520.81 cv
344.059 520.81 339.503 516.255 339.503 510.636 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 339.503 500.462 ]ct
@
grestore newpath
359.15 476.917 mo
359.15 471.298 363.705 466.743 369.324 466.743 cv
374.944 466.743 379.499 471.298 379.499 476.917 cv
379.499 482.536 374.944 487.091 369.324 487.091 cv
363.705 487.091 359.15 482.536 359.15 476.917 cv
cp
.467353 0 .87747 0 cmyk
f
359.15 476.917 mo
359.15 471.298 363.705 466.743 369.324 466.743 cv
374.944 466.743 379.499 471.298 379.499 476.917 cv
379.499 482.536 374.944 487.091 369.324 487.091 cv
363.705 487.091 359.15 482.536 359.15 476.917 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 359.15 466.743 ]ct
@
grestore newpath
321.323 476.331 mo
321.323 470.712 325.878 466.156 331.498 466.156 cv
337.117 466.156 341.673 470.712 341.673 476.331 cv
341.673 481.95 337.117 486.505 331.498 486.505 cv
325.878 486.505 321.323 481.95 321.323 476.331 cv
cp
.467353 0 .87747 0 cmyk
f
321.323 476.33 mo
321.323 470.711 325.878 466.156 331.498 466.156 cv
337.117 466.156 341.673 470.711 341.673 476.33 cv
341.673 481.949 337.117 486.505 331.498 486.505 cv
325.878 486.505 321.323 481.949 321.323 476.33 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 321.323 466.156 ]ct
@
grestore newpath
%ADOBeginSubsetFont: WAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLO+CambriaMath gcheck setglobal} if
1 160 1 <00020069fff0045d03cd002100330000013717030615141633323637170e
01232226353437270e0123222635341236333216033e0135342623220602
15141633323e0137035b5c4093161a1c1e443e395a7f4a3e4a170d60ac60
6e7987ec9141711c0906424f67a45c3943427f871c038b4210fd865f3528
2431453860515244373e048c82a696ac013db71dfeb1293c234d48a6fee9
8b686772d38a>GHVRLO+CambriaMath AddT42Char 
1 316 2 <0002005cfff003e705960018002d00003707270136353426273f01330317
3e01333216151402062322030615141633323e0435342623220e0207f85c
4001031733420cfd3ab00d61aa556d7985ec92850f0f4550294a4d453a20
3b41305d7248193141100477662e2a22023409fd44048274a697a5fec1bb
016c46424f461b3e6594a94d68683d8d9473>GHVRLO+CambriaMath AddT42Char 
GHVRLO+CambriaMath /CharStrings get begin
/g1 1 def
/g2 2 def
end
GHVRLO+CambriaMath /Encoding get
dup 34 /g1 put
dup 35 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLO+CambriaMath*1 [33{/.notdef}rp /g3 /g1 /g2 220{/.notdef}rp]GHVRLO+CambriaMath nfGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf364.898 408.311 mo(")sh371.02 408.311 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf378.196 410.471 mo(')shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf402.593 408.791 mo(")sh408.715 408.791 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf416.134 410.951 mo(&)shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf386.347 373.991 mo(")sh392.47 373.991 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf399.889 376.151 mo(!)shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf346.191 374.951 mo(")sh352.314 374.951 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf359.413 377.111 mo(")shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf327.417 407.831 mo(")sh333.539 407.831 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf340.958 409.991 mo(#)shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf382.598 441.911 mo(")sh388.721 441.911 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf396.14 444.071 mo(%)shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf322.231 478.871 mo(#)sh328.181 478.871 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf335.356 481.031 mo(')shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf359.93 479.351 mo(#)sh365.879 479.351 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf373.298 481.511 mo(&)shGHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf304.38 445.751 mo(#)sh310.329 445.751 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf317.428 447.671 mo(")sh%ADOBeginSubsetFont: OAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLK+Calibri gcheck setglobal} if
1 598 2 <0002005e0138039d0349000d001b003eb0852b58b4000e07150bbc010a00
040011010a0018002fedd6ed012f33cd3231301bb1040bb8010ab46c0418
1811b8010ab16c1800182f2b10c62b303159011406232122263534363321
32161114062321222635343633213216039d170ffd0c0f16141102f41214
170ffd0c0f16141102f412140303281f1f28242222fe57281e1e28252222
>GHVRLK+Calibri AddT42Char 
GHVRLK+Calibri /CharStrings get begin
/g2 2 def
end
GHVRLK+Calibri /Encoding get
dup 34 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLK+Calibri*1 [33{/.notdef}rp /g1 /g2 221{/.notdef}rp]GHVRLK+Calibri nfGHVRLK+Calibri*1 [18 0 0 -17.9988 0 0 ]msf290.339 447.431 mo(")sh102.638 415.627 mo
102.465 417.07 li
101.944 418.55 li
101.118 419.982 li
100.018 421.359 li
98.6667 422.676 li
97.0879 423.927 li
95.3021 425.106 li
93.3296 426.203 li
91.1908 427.209 li
88.9059 428.116 li
86.4955 428.912 li
83.9798 429.587 li
81.3794 430.131 li
78.7149 430.534 li
76.0069 430.783 li
73.2946 430.868 li
73.3174 430.867 li
71.9688 430.962 li
72.0475 430.951 li
70.7015 431.232 li
70.7724 431.213 li
69.4317 431.674 li
69.4933 431.648 li
68.1605 432.284 li
68.2127 432.255 li
66.8905 433.059 li
66.934 433.029 li
65.625 433.995 li
65.6611 433.966 li
64.3678 435.087 li
64.3978 435.059 li
63.123 436.33 li
63.1479 436.304 li
61.8941 437.719 li
61.9149 437.694 li
60.6849 439.248 li
60.7024 439.224 li
59.4987 440.91 li
59.5135 440.888 li
58.3388 442.699 li
58.3515 442.679 li
57.2084 444.61 li
57.2193 444.591 li
56.1105 446.636 li
56.1199 446.618 li
55.048 448.772 li
55.0562 448.754 li
54.0238 451.01 li
54.031 450.993 li
53.0408 453.345 li
53.0472 453.329 li
52.1017 455.77 li
52.11 455.748 li
50.364 460.876 li
50.3731 460.847 li
48.8379 466.264 li
48.8451 466.236 li
47.5418 471.893 li
47.5475 471.865 li
46.4971 477.714 li
46.5015 477.686 li
45.7251 483.679 li
45.7281 483.65 li
45.2468 489.739 li
45.2484 489.709 li
45.1622 492.915 li
43.9897 492.883 li
44.0764 489.662 li
44.56 483.543 li
45.3401 477.521 li
46.3956 471.644 li
47.7054 465.959 li
49.2488 460.513 li
51.0036 455.358 li
51.9565 452.897 li
52.9536 450.53 li
53.9937 448.258 li
55.0744 446.086 li
56.1934 444.022 li
57.3482 442.071 li
58.5366 440.239 li
59.7563 438.531 li
61.0054 436.954 li
62.2819 435.513 li
63.584 434.214 li
64.9102 433.064 li
66.2591 432.07 li
67.6291 431.238 li
69.0188 430.575 li
70.4257 430.092 li
71.8467 429.795 li
73.2464 429.696 li
75.9524 429.611 li
75.9169 429.614 li
78.5904 429.367 li
78.5567 429.371 li
81.188 428.974 li
81.1554 428.98 li
83.7234 428.443 li
83.6915 428.45 li
86.1752 427.783 li
86.1434 427.793 li
88.5218 427.007 li
88.4894 427.019 li
90.7413 426.126 li
90.7078 426.14 li
92.8122 425.15 li
92.7768 425.168 li
94.7125 424.092 li
94.6746 424.115 li
96.4206 422.962 li
96.3793 422.992 li
97.9145 421.775 li
97.8694 421.815 li
99.1728 420.544 li
99.1241 420.598 li
100.174 419.284 li
100.125 419.357 li
100.901 418.011 li
100.856 418.109 li
101.337 416.742 li
101.308 416.867 li
101.473 415.488 li
cp
46.3505 492.36 mo
44.4971 495.83 li
42.833 492.265 li
cp
f
5.87599 515.223 mo
66.615 515.223 li
66.615 516.542 li
5.87599 516.542 li
cp
6.53583 517.862 mo
2.57724 515.883 li
6.53583 513.904 li
cp
65.9553 513.904 mo
69.9139 515.883 li
65.9553 517.862 li
cp
f
%ADOBeginSubsetFont: UAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLN+Calibri gcheck setglobal} if
1 1694 5 <000100acfffa0354050e00270083b0852b58b10713b8ffe8b310014d13b8
fff0b30f014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d
13b80211b50d1d001e1d07b8010cb313131906b80128b322511955003f3f
ed12392fed012f2fc41139e12b2b2b2b2b3231301bb11307b8010cb56c13
13192206b80128b46c2251195500183f3f2b12392f2b30315901140e0223
211121321e0215140e02232111140e0223222e02351134363321321e0203
54040a0d07fe2601c0070d0a04040a0d07fe400814201a18221408291702
46070d0a0404c4131c1108fe4807101b15131b1109fde5070d070505070d
0704ae271f08121d>GHVRLN+Calibri AddT42Char 
GHVRLN+Calibri /CharStrings get begin
/g5 5 def
end
GHVRLN+Calibri /Encoding get
dup 34 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLN+Calibri*1 [33{/.notdef}rp /g4 /g5 221{/.notdef}rp]GHVRLN+Calibri nfGHVRLN+Calibri*1 [14 0 0 -13.9991 0 0 ]msf34.1384 526.871 mo(")sh2.57724 495.845 mo
19.2005 495.845 li
19.2005 512.467 li
2.57724 512.467 li
cp
.690181 .93228 0 0 cmyk
f
2.57724 495.845 mo
19.2005 495.845 li
19.2005 512.467 li
2.57724 512.467 li
cp
.75021 .679683 .670222 .90164 cmyk
12700 lw
gsave
[4.61778e-05 0 0 4.61748e-05 2.57724 495.845 ]ct
@
grestore newpath
19.4285 495.83 mo
36.0517 495.83 li
36.0517 512.452 li
19.4285 512.452 li
cp
0 .503929 0 0 cmyk
f
19.4285 495.83 mo
36.0517 495.83 li
36.0517 512.452 li
19.4285 512.452 li
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 19.4285 495.83 ]ct
@
grestore newpath
36.1856 495.83 mo
52.8089 495.83 li
52.8089 512.452 li
36.1856 512.452 li
cp
.428809 .260105 0 0 cmyk
f
36.1856 495.83 mo
52.8089 495.83 li
52.8089 512.452 li
36.1856 512.452 li
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 36.1856 495.83 ]ct
@
grestore newpath
53.0528 495.83 mo
69.676 495.83 li
69.676 512.452 li
53.0528 512.452 li
cp
.245853 .0877089 1 0 cmyk
f
53.0528 495.83 mo
69.676 495.83 li
69.676 512.452 li
53.0528 512.452 li
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 53.0528 495.83 ]ct
@
grestore newpath
GHVRLO+CambriaMath*1 [11 0 0 -10.9993 0 0 ]msf340.527 513.191 mo(#)sh346.477 513.191 mo(!)shGHVRLP+CambriaMath*1 [8 0 0 -7.99947 0 0 ]msf353.895 515.351 mo(%)sh289.173 491.102 mo
339.517 450.283 li
338.224 448.689 li
287.88 489.508 li
cp
340.012 452.524 mo
342.856 446.254 li
336.134 447.741 li
cp
f
%ADOBeginSubsetFont: KAAAAA+DengXian-Regular AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLI+DengXian-Regular gcheck setglobal} if
1 2082 7 <00050077ff1707830627005f00630067006b006f00bc40292a464631416d
636329496965656c621e52526864165a5a1d555c1513005e0f411f412f41
0390490149b8ffc0404c0a0d485f627f629f62ef62ff6205df6201406201
106401df64014064011f642f64025f556f55023055014f5e5f5e6f5e0341
496264555e5e5564624941063906323e3e396813011360060106002f5d33
5d2f331133111217392f2f2f2f2f2f5d5d5d5d5d5d715d5d712b5d5d1133
123939113333113311333311331133331133113333113311333311333031
011633323724371716151407062322272623220706051521163715260721
152116370617110617260721152132371526072115211637152607212607
351637213521260735163721352126073627113627163721352126073516
372135060526013521151115213533152135011521350123909fd3d7016c
c35e1201030b0710221b1618b6fef002be3d3c3e39fd4001b2394e0e0202
0e4a3bfe4c01ef3c434c35fe1302c0354a463bfa023b463b4202d1fe1d34
4b413701eafe523a510e02020e4b3e01b0fd29374c3f4002dbcbfe6b2702
87fe4101bf7301befe4201be059a0c16295a7b150a0301050307051e29b7
020f7b0e0281020e493afe7140410e02910c7b0e02b4020e7a0e02020e7a
0e02b4020e7b0e0291020e433c0193354c0e0281020e7b0f02a8160f61fc
1cb0b001bfb0b0b0b0fef1b0b000>GHVRLI+DengXian-Regular AddT42Char 
1 0 1 <00080068ff0e079106120017001b001f0023003b005a007b009800b8407d
1d1a231c02222c39928d8d544f5d7a6f1a01af1abf1a027f1a8f1a02401a
601a02b01c016f1c01001c01af1c01001c01601c701c801ca01c04002201
a022b022f02203003901a039b039f039036f3901403901004f01804fb04f
f04f036f4f01807a011a1c22394f7a7a4f39221c1a060f6e646280690169
1b0814140f002f331133332f5d3333331217392f2f2f2f2f2f5d5d5d715d
5d5d715d715d71717272725d5d717211331133332f331133113311331133
303101163321163706151133323715260721220735163333113401352115
1115213d0221152523363535342716332132370615151417233635352115
140107262706072627363726272627371617363721220735163321163706
071601163332372627371617161736372122073516332132370605161707
262704052601072627060726273637262737161736372122073516332116
3706071601d57b3f02e63d710cc644706a4afa3545656347cf03c3fcb003
50fcb0fec78c0d0d6b3b059043690d0d8c0dfa1c02d53d797f97d11d44e6
852d4c541b324db9504dfe344464664201e546706aa87dfe065149e7dfa8
932b1429d7757166fd5646646248034a507fb5fefac9e533effefeaefeaa
1505693e917bb0bf103ecf8c65793854ac5e56fe684367634701a44e7583
9e8701b00c020e6c40fe710c730f020d730c018739fe406666011c606056
67674a56352734580d0d5b313135545039564c350140545045583d2f2f1f
4b1521220d451e54334e0d6f0c020e937d4001d3073e23175204092f1a2d
390c720c0c7a77314a525e376a1439fe1d5252375a2b273914442729501f
483a560d6f0c020eae733d00>GHVRLI+DengXian-Regular AddT42Char 
1 1278 4 <00020058fed507b60633002e0044001d400c3835141818350b29291c351c
002f2f12392f3311392f3311333031011716150607060706070607213237
020316051633323706070403060526272413260336371617121321020726
27000123363511342717161716070607110405072625111401f6ae120214
1914060b1e0f0129277b50b287014cb6c9b0b62d14fc21daa8feee295601
21c69148404311899a27fea57ca44e4e016f037d8c0d0da2150204112b02
011701374ae3fedf060829040a080f0e3f13276c2b0afd7bfec4b247251c
4b5d060146f2b4422f5e013dfa0106061fcddd01540185feaefc1b0a01aa
fcaa7344044b468b18020d0c0a1f75febf98f37fceb1fd814200>GHVRLI+DengXian-Regular AddT42Char 
1 1772 6 <000300b4fec507a006370046004c0052002b4013100d51044e0d4b48043e
15091c0904043a0d3a002f2f12392f333311333211333211331133113330
313724011121220735163321353427171615160706071521323715262321
121724371716070623222726232207060706070005060700031116070607
262716333237362711000726133716170726013716170726b4014001d9fd
ba4e6c6e4c02460c9f190215240302405c676360fdc5356e012183650e04
0309050c110f22222f7b7b3d010401856343fe0ec9054037df0535623531
1a3902fde18729465aaa9d548b030a529a7b567d21b4019a01d10d7f0cdb
486e1402080914295cd10c7f0dfef9b4a6899915080402041219434421fe
83a42b41015e01e3fc94691c210a474e09070c3e0239fe5a9d4703356183
8e70970333616b6c657b>GHVRLI+DengXian-Regular AddT42Char 
1 642 2 <00030079fedb074a060e0039004f00530027401151484812220829080303
123c5050321232002f2f12392f3311392f3333113311392f333031373613
210607351617211106072627163320251716151407062726232207060706
071133363715262723151617072627111617233637110207260116172136
37060711161723363721161723363711261711211179efecfedf4a56564a
013a79ec102d3e1e019301234c050304130f0e131d1f466023d558505452
d7cb93587b8b020b8c0a03b3b22d03b66d4601564f610b02020b8c0b02fe
41020b880b02027401bbc9cf01cc020a7f0a020175151f424a0278810804
030304020305040d0e06fe79020a7f0a025e8d87718b6ffd10456b624e03
13fedff62704770a02020a5a50fbe54c6252444a565c4e042b4a15fbfc04
0400>GHVRLI+DengXian-Regular AddT42Char 
GHVRLI+DengXian-Regular /CharStrings get begin
/g7 7 def
/g1 1 def
/g4 4 def
/g6 6 def
/g2 2 def
end
GHVRLI+DengXian-Regular /Encoding get
dup 35 /g7 put
dup 36 /g1 put
dup 37 /g4 put
dup 38 /g6 put
dup 39 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLI+DengXian-Regular*1 [33{/.notdef}rp /g5 /g3 /g7 /g1 /g4 /g6 /g2 216{/.notdef}rp]GHVRLI+DengXian-Regular nfGHVRLI+DengXian-Regular*1 [12 0 0 -11.9992 0 0 ]msf256.444 499.511 mo(#$%&')[11.7288 11.7288 11.7288 11.7288 0 ]xsh97.8421 411.19 mo
97.8421 405.314 102.606 400.55 108.482 400.55 cv
114.359 400.55 119.123 405.314 119.123 411.19 cv
119.123 417.066 114.359 421.829 108.482 421.829 cv
102.606 421.829 97.8421 417.066 97.8421 411.19 cv
cp
.00231937 .260197 1 0 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLL+CambriaMath gcheck setglobal} if
1 160 1 <00020069fff0045d03cd002100330000013717030615141633323637170e
01232226353437270e0123222635341236333216033e0135342623220602
15141633323e0137035b5c4093161a1c1e443e395a7f4a3e4a170d60ac60
6e7987ec9141711c0906424f67a45c3943427f871c038b4210fd865f3528
2431453860515244373e048c82a696ac013db71dfeb1293c234d48a6fee9
8b686772d38a>GHVRLL+CambriaMath AddT42Char 
GHVRLL+CambriaMath /CharStrings get begin
/g1 1 def
end
GHVRLL+CambriaMath /Encoding get
dup 34 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLL+CambriaMath*1 [33{/.notdef}rp /g2 /g1 221{/.notdef}rp]GHVRLL+CambriaMath nfGHVRLL+CambriaMath*1 [19 0 0 -18.9987 0 0 ]msf102.566 415.991 mo(")sh135.493 480.505 mo
135.493 474.628 140.257 469.865 146.133 469.865 cv
152.01 469.865 156.773 474.628 156.773 480.505 cv
156.773 486.381 152.01 491.144 146.133 491.144 cv
140.257 491.144 135.493 486.381 135.493 480.505 cv
cp
.326574 .281529 .277562 0 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLL+CambriaMath gcheck setglobal} if
1 454 3 <00010069ffef038b03cc001d0000012e022322060215141633323637170e
012322263534123e013332170702f102152f2b65a16650505b854a3d5ebf
6e9196509ace7585703102cc4c4422a1fed9886663454a3d6860aca46b01
00c2601ee200>GHVRLL+CambriaMath AddT42Char 
GHVRLL+CambriaMath /CharStrings get begin
/g3 3 def
end
GHVRLL+CambriaMath /Encoding get
dup 35 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLL+CambriaMath*1 [33{/.notdef}rp /g2 /g1 /g3 220{/.notdef}rp]GHVRLL+CambriaMath nfGHVRLL+CambriaMath*1 [19 0 0 -18.9987 0 0 ]msf141.183 484.871 mo(#)sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: UAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLN+Calibri gcheck setglobal} if
1 382 1 <00020023fffa047e05140022002600dcb0852b58b90024ffe8b40c10014c
23b8ffe8b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8ff
f0401a0b10014c25100b10014c0d100b10014c0c100b10014c40280125b8
fff0402c0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02
af23bf23cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d11
173911123939113310ed3211333130012b5d2b2b2b2b2b2b002b2b1b401e
2423260c25f46c0b0c18221d230a0d0116040c230c230c121d5212550555
00183f3f3f1239392f2f1117391112393911332b32113330315925161606
0623222e02270321030e03232226263637013e0333321e02170723032104
75080110251f1f251309046ffde66a030a13231c1d250f010801b2040d19
271e202a1a0e047b01df01c23d161b0e0403070c09013bfec9090d090405
0e1b1604b20b0e080303080f0b8dfd7b>GHVRLN+Calibri AddT42Char 
1 1942 6 <00010097fff7016e00e0000b0029b0852b58b10006b8ffc0b60c014d0609
034c003fcd012f2bc131301bb30940034c00183f1acd3031592514062322
26353436333216016e2f3e3c2e2f3e3c2e6d472f2e45472f2e00>GHVRLN+Calibri AddT42Char 
1 728 2 <000300ac00000401050e001e002b003800f7b0852b58401a1f1810014d1f
100f014d1f100d014d1f180c014d1f200b014d1fb8022e40281a15401001
4d15400f014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c
200b014d2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0
b30f014d33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b8
0210400da00bc00b020b1a27f431310724b80109b2105134b8010bb10754
003fed3fed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b1239
2f2b2b39e12b2b2b2b2b31301b400a1a3127f46c3131071024b80109b46c
10510734b8010bb26c075400183f2b3f2b12392f2b3930315901140e0423
212226351134363321321e0215140e02071e0301342e0223231133323e02
13342e0223231133323e0204011f384f637149feae172929170126749463
32162b412a355c4528fefd1a385a4ab2c4435236194e25476b51cefa3b58
432601733d67523e2a151f270482271f2c547a4d2e544738120a35526e02
012f4c351cfe5d233b4ffddd3a583c1ffe381c375200>GHVRLN+Calibri AddT42Char 
1 1140 3 <00010061fff0040c051e00390097b0852b58b31c003b2bb8ffe8b310014d
2bb8fff0b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b
014d2bbe0233000e0018012f00210026012cb2135304bb012a0035003001
2eb10956003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c431301bb12118
b8012fb36c211326b8012cb46c13533504b8012ab36c350930b8012eb26c
095600183f2bc42b3f2bc42b30315925140e0623222e0235343e0233321e
0615140e0223222e0223220e0215141e0233323e0233321e02040c020508
14405f7b497ecb8f4d5396d17f386a5a461b08050304080b080e324f714f
568d64373563905b4d7351340f070a0603b71018120e1429271b54a4f19d
a1fcaf5c15202a1b0e131a12141c1309272f274586c17c7bbd7f41262f26
06111e00>GHVRLN+Calibri AddT42Char 
GHVRLN+Calibri /CharStrings get begin
/g1 1 def
/g6 6 def
/g2 2 def
/g3 3 def
end
GHVRLN+Calibri /Encoding get
dup 35 /g1 put
dup 36 /g6 put
dup 37 /g2 put
dup 38 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLN+Calibri*1 [33{/.notdef}rp /g4 /g5 /g1 /g6 /g2 /g3 217{/.notdef}rp]GHVRLN+Calibri nfGHVRLN+Calibri*1 [14 0 0 -13.9991 0 0 ]msf67.3285 13.5111 mo(#$)[8.21932 0 ]xsh60.9306 187.511 mo(%$)[7.62448 0 ]xsh69.0331 362.951 mo(&$)[7.47746 0 ]xsh334.359 20.9001 mo
290.758 20.9001 li
.62829 .284672 0 0 cmyk
19050 lw
gsave
[-4.61778e-05 0 0 4.61748e-05 334.359 20.9001 ]ct
@
grestore newpath
332.417 20.245 mo
369.052 86.7879 li
gsave
[4.61778e-05 0 0 4.61748e-05 332.417 20.245 ]ct
@
grestore newpath
273.744 55.0036 mo
330.8 158.638 li
gsave
[4.61778e-05 0 0 4.61748e-05 273.744 55.0036 ]ct
@
grestore newpath
330.949 152.176 mo
287.348 152.176 li
gsave
[-4.61778e-05 0 0 4.61748e-05 330.949 152.176 ]ct
@
grestore newpath
372.655 89.6595 mo
254.543 89.6595 li
gsave
[-4.61778e-05 0 0 4.61748e-05 372.655 89.6595 ]ct
@
grestore newpath
293.34 21.31 mo
252.587 89.6357 li
gsave
[-4.61778e-05 0 0 4.61748e-05 293.34 21.31 ]ct
@
grestore newpath
352.568 55.4174 mo
291.7 157.465 li
gsave
[-4.61778e-05 0 0 4.61748e-05 352.568 55.4174 ]ct
@
grestore newpath
346.844 55.7936 mo
346.844 51.911 349.992 48.7634 353.874 48.7634 cv
357.757 48.7634 360.905 51.911 360.905 55.7936 cv
360.905 59.6763 357.757 62.8239 353.874 62.8239 cv
349.992 62.8239 346.844 59.6763 346.844 55.7936 cv
cp
.2757 .151858 0 0 cmyk
f
326.571 20.8753 mo
326.571 16.9926 329.718 13.8451 333.601 13.8451 cv
337.484 13.8451 340.632 16.9926 340.632 20.8753 cv
340.632 24.758 337.484 27.9055 333.601 27.9055 cv
329.718 27.9055 326.571 24.758 326.571 20.8753 cv
cp
f
287.087 21.0064 mo
287.087 17.1238 290.235 13.9762 294.118 13.9762 cv
298.001 13.9762 301.149 17.1238 301.149 21.0064 cv
301.149 24.8891 298.001 28.0366 294.118 28.0366 cv
290.235 28.0366 287.087 24.8891 287.087 21.0064 cv
cp
f
265.854 55.2592 mo
265.854 51.3765 269.002 48.229 272.885 48.229 cv
276.768 48.229 279.915 51.3765 279.915 55.2592 cv
279.915 59.1418 276.768 62.2894 272.885 62.2894 cv
269.002 62.2894 265.854 59.1418 265.854 55.2592 cv
cp
f
325.188 89.769 mo
325.188 85.8863 328.336 82.7388 332.219 82.7388 cv
336.102 82.7388 339.25 85.8863 339.25 89.769 cv
339.25 93.6516 336.102 96.7992 332.219 96.7992 cv
328.336 96.7992 325.188 93.6516 325.188 89.769 cv
cp
f
285.377 89.9985 mo
285.377 86.1158 288.525 82.9683 292.408 82.9683 cv
296.29 82.9683 299.438 86.1158 299.438 89.9985 cv
299.438 93.8812 296.29 97.0287 292.408 97.0287 cv
288.525 97.0287 285.377 93.8812 285.377 89.9985 cv
cp
f
306.697 55.5342 mo
306.697 51.6515 309.844 48.504 313.727 48.504 cv
317.61 48.504 320.758 51.6515 320.758 55.5342 cv
320.758 59.4169 317.61 62.5644 313.727 62.5644 cv
309.844 62.5644 306.697 59.4169 306.697 55.5342 cv
cp
.0619821 0 .965148 0 cmyk
f
306.697 55.5342 mo
306.697 51.6516 309.845 48.504 313.727 48.504 cv
317.61 48.504 320.758 51.6516 320.758 55.5342 cv
320.758 59.4169 317.61 62.5644 313.727 62.5644 cv
309.845 62.5644 306.697 59.4169 306.697 55.5342 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 306.697 48.504 ]ct
@
grestore newpath
266.175 123.017 mo
266.175 119.134 269.323 115.986 273.206 115.986 cv
277.089 115.986 280.236 119.134 280.236 123.017 cv
280.236 126.899 277.089 130.047 273.206 130.047 cv
269.323 130.047 266.175 126.899 266.175 123.017 cv
cp
.0619821 0 .965148 0 cmyk
f
266.175 123.017 mo
266.175 119.134 269.323 115.986 273.206 115.986 cv
277.089 115.986 280.237 119.134 280.237 123.017 cv
280.237 126.899 277.089 130.047 273.206 130.047 cv
269.323 130.047 266.175 126.899 266.175 123.017 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 266.175 115.986 ]ct
@
grestore newpath
344.966 123.501 mo
344.966 119.618 348.113 116.47 351.996 116.47 cv
355.879 116.47 359.027 119.618 359.027 123.501 cv
359.027 127.383 355.879 130.531 351.996 130.531 cv
348.113 130.531 344.966 127.383 344.966 123.501 cv
cp
.0619821 0 .965148 0 cmyk
f
344.966 123.501 mo
344.966 119.618 348.113 116.47 351.996 116.47 cv
355.879 116.47 359.027 119.618 359.027 123.501 cv
359.027 127.383 355.879 130.531 351.996 130.531 cv
348.113 130.531 344.966 127.383 344.966 123.501 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 344.966 116.47 ]ct
@
grestore newpath
364.771 89.8007 mo
364.771 85.9181 367.919 82.7705 371.802 82.7705 cv
375.685 82.7705 378.832 85.9181 378.832 89.8007 cv
378.832 93.6834 375.685 96.8309 371.802 96.8309 cv
367.919 96.8309 364.771 93.6834 364.771 89.8007 cv
cp
.2757 .151858 0 0 cmyk
f
246.695 89.7963 mo
246.695 85.9136 249.843 82.7661 253.726 82.7661 cv
257.608 82.7661 260.756 85.9136 260.756 89.7963 cv
260.756 93.679 257.608 96.8265 253.726 96.8265 cv
249.843 96.8265 246.695 93.679 246.695 89.7963 cv
cp
f
305.278 123.627 mo
305.278 119.745 308.426 116.597 312.309 116.597 cv
316.192 116.597 319.34 119.745 319.34 123.627 cv
319.34 127.51 316.192 130.657 312.309 130.657 cv
308.426 130.657 305.278 127.51 305.278 123.627 cv
cp
f
322.43 152.399 mo
322.43 148.517 325.578 145.369 329.461 145.369 cv
333.343 145.369 336.491 148.517 336.491 152.399 cv
336.491 156.282 333.343 159.43 329.461 159.43 cv
325.578 159.43 322.43 156.282 322.43 152.399 cv
cp
f
284.423 152.641 mo
284.423 148.758 287.571 145.611 291.454 145.611 cv
295.336 145.611 298.484 148.758 298.484 152.641 cv
298.484 156.523 295.336 159.671 291.454 159.671 cv
287.571 159.671 284.423 156.523 284.423 152.641 cv
cp
f
173.503 82.7871 mo
175.072 80.8197 li
176.838 78.8952 li
178.771 77.0399 li
180.866 75.2546 li
183.114 73.5403 li
185.511 71.8979 li
188.048 70.3284 li
190.719 68.8328 li
193.519 67.4122 li
196.44 66.0678 li
199.476 64.8009 li
202.621 63.6126 li
205.868 62.5042 li
209.21 61.4772 li
212.642 60.5329 li
216.163 59.6712 li
223.404 58.2108 li
227.135 57.6103 li
230.917 57.1005 li
234.75 56.682 li
238.627 56.3562 li
242.542 56.1246 li
246.487 55.9887 li
250.458 55.9501 li
254.447 56.0102 li
258.448 56.1705 li
262.455 56.4326 li
266.46 56.798 li
270.458 57.2683 li
274.441 57.845 li
278.405 58.5297 li
282.782 59.4219 li
287.026 60.4342 li
291.128 61.5624 li
295.081 62.8026 li
298.878 64.1509 li
302.51 65.6034 li
305.97 67.1561 li
309.25 68.8054 li
312.344 70.5476 li
315.242 72.3791 li
317.937 74.2964 li
320.421 76.2963 li
322.687 78.3754 li
324.725 80.5305 li
326.528 82.7586 li
327.086 83.5813 li
325.629 84.5685 li
325.093 83.7766 li
325.137 83.8362 li
323.379 81.6635 li
323.424 81.7147 li
321.43 79.6068 li
321.474 79.6505 li
319.253 77.6117 li
319.296 77.6488 li
316.854 75.6832 li
316.896 75.7148 li
314.241 73.8266 li
314.281 73.8534 li
311.422 72.0466 li
311.461 72.0695 li
308.405 70.3484 li
308.442 70.3679 li
305.197 68.7366 li
305.232 68.7532 li
301.806 67.2158 li
301.84 67.2301 li
298.24 65.7908 li
298.273 65.803 li
294.508 64.4659 li
294.539 64.4763 li
290.616 63.2457 li
290.646 63.2545 li
286.574 62.1344 li
286.603 62.1419 li
282.388 61.1365 li
282.416 61.1428 li
278.067 60.2562 li
278.093 60.2611 li
274.154 59.5806 li
274.177 59.5844 li
270.217 59.0111 li
270.24 59.0142 li
266.266 58.5466 li
266.289 58.549 li
262.306 58.1856 li
262.329 58.1874 li
258.345 57.9267 li
258.367 57.9279 li
254.388 57.7685 li
254.41 57.7691 li
250.443 57.7093 li
250.464 57.7094 li
246.516 57.7478 li
246.537 57.7473 li
242.613 57.8824 li
242.635 57.8814 li
238.742 58.1117 li
238.763 58.1102 li
234.908 58.4341 li
234.93 58.432 li
231.119 58.8481 li
231.141 58.8455 li
227.381 59.3523 li
227.404 59.349 li
223.701 59.9449 li
223.735 59.9387 li
216.529 61.3921 li
216.564 61.3843 li
213.073 62.2387 li
213.097 62.2324 li
209.69 63.17 li
209.715 63.1627 li
206.397 64.1819 li
206.423 64.1735 li
203.203 65.2729 li
203.229 65.2633 li
200.112 66.4412 li
200.14 66.4302 li
197.132 67.6853 li
197.161 67.6726 li
194.27 69.0033 li
194.3 68.9886 li
191.532 70.3935 li
191.563 70.3766 li
188.924 71.8541 li
188.957 71.8346 li
186.454 73.3832 li
186.488 73.3607 li
184.127 74.9788 li
184.163 74.9528 li
181.951 76.6391 li
181.989 76.609 li
179.932 78.3619 li
179.971 78.3271 li
178.076 80.1451 li
178.115 80.105 li
176.39 81.9866 li
176.429 81.9406 li
174.878 83.8842 li
cp
326.822 77.9193 mo
327.337 85.5198 li
320.467 82.2273 li
320.029 82.0173 319.844 81.4919 320.054 81.0539 cv
320.264 80.6158 320.789 80.4308 321.228 80.6408 cv
326.738 83.2816 li
325.48 84.1344 li
325.067 78.0383 li
325.034 77.5536 325.4 77.134 325.885 77.1012 cv
326.369 77.0683 326.789 77.4346 326.822 77.9193 cv
cp
.00231937 .260197 1 0 cmyk
f
152.898 130.26 mo
154.395 132.244 li
156.091 134.189 li
157.959 136.066 li
159.992 137.874 li
162.183 139.613 li
164.525 141.281 li
167.012 142.878 li
169.637 144.402 li
172.394 145.852 li
175.276 147.228 li
178.277 148.526 li
181.39 149.748 li
184.609 150.89 li
187.928 151.953 li
191.34 152.933 li
194.844 153.832 li
202.065 155.368 li
205.792 156.008 li
209.574 156.557 li
213.41 157.016 li
217.295 157.383 li
221.222 157.656 li
225.184 157.833 li
229.176 157.914 li
233.189 157.895 li
237.219 157.777 li
241.259 157.557 li
245.301 157.234 li
249.34 156.806 li
253.37 156.272 li
257.384 155.629 li
261.839 154.78 li
266.163 153.809 li
270.349 152.719 li
274.388 151.515 li
278.273 150.201 li
281.995 148.78 li
285.547 147.257 li
288.921 145.635 li
292.108 143.918 li
295.101 142.109 li
297.891 140.212 li
300.472 138.23 li
302.833 136.166 li
304.967 134.024 li
306.865 131.806 li
307.475 130.961 li
306.049 129.932 li
305.46 130.747 li
305.505 130.69 li
303.652 132.855 li
303.697 132.806 li
301.608 134.903 li
301.652 134.861 li
299.335 136.887 li
299.378 136.851 li
296.84 138.801 li
296.881 138.771 li
294.131 140.641 li
294.171 140.615 li
291.216 142.401 li
291.254 142.379 li
288.104 144.077 li
288.14 144.058 li
284.802 145.663 li
284.836 145.648 li
281.318 147.156 li
281.351 147.143 li
277.661 148.551 li
277.693 148.54 li
273.84 149.844 li
273.87 149.834 li
269.861 151.029 li
269.891 151.02 li
265.734 152.102 li
265.763 152.095 li
261.467 153.06 li
261.495 153.055 li
257.068 153.899 li
257.093 153.894 li
253.104 154.533 li
253.127 154.53 li
249.121 155.061 li
249.144 155.058 li
245.127 155.484 li
245.15 155.482 li
241.129 155.803 li
241.152 155.801 li
237.134 156.02 li
237.156 156.019 li
233.149 156.137 li
233.171 156.136 li
229.178 156.154 li
229.2 156.154 li
225.231 156.074 li
225.252 156.075 li
221.312 155.899 li
221.333 155.9 li
217.428 155.629 li
217.45 155.63 li
213.587 155.266 li
213.608 155.268 li
209.794 154.812 li
209.816 154.815 li
206.056 154.268 li
206.078 154.272 li
202.38 153.637 li
202.414 153.644 li
195.228 152.115 li
195.264 152.123 li
191.789 151.232 li
191.813 151.239 li
188.426 150.265 li
188.451 150.273 li
185.158 149.219 li
185.184 149.228 li
181.992 148.095 li
182.019 148.105 li
178.933 146.894 li
178.962 146.906 li
175.99 145.62 li
176.019 145.633 li
173.167 144.272 li
173.198 144.287 li
170.473 142.854 li
170.505 142.871 li
167.913 141.366 li
167.946 141.387 li
165.494 139.812 li
165.529 139.836 li
163.223 138.193 li
163.259 138.221 li
161.105 136.512 li
161.143 136.543 li
159.149 134.769 li
159.188 134.806 li
157.359 132.968 li
157.398 133.011 li
155.742 131.111 li
155.781 131.16 li
154.303 129.2 li
cp
307.045 136.613 mo
307.784 129.031 li
300.82 132.12 li
300.375 132.317 300.175 132.837 300.372 133.281 cv
300.569 133.725 301.089 133.925 301.533 133.728 cv
307.119 131.25 li
305.886 130.361 li
305.294 136.442 li
305.247 136.926 305.601 137.356 306.084 137.403 cv
306.568 137.45 306.998 137.096 307.045 136.613 cv
cp
f
143.822 55.295 mo
143.822 51.4123 146.97 48.2648 150.853 48.2648 cv
154.736 48.2648 157.884 51.4123 157.884 55.295 cv
157.884 59.1776 154.736 62.3252 150.853 62.3252 cv
146.97 62.3252 143.822 59.1776 143.822 55.295 cv
cp
.0619821 0 .965148 0 cmyk
f
143.822 55.295 mo
143.822 51.4124 146.97 48.2648 150.853 48.2648 cv
154.736 48.2648 157.884 51.4124 157.884 55.295 cv
157.884 59.1777 154.736 62.3252 150.853 62.3252 cv
146.97 62.3252 143.822 59.1777 143.822 55.295 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 143.822 48.2648 ]ct
@
grestore newpath
103.301 122.777 mo
103.301 118.895 106.449 115.747 110.332 115.747 cv
114.214 115.747 117.362 118.895 117.362 122.777 cv
117.362 126.66 114.214 129.807 110.332 129.807 cv
106.449 129.807 103.301 126.66 103.301 122.777 cv
cp
.0619821 0 .965148 0 cmyk
f
103.301 122.777 mo
103.301 118.895 106.449 115.747 110.332 115.747 cv
114.214 115.747 117.362 118.895 117.362 122.777 cv
117.362 126.66 114.214 129.808 110.332 129.808 cv
106.449 129.808 103.301 126.66 103.301 122.777 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 103.301 115.747 ]ct
@
grestore newpath
182.091 123.261 mo
182.091 119.379 185.239 116.231 189.122 116.231 cv
193.005 116.231 196.153 119.379 196.153 123.261 cv
196.153 127.144 193.005 130.292 189.122 130.292 cv
185.239 130.292 182.091 127.144 182.091 123.261 cv
cp
.0619821 0 .965148 0 cmyk
f
182.091 123.261 mo
182.091 119.379 185.239 116.231 189.122 116.231 cv
193.005 116.231 196.153 119.379 196.153 123.261 cv
196.153 127.144 193.005 130.292 189.122 130.292 cv
185.239 130.292 182.091 127.144 182.091 123.261 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 182.091 116.231 ]ct
@
grestore newpath
124.936 85.8748 mo
126.89 82.515 131.198 81.375 134.558 83.3285 cv
137.918 85.2821 139.058 89.5894 137.104 92.9492 cv
135.15 96.309 130.843 97.449 127.483 95.4954 cv
124.123 93.5419 122.983 89.2346 124.936 85.8748 cv
cp
.369879 .299321 .304356 .000976577 cmyk
f
301.593 206.383 mo
358.65 310.017 li
.62829 .284672 0 0 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 301.593 206.383 ]ct
@
grestore newpath
261.575 272.519 mo
298.217 339.074 li
gsave
[4.61778e-05 0 0 4.61748e-05 261.575 272.519 ]ct
@
grestore newpath
360.677 308.884 mo
275.309 308.884 li
gsave
[-4.61778e-05 0 0 4.61748e-05 360.677 308.884 ]ct
@
grestore newpath
341.825 206.706 mo
298.224 206.706 li
gsave
[-4.61778e-05 0 0 4.61748e-05 341.825 206.706 ]ct
@
grestore newpath
339.882 206.051 mo
376.518 272.594 li
gsave
[4.61778e-05 0 0 4.61748e-05 339.882 206.051 ]ct
@
grestore newpath
281.209 240.809 mo
338.266 344.443 li
gsave
[4.61778e-05 0 0 4.61748e-05 281.209 240.809 ]ct
@
grestore newpath
349.983 337.834 mo
306.382 337.834 li
gsave
[-4.61778e-05 0 0 4.61748e-05 349.983 337.834 ]ct
@
grestore newpath
380.121 275.465 mo
262.009 275.465 li
gsave
[-4.61778e-05 0 0 4.61748e-05 380.121 275.465 ]ct
@
grestore newpath
300.806 207.116 mo
260.052 275.441 li
gsave
[-4.61778e-05 0 0 4.61748e-05 300.806 207.116 ]ct
@
grestore newpath
360.033 241.223 mo
299.166 343.27 li
gsave
[-4.61778e-05 0 0 4.61748e-05 360.033 241.223 ]ct
@
grestore newpath
354.31 241.599 mo
354.31 237.717 357.457 234.569 361.34 234.569 cv
365.223 234.569 368.371 237.717 368.371 241.599 cv
368.371 245.482 365.223 248.629 361.34 248.629 cv
357.457 248.629 354.31 245.482 354.31 241.599 cv
cp
.2757 .151858 0 0 cmyk
f
334.036 206.681 mo
334.036 202.798 337.184 199.651 341.067 199.651 cv
344.95 199.651 348.098 202.798 348.098 206.681 cv
348.098 210.564 344.95 213.711 341.067 213.711 cv
337.184 213.711 334.036 210.564 334.036 206.681 cv
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GHVRLJ+Calibri gcheck setglobal} if
1 774 2 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>GHVRLJ+Calibri AddT42Char 
GHVRLJ+Calibri /CharStrings get begin
/g2 2 def
end
GHVRLJ+Calibri /Encoding get
dup 39 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GHVRLJ+Calibri*1 [33{/.notdef}rp /g3 /g4 /g7 /g5 /g6 /g8 /g2 216{/.notdef}rp]GHVRLJ+Calibri nfGHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf338.098 210.791 mo(')sh294.553 206.812 mo
294.553 202.929 297.701 199.782 301.584 199.782 cv
305.467 199.782 308.614 202.929 308.614 206.812 cv
308.614 210.695 305.467 213.842 301.584 213.842 cv
297.701 213.842 294.553 210.695 294.553 206.812 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf298.615 210.791 mo(')sh273.32 241.065 mo
273.32 237.182 276.467 234.034 280.35 234.034 cv
284.233 234.034 287.381 237.182 287.381 241.065 cv
287.381 244.947 284.233 248.095 280.35 248.095 cv
276.467 248.095 273.32 244.947 273.32 241.065 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf277.381 245.111 mo(')sh332.654 275.575 mo
332.654 271.692 335.802 268.544 339.685 268.544 cv
343.568 268.544 346.715 271.692 346.715 275.575 cv
346.715 279.457 343.568 282.605 339.685 282.605 cv
335.802 282.605 332.654 279.457 332.654 275.575 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf336.716 279.671 mo(')sh292.843 275.804 mo
292.843 271.921 295.99 268.774 299.873 268.774 cv
303.756 268.774 306.904 271.921 306.904 275.804 cv
306.904 279.687 303.756 282.834 299.873 282.834 cv
295.99 282.834 292.843 279.687 292.843 275.804 cv
cp
.2757 .151858 0 0 cmyk
f
314.162 241.34 mo
314.162 237.457 317.31 234.31 321.193 234.31 cv
325.076 234.31 328.224 237.457 328.224 241.34 cv
328.224 245.222 325.076 248.37 321.193 248.37 cv
317.31 248.37 314.162 245.222 314.162 241.34 cv
cp
.0619821 0 .965148 0 cmyk
f
314.162 241.34 mo
314.162 237.457 317.31 234.31 321.193 234.31 cv
325.076 234.31 328.224 237.457 328.224 241.34 cv
328.224 245.223 325.076 248.37 321.193 248.37 cv
317.31 248.37 314.162 245.223 314.162 241.34 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 314.162 234.31 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf318.224 245.351 mo(')sh273.641 308.822 mo
273.641 304.94 276.789 301.792 280.672 301.792 cv
284.555 301.792 287.702 304.94 287.702 308.822 cv
287.702 312.705 284.555 315.852 280.672 315.852 cv
276.789 315.852 273.641 312.705 273.641 308.822 cv
cp
.0619821 0 .965148 0 cmyk
f
273.641 308.822 mo
273.641 304.939 276.789 301.792 280.672 301.792 cv
284.555 301.792 287.702 304.939 287.702 308.822 cv
287.702 312.705 284.555 315.852 280.672 315.852 cv
276.789 315.852 273.641 312.705 273.641 308.822 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 273.641 301.792 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf277.703 312.791 mo(')sh351.552 308.427 mo
351.552 304.544 354.699 301.396 358.582 301.396 cv
362.465 301.396 365.613 304.544 365.613 308.427 cv
365.613 312.309 362.465 315.457 358.582 315.457 cv
354.699 315.457 351.552 312.309 351.552 308.427 cv
cp
.0619821 0 .965148 0 cmyk
f
351.552 308.426 mo
351.552 304.544 354.699 301.396 358.582 301.396 cv
362.465 301.396 365.613 304.544 365.613 308.426 cv
365.613 312.309 362.465 315.457 358.582 315.457 cv
354.699 315.457 351.552 312.309 351.552 308.426 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 351.552 301.396 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf355.613 312.311 mo(')sh372.237 275.606 mo
372.237 271.724 375.384 268.576 379.267 268.576 cv
383.15 268.576 386.298 271.724 386.298 275.606 cv
386.298 279.489 383.15 282.637 379.267 282.637 cv
375.384 282.637 372.237 279.489 372.237 275.606 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf376.298 279.671 mo(')sh254.161 275.602 mo
254.161 271.719 257.308 268.572 261.191 268.572 cv
265.074 268.572 268.222 271.719 268.222 275.602 cv
268.222 279.485 265.074 282.632 261.191 282.632 cv
257.308 282.632 254.161 279.485 254.161 275.602 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf258.222 279.671 mo(')sh312.744 309.433 mo
312.744 305.55 315.892 302.403 319.775 302.403 cv
323.658 302.403 326.805 305.55 326.805 309.433 cv
326.805 313.316 323.658 316.463 319.775 316.463 cv
315.892 316.463 312.744 313.316 312.744 309.433 cv
cp
.2757 .151858 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf316.806 313.511 mo(')sh330.922 338.352 mo
330.922 334.469 334.07 331.321 337.953 331.321 cv
341.836 331.321 344.983 334.469 344.983 338.352 cv
344.983 342.234 341.836 345.382 337.953 345.382 cv
334.07 345.382 330.922 342.234 330.922 338.352 cv
cp
.2757 .151858 0 0 cmyk
f
292.915 338.593 mo
292.915 334.71 296.063 331.563 299.946 331.563 cv
303.829 331.563 306.976 334.71 306.976 338.593 cv
306.976 342.476 303.829 345.623 299.946 345.623 cv
296.063 345.623 292.915 342.476 292.915 338.593 cv
cp
f
.75021 .679683 .670222 .90164 cmyk
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf296.977 342.551 mo(')sh%ADOBeginSubsetFont: ABAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /ABAAAA+CambriaMath
Type42DictBegin
[<000100000008000800080008676c79660000000000000148000002266865
6164000000000000008c000000366868656100000000000000c400000024
686d747800000000000000e8000000106c6f636100000000000000f80000
000a6d6178700000000000000104000000206e616d650000000000000124
0000002467646972000000000000000000000000000100000006e66638ef
545c5f0f3cf5001b080000000000b9e6983d00000000d18d01e4f434ec4a
16f118ef00000009000200000000000000010000079afe390000175af434
fda416f1000100000000000000000000000000000004054400be04750069
0450005c03ae006900000050009e00e30113000000010000000400350004
0000000000020010002f0086000009a41128000000000000000100120001
000000000006001200004141414141552b43616d627269614d61746800>
[551 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 160 1 <00020069fff0045d03cd002100330000013717030615141633323637170e
01232226353437270e0123222635341236333216033e0135342623220602
15141633323e0137035b5c4093161a1c1e443e395a7f4a3e4a170d60ac60
6e7987ec9141711c0906424f67a45c3943427f871c038b4210fd865f3528
2431453860515244373e048c82a696ac013db71dfeb1293c234d48a6fee9
8b686772d38a>ABAAAA+CambriaMath AddT42Char 
1 316 2 <0002005cfff003e705960018002d00003707270136353426273f01330317
3e01333216151402062322030615141633323e0435342623220e0207f85c
4001031733420cfd3ab00d61aa556d7985ec92850f0f4550294a4d453a20
3b41305d7248193141100477662e2a22023409fd44048274a697a5fec1bb
016c46424f461b3e6594a94d68683d8d9473>ABAAAA+CambriaMath AddT42Char 
1 454 3 <00010069ffef038b03cc001d0000012e022322060215141633323637170e
012322263534123e013332170702f102152f2b65a16650505b854a3d5ebf
6e9196509ace7585703102cc4c4422a1fed9886663454a3d6860aca46b01
00c2601ee200>ABAAAA+CambriaMath AddT42Char 
1 0 0 <000400be0000048605540028002c0030003400000135343e02373e033534
2623220e020723353e0133321e0215140e02070e031d0117152335011121
1101112111023706162a2417261b0f413e2030241909603c894346633e1c
0f243c2c20261507129001fcfd060361fc3801e71616252a3527192f3339
234b521424321e821e2e1d334629263e3d462d212c27281c066ea1a1fee4
049afb6604f7faac0554>ABAAAA+CambriaMath AddT42Char 
ABAAAA+CambriaMath /CharStrings get begin
/g1 1 def
/g2 2 def
/g3 3 def
end
ABAAAA+CambriaMath /Encoding get
dup 33 /g1 put
dup 34 /g2 put
dup 35 /g3 put
pop
end
%ADOEndSubsetFont
/GHVRLQ+CambriaMath /ABAAAA+CambriaMath findfont ct_VMDictPut/GHVRLQ+CambriaMath*1 [33{/.notdef}rp /g1 /g2 /g3 220{/.notdef}rp]GHVRLQ+CambriaMath nfGHVRLQ+CambriaMath*1 [15 0 0 -14.999 0 0 ]msf146.688 58.631 mo(!)sh107.008 127.751 mo(")sh185.758 126.791 mo(#)sh309.55 58.631 mo(!)sh269.869 127.991 mo(")sh348.619 127.031 mo(#)sh134.354 240.991 mo
134.354 237.108 137.502 233.961 141.385 233.961 cv
145.268 233.961 148.416 237.108 148.416 240.991 cv
148.416 244.874 145.268 248.021 141.385 248.021 cv
137.502 248.021 134.354 244.874 134.354 240.991 cv
cp
.0619821 0 .965148 0 cmyk
f
134.354 240.991 mo
134.354 237.108 137.502 233.961 141.385 233.961 cv
145.268 233.961 148.416 237.108 148.416 240.991 cv
148.416 244.874 145.268 248.021 141.385 248.021 cv
137.502 248.021 134.354 244.874 134.354 240.991 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 134.354 233.961 ]ct
@
grestore newpath
93.8327 308.473 mo
93.8327 304.591 96.9804 301.443 100.863 301.443 cv
104.746 301.443 107.894 304.591 107.894 308.473 cv
107.894 312.356 104.746 315.503 100.863 315.503 cv
96.9804 315.503 93.8327 312.356 93.8327 308.473 cv
cp
.0619821 0 .965148 0 cmyk
f
93.8327 308.473 mo
93.8327 304.591 96.9804 301.443 100.863 301.443 cv
104.746 301.443 107.894 304.591 107.894 308.473 cv
107.894 312.356 104.746 315.503 100.863 315.503 cv
96.9804 315.503 93.8327 312.356 93.8327 308.473 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 93.8327 301.443 ]ct
@
grestore newpath
172.623 308.957 mo
172.623 305.075 175.771 301.927 179.654 301.927 cv
183.537 301.927 186.684 305.075 186.684 308.957 cv
186.684 312.84 183.537 315.987 179.654 315.987 cv
175.771 315.987 172.623 312.84 172.623 308.957 cv
cp
.0619821 0 .965148 0 cmyk
f
172.623 308.957 mo
172.623 305.075 175.771 301.927 179.654 301.927 cv
183.537 301.927 186.684 305.075 186.684 308.957 cv
186.684 312.84 183.537 315.987 179.654 315.987 cv
175.771 315.987 172.623 312.84 172.623 308.957 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 172.623 301.927 ]ct
@
grestore newpath
GHVRLQ+CambriaMath*1 [15 0 0 -14.999 0 0 ]msf137.11 244.391 mo(!)sh97.7816 312.791 mo(")sh176.531 312.071 mo(#)sh357.062 244.391 mo(!)sh296.184 280.391 mo(")sh334.347 341.351 mo(#)sh332.626 232.56 mo
332.626 228.79 335.683 225.734 339.453 225.734 cv
343.223 225.734 346.28 228.79 346.28 232.56 cv
346.28 236.33 343.223 239.386 339.453 239.386 cv
335.683 239.386 332.626 236.33 332.626 232.56 cv
cp
0 0 0 0 cmyk
f
332.626 232.56 mo
332.626 228.79 335.683 225.734 339.453 225.734 cv
343.223 225.734 346.28 228.79 346.28 232.56 cv
346.28 236.33 343.223 239.386 339.453 239.386 cv
335.683 239.386 332.626 236.33 332.626 232.56 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 332.626 225.734 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf336.484 236.471 mo(!)sh275.262 289.138 mo
275.262 285.368 278.318 282.312 282.089 282.312 cv
285.859 282.312 288.916 285.368 288.916 289.138 cv
288.916 292.908 285.859 295.964 282.089 295.964 cv
278.318 295.964 275.262 292.908 275.262 289.138 cv
cp
0 0 0 0 cmyk
f
275.262 289.138 mo
275.262 285.368 278.319 282.312 282.089 282.312 cv
285.859 282.312 288.916 285.368 288.916 289.138 cv
288.916 292.908 285.859 295.964 282.089 295.964 cv
278.319 295.964 275.262 292.908 275.262 289.138 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 275.262 282.312 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf279.12 293.111 mo($)sh334.931 319.962 mo
334.931 316.192 337.988 313.135 341.758 313.135 cv
345.528 313.135 348.585 316.192 348.585 319.962 cv
348.585 323.732 345.528 326.788 341.758 326.788 cv
337.988 326.788 334.931 323.732 334.931 319.962 cv
cp
0 0 0 0 cmyk
f
334.931 319.962 mo
334.931 316.192 337.988 313.135 341.758 313.135 cv
345.528 313.135 348.585 316.192 348.585 319.962 cv
348.585 323.732 345.528 326.788 341.758 326.788 cv
337.988 326.788 334.931 323.732 334.931 319.962 cv
cp
.75021 .679683 .670222 .90164 cmyk
gsave
[4.61778e-05 0 0 4.61748e-05 334.931 313.135 ]ct
@
grestore newpath
GHVRLJ+Calibri*1 [12 0 0 -11.9992 0 0 ]msf338.789 324.071 mo(#)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/GHVRLM+Calibri*1 uf/GHVRLM+Calibri uf/SAAAAA+Calibri uf/GHVRLO+CambriaMath*1 uf/GHVRLO+CambriaMath uf/WAAAAA+CambriaMath uf/GHVRLP+CambriaMath*1 uf/GHVRLP+CambriaMath uf/YAAAAA+CambriaMath uf/GHVRLL+CambriaMath*1 uf/GHVRLL+CambriaMath uf/QAAAAA+CambriaMath uf/GHVRLQ+CambriaMath*1 uf/GHVRLQ+CambriaMath uf/ABAAAA+CambriaMath uf/GHVRLJ+Calibri*1 uf/GHVRLJ+Calibri uf/MAAAAA+Calibri uf/GHVRLK+Calibri*1 uf/GHVRLK+Calibri uf/OAAAAA+Calibri uf/GHVRLI+DengXian-Regular*1 uf/GHVRLI+DengXian-Regular uf/KAAAAA+DengXian-Regular uf/GHVRLH+DengXian-Regular*1 uf/GHVRLH+DengXian-Regular uf/IAAAAA+DengXian-Regular uf/GHVRLN+Calibri*1 uf/GHVRLN+Calibri uf/UAAAAA+Calibri ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
