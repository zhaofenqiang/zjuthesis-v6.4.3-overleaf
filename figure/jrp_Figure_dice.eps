%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Figure_dice.pdf
%%Creator: Adobe Acrobat 20.9.0
%%For: fenqiang
%%CreationDate: 2021/3/3, 15:01:45
%%BoundingBox: -1 0 873 466
%%HiResBoundingBox: 0 0 872.6886 465.3081
%%CropBox: 0 0 872.6886 465.3081
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 851 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164374, 2020/03/05-20:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2021-03-03T13:26:09-04:00"
   xmp:CreatorTool="Matplotlib v3.3.3, https://matplotlib.org"
   xmp:ModifyDate="2021-03-03T15:01:40-05:00"
   xmp:MetadataDate="2021-03-03T15:01:40-05:00"
   pdf:Producer="Matplotlib pdf backend v3.3.3"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:c76f25da-4281-4b6d-b4ab-9a879d4e73fd"
   xmpMM:InstanceID="uuid:04aae1bf-f5fe-4622-b6b9-9e4d13ec33cf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -465.308 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-3.05176e-5 0 mo
-3.05176e-5 465.308 li
872.689 465.308 li
872.689 0 li
cp
clp
gsave
-.183487 465.308 mo
872.816 465.308 li
872.816 -.691832 li
-.183487 -.691832 li
-.183487 465.308 li
clp
-55.1836 465.308 mo
957.856 465.308 li
957.856 -55.9719 li
-55.1836 -55.9719 li
-55.1836 465.308 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
f
107.133 407.967 mo
107.133 411.467 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
107.133 407.967 mo
107.133 411.467 li
@
102.861 429.86 mo
106.403 429.86 li
106.403 417.628 li
102.553 418.398 li
102.553 416.418 li
106.381 415.648 li
108.559 415.648 li
108.559 429.86 li
112.101 429.86 li
112.101 431.686 li
102.861 431.686 li
102.861 429.86 li
f
136.265 407.967 mo
136.265 411.467 li
f
136.265 407.967 mo
136.265 411.467 li
@
138.197 423.04 mo
139.231 423.26 140.045 423.722 140.617 424.426 cv
141.189 425.13 141.497 426.01 141.497 427.022 cv
141.497 428.606 140.947 429.838 139.869 430.696 cv
138.769 431.554 137.229 431.972 135.227 431.972 cv
134.545 431.972 133.841 431.906 133.137 431.774 cv
132.433 431.664 131.685 431.466 130.937 431.202 cv
130.937 429.112 li
131.531 429.464 132.191 429.728 132.917 429.904 cv
133.621 430.08 134.369 430.168 135.161 430.168 cv
136.525 430.168 137.559 429.904 138.263 429.376 cv
138.967 428.848 139.341 428.056 139.341 427.022 cv
139.341 426.098 139.011 425.35 138.351 424.822 cv
137.691 424.294 136.767 424.008 135.579 424.008 cv
133.709 424.008 li
133.709 422.226 li
135.667 422.226 li
136.723 422.226 137.537 422.028 138.109 421.588 cv
138.681 421.17 138.967 420.554 138.967 419.74 cv
138.967 418.926 138.659 418.288 138.087 417.848 cv
137.493 417.408 136.657 417.188 135.579 417.188 cv
134.985 417.188 134.347 417.254 133.665 417.386 cv
132.983 417.518 132.235 417.716 131.421 417.98 cv
131.421 416.044 li
132.235 415.824 133.005 415.648 133.731 415.538 cv
134.435 415.428 135.117 415.362 135.777 415.362 cv
137.405 415.362 138.703 415.736 139.671 416.484 cv
140.639 417.232 141.123 418.244 141.123 419.52 cv
141.123 420.4 140.859 421.148 140.353 421.764 cv
139.847 422.38 139.121 422.82 138.197 423.04 cv
f
165.397 407.967 mo
165.397 411.467 li
f
165.397 407.967 mo
165.397 411.467 li
@
160.773 415.648 mo
169.287 415.648 li
169.287 417.474 li
162.753 417.474 li
162.753 421.412 li
163.061 421.302 163.391 421.214 163.699 421.17 cv
164.007 421.126 164.337 421.082 164.645 421.082 cv
166.427 421.082 167.835 421.588 168.891 422.556 cv
169.947 423.546 170.475 424.866 170.475 426.538 cv
170.475 428.276 169.925 429.618 168.847 430.564 cv
167.769 431.51 166.251 431.972 164.315 431.972 cv
163.633 431.972 162.951 431.906 162.247 431.818 cv
161.543 431.708 160.839 431.554 160.091 431.312 cv
160.091 429.134 li
160.729 429.486 161.389 429.75 162.093 429.926 cv
162.775 430.102 163.501 430.168 164.271 430.168 cv
165.503 430.168 166.493 429.86 167.219 429.2 cv
167.923 428.54 168.297 427.66 168.297 426.538 cv
168.297 425.438 167.923 424.558 167.219 423.898 cv
166.493 423.238 165.503 422.908 164.271 422.908 cv
163.699 422.908 163.105 422.974 162.533 423.106 cv
161.961 423.238 161.367 423.436 160.773 423.7 cv
160.773 415.648 li
f
194.529 407.967 mo
194.529 411.467 li
f
194.529 407.967 mo
194.529 411.467 li
@
189.333 415.648 mo
199.651 415.648 li
199.651 416.572 li
193.821 431.686 li
191.555 431.686 li
197.033 417.474 li
189.333 417.474 li
189.333 415.648 li
f
252.793 407.967 mo
252.793 411.467 li
f
252.793 407.967 mo
252.793 411.467 li
@
241.521 429.86 mo
245.063 429.86 li
245.063 417.628 li
241.213 418.398 li
241.213 416.418 li
245.041 415.648 li
247.219 415.648 li
247.219 429.86 li
250.761 429.86 li
250.761 431.686 li
241.521 431.686 li
241.521 429.86 li
f
255.513 429.86 mo
259.055 429.86 li
259.055 417.628 li
255.205 418.398 li
255.205 416.418 li
259.033 415.648 li
261.211 415.648 li
261.211 429.86 li
264.753 429.86 li
264.753 431.686 li
255.513 431.686 li
255.513 429.86 li
f
383.887 407.967 mo
383.887 411.467 li
f
383.887 407.967 mo
383.887 411.467 li
@
374.111 429.86 mo
381.679 429.86 li
381.679 431.686 li
371.493 431.686 li
371.493 429.86 li
372.307 429.024 373.429 427.88 374.859 426.428 cv
376.267 424.998 377.169 424.074 377.543 423.656 cv
378.247 422.886 378.731 422.226 378.995 421.676 cv
379.259 421.148 379.413 420.598 379.413 420.07 cv
379.413 419.234 379.105 418.53 378.511 418.002 cv
377.917 417.474 377.147 417.188 376.179 417.188 cv
375.497 417.188 374.771 417.32 374.023 417.54 cv
373.275 417.782 372.461 418.134 371.603 418.618 cv
371.603 416.418 li
372.483 416.066 373.297 415.802 374.045 415.626 cv
374.793 415.45 375.497 415.362 376.135 415.362 cv
377.785 415.362 379.105 415.78 380.095 416.616 cv
381.085 417.452 381.591 418.552 381.591 419.938 cv
381.591 420.598 381.459 421.236 381.217 421.808 cv
380.975 422.402 380.535 423.106 379.875 423.898 cv
379.699 424.118 379.127 424.712 378.159 425.702 cv
377.191 426.692 375.849 428.078 374.111 429.86 cv
f
390.875 417.078 mo
389.753 417.078 388.917 417.628 388.345 418.728 cv
387.773 419.828 387.509 421.478 387.509 423.678 cv
387.509 425.878 387.773 427.528 388.345 428.628 cv
388.917 429.728 389.753 430.278 390.875 430.278 cv
391.997 430.278 392.833 429.728 393.405 428.628 cv
393.955 427.528 394.241 425.878 394.241 423.678 cv
394.241 421.478 393.955 419.828 393.405 418.728 cv
392.833 417.628 391.997 417.078 390.875 417.078 cv
390.875 415.362 mo
392.657 415.362 394.021 416.088 394.989 417.496 cv
395.935 418.926 396.419 420.994 396.419 423.678 cv
396.419 426.384 395.935 428.452 394.989 429.86 cv
394.021 431.268 392.657 431.972 390.875 431.972 cv
389.071 431.972 387.685 431.268 386.739 429.86 cv
385.793 428.452 385.331 426.384 385.331 423.678 cv
385.331 420.994 385.793 418.926 386.739 417.496 cv
387.685 416.088 389.071 415.362 390.875 415.362 cv
f
529.546 407.967 mo
529.546 411.467 li
f
529.546 407.967 mo
529.546 411.467 li
@
524.478 423.04 mo
525.512 423.26 526.326 423.722 526.898 424.426 cv
527.47 425.13 527.778 426.01 527.778 427.022 cv
527.778 428.606 527.228 429.838 526.15 430.696 cv
525.05 431.554 523.51 431.972 521.508 431.972 cv
520.826 431.972 520.122 431.906 519.418 431.774 cv
518.714 431.664 517.966 431.466 517.218 431.202 cv
517.218 429.112 li
517.812 429.464 518.472 429.728 519.198 429.904 cv
519.902 430.08 520.65 430.168 521.442 430.168 cv
522.806 430.168 523.84 429.904 524.544 429.376 cv
525.248 428.848 525.622 428.056 525.622 427.022 cv
525.622 426.098 525.292 425.35 524.632 424.822 cv
523.972 424.294 523.048 424.008 521.86 424.008 cv
519.99 424.008 li
519.99 422.226 li
521.948 422.226 li
523.004 422.226 523.818 422.028 524.39 421.588 cv
524.962 421.17 525.248 420.554 525.248 419.74 cv
525.248 418.926 524.94 418.288 524.368 417.848 cv
523.774 417.408 522.938 417.188 521.86 417.188 cv
521.266 417.188 520.628 417.254 519.946 417.386 cv
519.264 417.518 518.516 417.716 517.702 417.98 cv
517.702 416.044 li
518.516 415.824 519.286 415.648 520.012 415.538 cv
520.716 415.428 521.398 415.362 522.058 415.362 cv
523.686 415.362 524.984 415.736 525.952 416.484 cv
526.92 417.232 527.404 418.244 527.404 419.52 cv
527.404 420.4 527.14 421.148 526.634 421.764 cv
526.128 422.38 525.402 422.82 524.478 423.04 cv
f
536.534 417.078 mo
535.412 417.078 534.576 417.628 534.004 418.728 cv
533.432 419.828 533.168 421.478 533.168 423.678 cv
533.168 425.878 533.432 427.528 534.004 428.628 cv
534.576 429.728 535.412 430.278 536.534 430.278 cv
537.656 430.278 538.492 429.728 539.064 428.628 cv
539.614 427.528 539.9 425.878 539.9 423.678 cv
539.9 421.478 539.614 419.828 539.064 418.728 cv
538.492 417.628 537.656 417.078 536.534 417.078 cv
536.534 415.362 mo
538.316 415.362 539.68 416.088 540.648 417.496 cv
541.594 418.926 542.078 420.994 542.078 423.678 cv
542.078 426.384 541.594 428.452 540.648 429.86 cv
539.68 431.268 538.316 431.972 536.534 431.972 cv
534.73 431.972 533.344 431.268 532.398 429.86 cv
531.452 428.452 530.99 426.384 530.99 423.678 cv
530.99 420.994 531.452 418.926 532.398 417.496 cv
533.344 416.088 534.73 415.362 536.534 415.362 cv
f
675.206 407.967 mo
675.206 411.467 li
f
675.206 407.967 mo
675.206 411.467 li
@
669.522 417.54 mo
664.044 426.098 li
669.522 426.098 li
669.522 417.54 li
668.95 415.648 mo
671.678 415.648 li
671.678 426.098 li
673.966 426.098 li
673.966 427.902 li
671.678 427.902 li
671.678 431.686 li
669.522 431.686 li
669.522 427.902 li
662.284 427.902 li
662.284 425.812 li
668.95 415.648 li
f
682.194 417.078 mo
681.072 417.078 680.236 417.628 679.664 418.728 cv
679.092 419.828 678.828 421.478 678.828 423.678 cv
678.828 425.878 679.092 427.528 679.664 428.628 cv
680.236 429.728 681.072 430.278 682.194 430.278 cv
683.316 430.278 684.152 429.728 684.724 428.628 cv
685.274 427.528 685.56 425.878 685.56 423.678 cv
685.56 421.478 685.274 419.828 684.724 418.728 cv
684.152 417.628 683.316 417.078 682.194 417.078 cv
682.194 415.362 mo
683.976 415.362 685.34 416.088 686.308 417.496 cv
687.254 418.926 687.738 420.994 687.738 423.678 cv
687.738 426.384 687.254 428.452 686.308 429.86 cv
685.34 431.268 683.976 431.972 682.194 431.972 cv
680.39 431.972 679.004 431.268 678.058 429.86 cv
677.112 428.452 676.65 426.384 676.65 423.678 cv
676.65 420.994 677.112 418.926 678.058 417.496 cv
679.004 416.088 680.39 415.362 682.194 415.362 cv
f
820.866 407.967 mo
820.866 411.467 li
f
820.866 407.967 mo
820.866 411.467 li
@
809.242 415.648 mo
817.756 415.648 li
817.756 417.474 li
811.222 417.474 li
811.222 421.412 li
811.53 421.302 811.86 421.214 812.168 421.17 cv
812.476 421.126 812.806 421.082 813.114 421.082 cv
814.896 421.082 816.304 421.588 817.36 422.556 cv
818.416 423.546 818.944 424.866 818.944 426.538 cv
818.944 428.276 818.394 429.618 817.316 430.564 cv
816.238 431.51 814.72 431.972 812.784 431.972 cv
812.102 431.972 811.42 431.906 810.716 431.818 cv
810.012 431.708 809.308 431.554 808.56 431.312 cv
808.56 429.134 li
809.198 429.486 809.858 429.75 810.562 429.926 cv
811.244 430.102 811.97 430.168 812.74 430.168 cv
813.972 430.168 814.962 429.86 815.688 429.2 cv
816.392 428.54 816.766 427.66 816.766 426.538 cv
816.766 425.438 816.392 424.558 815.688 423.898 cv
814.962 423.238 813.972 422.908 812.74 422.908 cv
812.168 422.908 811.574 422.974 811.002 423.106 cv
810.43 423.238 809.836 423.436 809.242 423.7 cv
809.242 415.648 li
f
827.854 417.078 mo
826.732 417.078 825.896 417.628 825.324 418.728 cv
824.752 419.828 824.488 421.478 824.488 423.678 cv
824.488 425.878 824.752 427.528 825.324 428.628 cv
825.896 429.728 826.732 430.278 827.854 430.278 cv
828.976 430.278 829.812 429.728 830.384 428.628 cv
830.934 427.528 831.22 425.878 831.22 423.678 cv
831.22 421.478 830.934 419.828 830.384 418.728 cv
829.812 417.628 828.976 417.078 827.854 417.078 cv
827.854 415.362 mo
829.636 415.362 831 416.088 831.968 417.496 cv
832.914 418.926 833.398 420.994 833.398 423.678 cv
833.398 426.384 832.914 428.452 831.968 429.86 cv
831 431.268 829.636 431.972 827.854 431.972 cv
826.05 431.972 824.664 431.268 823.718 429.86 cv
822.772 428.452 822.31 426.384 822.31 423.678 cv
822.31 420.994 822.772 418.926 823.718 417.496 cv
824.664 416.088 826.05 415.362 827.854 415.362 cv
f
89.5197 441.039 mo
92.8447 441.039 li
100.92 456.289 li
100.92 441.039 li
103.32 441.039 li
103.32 459.264 li
99.9947 459.264 li
91.9197 444.014 li
91.9197 459.264 li
89.5197 459.264 li
89.5197 441.039 li
f
107.895 453.864 mo
107.895 445.589 li
110.145 445.589 li
110.145 453.789 li
110.145 455.089 110.395 456.039 110.895 456.689 cv
111.395 457.339 112.145 457.664 113.17 457.664 cv
114.37 457.664 115.345 457.289 116.045 456.514 cv
116.745 455.739 117.095 454.689 117.095 453.339 cv
117.095 445.589 li
119.345 445.589 li
119.345 459.264 li
117.095 459.264 li
117.095 457.164 li
116.545 458.014 115.895 458.614 115.195 459.014 cv
114.47 459.389 113.645 459.589 112.695 459.589 cv
111.12 459.589 109.92 459.114 109.12 458.139 cv
108.295 457.189 107.895 455.764 107.895 453.864 cv
113.545 445.264 mo
113.545 445.264 li
f
134.62 448.214 mo
135.17 447.214 135.845 446.489 136.62 445.989 cv
137.395 445.514 138.32 445.264 139.395 445.264 cv
140.795 445.264 141.895 445.764 142.67 446.764 cv
143.445 447.764 143.845 449.189 143.845 451.014 cv
143.845 459.264 li
141.595 459.264 li
141.595 451.089 li
141.595 449.789 141.345 448.814 140.895 448.164 cv
140.42 447.539 139.72 447.214 138.77 447.214 cv
137.595 447.214 136.67 447.614 135.995 448.389 cv
135.32 449.164 134.995 450.214 134.995 451.539 cv
134.995 459.264 li
132.745 459.264 li
132.745 451.089 li
132.745 449.789 132.495 448.814 132.045 448.164 cv
131.57 447.539 130.845 447.214 129.895 447.214 cv
128.745 447.214 127.82 447.614 127.145 448.389 cv
126.47 449.164 126.145 450.214 126.145 451.539 cv
126.145 459.264 li
123.895 459.264 li
123.895 445.589 li
126.145 445.589 li
126.145 447.714 li
126.645 446.889 127.27 446.264 127.995 445.864 cv
128.695 445.464 129.545 445.264 130.545 445.264 cv
131.545 445.264 132.37 445.514 133.07 446.014 cv
133.77 446.514 134.27 447.264 134.62 448.214 cv
f
158.145 452.439 mo
158.145 450.789 157.795 449.514 157.12 448.564 cv
156.42 447.614 155.495 447.139 154.32 447.139 cv
153.12 447.139 152.195 447.614 151.52 448.564 cv
150.82 449.514 150.495 450.789 150.495 452.439 cv
150.495 454.089 150.82 455.389 151.52 456.339 cv
152.195 457.289 153.12 457.739 154.32 457.739 cv
155.495 457.739 156.42 457.289 157.12 456.339 cv
157.795 455.389 158.145 454.089 158.145 452.439 cv
150.495 447.664 mo
150.945 446.864 151.545 446.264 152.27 445.864 cv
152.995 445.464 153.87 445.264 154.87 445.264 cv
156.52 445.264 157.87 445.939 158.92 447.239 cv
159.945 448.564 160.47 450.289 160.47 452.439 cv
160.47 454.589 159.945 456.339 158.92 457.639 cv
157.87 458.939 156.52 459.589 154.87 459.589 cv
153.87 459.589 152.995 459.389 152.27 459.014 cv
151.545 458.639 150.945 458.039 150.495 457.214 cv
150.495 459.264 li
148.245 459.264 li
148.245 440.264 li
150.495 440.264 li
150.495 447.664 li
f
175.895 451.864 mo
175.895 452.964 li
165.57 452.964 li
165.67 454.514 166.12 455.714 166.97 456.514 cv
167.795 457.314 168.945 457.714 170.445 457.714 cv
171.295 457.714 172.145 457.614 172.945 457.414 cv
173.745 457.214 174.57 456.889 175.37 456.439 cv
175.37 458.564 li
174.57 458.914 173.745 459.189 172.895 459.339 cv
172.045 459.489 171.17 459.589 170.32 459.589 cv
168.12 459.589 166.395 458.964 165.12 457.714 cv
163.845 456.464 163.22 454.739 163.22 452.564 cv
163.22 450.339 163.82 448.564 165.02 447.239 cv
166.22 445.939 167.87 445.264 169.92 445.264 cv
171.77 445.264 173.22 445.864 174.295 447.039 cv
175.345 448.239 175.895 449.839 175.895 451.864 cv
173.645 451.214 mo
173.62 449.989 173.27 449.014 172.62 448.264 cv
171.945 447.539 171.045 447.164 169.945 447.164 cv
168.695 447.164 167.695 447.539 166.945 448.239 cv
166.195 448.939 165.745 449.939 165.645 451.214 cv
173.645 451.214 li
f
187.495 447.689 mo
187.245 447.539 186.97 447.439 186.67 447.364 cv
186.37 447.314 186.045 447.264 185.695 447.264 cv
184.42 447.264 183.445 447.689 182.77 448.514 cv
182.07 449.339 181.745 450.514 181.745 452.064 cv
181.745 459.264 li
179.495 459.264 li
179.495 445.589 li
181.745 445.589 li
181.745 447.714 li
182.195 446.889 182.82 446.264 183.57 445.864 cv
184.32 445.464 185.245 445.264 186.345 445.264 cv
186.495 445.264 186.67 445.289 186.87 445.289 cv
187.045 445.314 187.245 445.339 187.495 445.389 cv
187.495 447.689 li
f
203.095 447.164 mo
201.895 447.164 200.945 447.639 200.245 448.589 cv
199.545 449.539 199.195 450.814 199.195 452.439 cv
199.195 454.089 199.52 455.364 200.219 456.314 cv
200.919 457.264 201.87 457.714 203.095 457.714 cv
204.294 457.714 205.245 457.264 205.945 456.314 cv
206.645 455.364 206.995 454.089 206.995 452.439 cv
206.995 450.839 206.645 449.539 205.945 448.589 cv
205.245 447.639 204.294 447.164 203.095 447.164 cv
203.095 445.264 mo
205.044 445.264 206.57 445.914 207.695 447.164 cv
208.794 448.439 209.37 450.189 209.37 452.439 cv
209.37 454.689 208.794 456.439 207.695 457.689 cv
206.57 458.964 205.044 459.589 203.095 459.589 cv
201.12 459.589 199.57 458.964 198.469 457.689 cv
197.37 456.439 196.82 454.689 196.82 452.439 cv
196.82 450.189 197.37 448.439 198.469 447.164 cv
199.57 445.914 201.12 445.264 203.095 445.264 cv
f
220.02 440.264 mo
220.02 442.139 li
217.87 442.139 li
217.07 442.139 216.495 442.314 216.195 442.639 cv
215.87 442.964 215.72 443.539 215.72 444.389 cv
215.72 445.589 li
219.419 445.589 li
219.419 447.339 li
215.72 447.339 li
215.72 459.264 li
213.47 459.264 li
213.47 447.339 li
211.32 447.339 li
211.32 445.589 li
213.47 445.589 li
213.47 444.639 li
213.47 443.139 213.82 442.014 214.52 441.314 cv
215.22 440.614 216.345 440.264 217.895 440.264 cv
220.02 440.264 li
f
236.069 452.389 mo
234.244 452.389 232.994 452.614 232.294 453.014 cv
231.594 453.439 231.244 454.139 231.244 455.139 cv
231.244 455.939 231.494 456.589 232.019 457.039 cv
232.544 457.514 233.269 457.739 234.169 457.739 cv
235.419 457.739 236.419 457.314 237.169 456.414 cv
237.919 455.539 238.294 454.364 238.294 452.889 cv
238.294 452.389 li
236.069 452.389 li
240.544 451.464 mo
240.544 459.264 li
238.294 459.264 li
238.294 457.189 li
237.769 458.039 237.119 458.639 236.369 459.014 cv
235.619 459.389 234.669 459.589 233.569 459.589 cv
232.169 459.589 231.044 459.214 230.219 458.439 cv
229.394 457.664 228.994 456.614 228.994 455.289 cv
228.994 453.764 229.494 452.614 230.544 451.814 cv
231.569 451.039 233.094 450.639 235.144 450.639 cv
238.294 450.639 li
238.294 450.414 li
238.294 449.389 237.944 448.589 237.269 448.014 cv
236.594 447.464 235.644 447.164 234.419 447.164 cv
233.619 447.164 232.869 447.264 232.119 447.464 cv
231.369 447.664 230.669 447.939 229.994 448.289 cv
229.994 446.214 li
230.794 445.914 231.594 445.664 232.369 445.514 cv
233.144 445.364 233.894 445.264 234.644 445.264 cv
236.619 445.264 238.094 445.789 239.069 446.814 cv
240.044 447.839 240.544 449.389 240.544 451.464 cv
f
243.57 445.589 mo
245.945 445.589 li
250.22 457.064 li
254.495 445.589 li
256.87 445.589 li
251.745 459.264 li
248.695 459.264 li
243.57 445.589 li
f
266.195 452.389 mo
264.37 452.389 263.12 452.614 262.419 453.014 cv
261.72 453.439 261.37 454.139 261.37 455.139 cv
261.37 455.939 261.62 456.589 262.145 457.039 cv
262.669 457.514 263.395 457.739 264.294 457.739 cv
265.544 457.739 266.544 457.314 267.294 456.414 cv
268.044 455.539 268.419 454.364 268.419 452.889 cv
268.419 452.389 li
266.195 452.389 li
270.669 451.464 mo
270.669 459.264 li
268.419 459.264 li
268.419 457.189 li
267.895 458.039 267.245 458.639 266.495 459.014 cv
265.745 459.389 264.794 459.589 263.695 459.589 cv
262.294 459.589 261.169 459.214 260.345 458.439 cv
259.52 457.664 259.12 456.614 259.12 455.289 cv
259.12 453.764 259.62 452.614 260.669 451.814 cv
261.695 451.039 263.22 450.639 265.27 450.639 cv
268.419 450.639 li
268.419 450.414 li
268.419 449.389 268.07 448.589 267.395 448.014 cv
266.72 447.464 265.77 447.164 264.544 447.164 cv
263.745 447.164 262.995 447.264 262.245 447.464 cv
261.495 447.664 260.794 447.939 260.12 448.289 cv
260.12 446.214 li
260.919 445.914 261.72 445.664 262.495 445.514 cv
263.27 445.364 264.02 445.264 264.77 445.264 cv
266.745 445.264 268.22 445.789 269.195 446.814 cv
270.169 447.839 270.669 449.389 270.669 451.464 cv
f
275.295 445.589 mo
277.545 445.589 li
277.545 459.264 li
275.295 459.264 li
275.295 445.589 li
275.295 440.264 mo
277.545 440.264 li
277.545 443.114 li
275.295 443.114 li
275.295 440.264 li
f
282.245 440.264 mo
284.495 440.264 li
284.495 459.264 li
282.245 459.264 li
282.245 440.264 li
f
295.42 452.389 mo
293.595 452.389 292.345 452.614 291.645 453.014 cv
290.945 453.439 290.595 454.139 290.595 455.139 cv
290.595 455.939 290.845 456.589 291.37 457.039 cv
291.895 457.514 292.62 457.739 293.52 457.739 cv
294.77 457.739 295.77 457.314 296.52 456.414 cv
297.27 455.539 297.645 454.364 297.645 452.889 cv
297.645 452.389 li
295.42 452.389 li
299.895 451.464 mo
299.895 459.264 li
297.645 459.264 li
297.645 457.189 li
297.12 458.039 296.47 458.639 295.72 459.014 cv
294.97 459.389 294.02 459.589 292.92 459.589 cv
291.52 459.589 290.395 459.214 289.57 458.439 cv
288.745 457.664 288.345 456.614 288.345 455.289 cv
288.345 453.764 288.845 452.614 289.895 451.814 cv
290.92 451.039 292.445 450.639 294.495 450.639 cv
297.645 450.639 li
297.645 450.414 li
297.645 449.389 297.295 448.589 296.62 448.014 cv
295.945 447.464 294.995 447.164 293.77 447.164 cv
292.97 447.164 292.22 447.264 291.47 447.464 cv
290.72 447.664 290.02 447.939 289.345 448.289 cv
289.345 446.214 li
290.145 445.914 290.945 445.664 291.72 445.514 cv
292.495 445.364 293.245 445.264 293.995 445.264 cv
295.97 445.264 297.445 445.789 298.42 446.814 cv
299.395 447.839 299.895 449.389 299.895 451.464 cv
f
314.345 452.439 mo
314.345 450.789 313.995 449.514 313.32 448.564 cv
312.62 447.614 311.695 447.139 310.52 447.139 cv
309.32 447.139 308.395 447.614 307.72 448.564 cv
307.02 449.514 306.695 450.789 306.695 452.439 cv
306.695 454.089 307.02 455.389 307.72 456.339 cv
308.395 457.289 309.32 457.739 310.52 457.739 cv
311.695 457.739 312.62 457.289 313.32 456.339 cv
313.995 455.389 314.345 454.089 314.345 452.439 cv
306.695 447.664 mo
307.145 446.864 307.745 446.264 308.47 445.864 cv
309.195 445.464 310.07 445.264 311.07 445.264 cv
312.72 445.264 314.07 445.939 315.12 447.239 cv
316.145 448.564 316.67 450.289 316.67 452.439 cv
316.67 454.589 316.145 456.339 315.12 457.639 cv
314.07 458.939 312.72 459.589 311.07 459.589 cv
310.07 459.589 309.195 459.389 308.47 459.014 cv
307.745 458.639 307.145 458.039 306.695 457.214 cv
306.695 459.264 li
304.445 459.264 li
304.445 440.264 li
306.695 440.264 li
306.695 447.664 li
f
320.395 440.264 mo
322.645 440.264 li
322.645 459.264 li
320.395 459.264 li
320.395 440.264 li
f
339.045 451.864 mo
339.045 452.964 li
328.72 452.964 li
328.82 454.514 329.27 455.714 330.12 456.514 cv
330.945 457.314 332.095 457.714 333.595 457.714 cv
334.445 457.714 335.295 457.614 336.095 457.414 cv
336.895 457.214 337.72 456.889 338.52 456.439 cv
338.52 458.564 li
337.72 458.914 336.895 459.189 336.045 459.339 cv
335.195 459.489 334.32 459.589 333.47 459.589 cv
331.27 459.589 329.545 458.964 328.27 457.714 cv
326.995 456.464 326.37 454.739 326.37 452.564 cv
326.37 450.339 326.97 448.564 328.17 447.239 cv
329.37 445.939 331.02 445.264 333.07 445.264 cv
334.92 445.264 336.37 445.864 337.445 447.039 cv
338.495 448.239 339.045 449.839 339.045 451.864 cv
336.795 451.214 mo
336.77 449.989 336.42 449.014 335.77 448.264 cv
335.095 447.539 334.195 447.164 333.095 447.164 cv
331.845 447.164 330.845 447.539 330.095 448.239 cv
329.345 448.939 328.895 449.939 328.795 451.214 cv
336.795 451.214 li
f
361.32 448.214 mo
361.87 447.214 362.545 446.489 363.32 445.989 cv
364.095 445.514 365.02 445.264 366.095 445.264 cv
367.495 445.264 368.595 445.764 369.37 446.764 cv
370.145 447.764 370.545 449.189 370.545 451.014 cv
370.545 459.264 li
368.295 459.264 li
368.295 451.089 li
368.295 449.789 368.045 448.814 367.595 448.164 cv
367.12 447.539 366.42 447.214 365.47 447.214 cv
364.295 447.214 363.37 447.614 362.695 448.389 cv
362.02 449.164 361.695 450.214 361.695 451.539 cv
361.695 459.264 li
359.445 459.264 li
359.445 451.089 li
359.445 449.789 359.195 448.814 358.745 448.164 cv
358.27 447.539 357.545 447.214 356.595 447.214 cv
355.445 447.214 354.52 447.614 353.845 448.389 cv
353.17 449.164 352.845 450.214 352.845 451.539 cv
352.845 459.264 li
350.595 459.264 li
350.595 445.589 li
352.845 445.589 li
352.845 447.714 li
353.345 446.889 353.97 446.264 354.695 445.864 cv
355.395 445.464 356.245 445.264 357.245 445.264 cv
358.245 445.264 359.07 445.514 359.77 446.014 cv
360.47 446.514 360.97 447.264 361.32 448.214 cv
f
381.245 452.389 mo
379.42 452.389 378.17 452.614 377.47 453.014 cv
376.77 453.439 376.42 454.139 376.42 455.139 cv
376.42 455.939 376.67 456.589 377.195 457.039 cv
377.72 457.514 378.445 457.739 379.345 457.739 cv
380.595 457.739 381.595 457.314 382.345 456.414 cv
383.095 455.539 383.47 454.364 383.47 452.889 cv
383.47 452.389 li
381.245 452.389 li
385.72 451.464 mo
385.72 459.264 li
383.47 459.264 li
383.47 457.189 li
382.945 458.039 382.295 458.639 381.545 459.014 cv
380.795 459.389 379.845 459.589 378.745 459.589 cv
377.345 459.589 376.22 459.214 375.395 458.439 cv
374.57 457.664 374.17 456.614 374.17 455.289 cv
374.17 453.764 374.67 452.614 375.72 451.814 cv
376.745 451.039 378.27 450.639 380.32 450.639 cv
383.47 450.639 li
383.47 450.414 li
383.47 449.389 383.12 448.589 382.445 448.014 cv
381.77 447.464 380.82 447.164 379.595 447.164 cv
378.795 447.164 378.045 447.264 377.295 447.464 cv
376.545 447.664 375.845 447.939 375.17 448.289 cv
375.17 446.214 li
375.97 445.914 376.77 445.664 377.545 445.514 cv
378.32 445.364 379.07 445.264 379.82 445.264 cv
381.795 445.264 383.27 445.789 384.245 446.814 cv
385.22 447.839 385.72 449.389 385.72 451.464 cv
f
401.72 451.014 mo
401.72 459.264 li
399.47 459.264 li
399.47 451.089 li
399.47 449.789 399.195 448.839 398.695 448.189 cv
398.195 447.539 397.445 447.214 396.445 447.214 cv
395.22 447.214 394.27 447.614 393.57 448.389 cv
392.87 449.164 392.52 450.214 392.52 451.539 cv
392.52 459.264 li
390.27 459.264 li
390.27 445.589 li
392.52 445.589 li
392.52 447.714 li
393.045 446.914 393.67 446.289 394.42 445.889 cv
395.145 445.489 395.995 445.264 396.945 445.264 cv
398.495 445.264 399.695 445.764 400.495 446.739 cv
401.295 447.714 401.72 449.139 401.72 451.014 cv
f
405.97 453.864 mo
405.97 445.589 li
408.22 445.589 li
408.22 453.789 li
408.22 455.089 408.47 456.039 408.97 456.689 cv
409.47 457.339 410.22 457.664 411.245 457.664 cv
412.445 457.664 413.42 457.289 414.12 456.514 cv
414.82 455.739 415.17 454.689 415.17 453.339 cv
415.17 445.589 li
417.42 445.589 li
417.42 459.264 li
415.17 459.264 li
415.17 457.164 li
414.62 458.014 413.97 458.614 413.27 459.014 cv
412.545 459.389 411.72 459.589 410.77 459.589 cv
409.195 459.589 407.995 459.114 407.195 458.139 cv
406.37 457.189 405.97 455.764 405.97 453.864 cv
411.62 445.264 mo
411.62 445.264 li
f
428.27 452.389 mo
426.445 452.389 425.195 452.614 424.495 453.014 cv
423.795 453.439 423.445 454.139 423.445 455.139 cv
423.445 455.939 423.695 456.589 424.22 457.039 cv
424.745 457.514 425.47 457.739 426.37 457.739 cv
427.62 457.739 428.62 457.314 429.37 456.414 cv
430.12 455.539 430.495 454.364 430.495 452.889 cv
430.495 452.389 li
428.27 452.389 li
432.745 451.464 mo
432.745 459.264 li
430.495 459.264 li
430.495 457.189 li
429.97 458.039 429.32 458.639 428.57 459.014 cv
427.82 459.389 426.87 459.589 425.77 459.589 cv
424.37 459.589 423.245 459.214 422.42 458.439 cv
421.595 457.664 421.195 456.614 421.195 455.289 cv
421.195 453.764 421.695 452.614 422.745 451.814 cv
423.77 451.039 425.295 450.639 427.345 450.639 cv
430.495 450.639 li
430.495 450.414 li
430.495 449.389 430.145 448.589 429.47 448.014 cv
428.795 447.464 427.845 447.164 426.62 447.164 cv
425.82 447.164 425.07 447.264 424.32 447.464 cv
423.57 447.664 422.87 447.939 422.195 448.289 cv
422.195 446.214 li
422.995 445.914 423.795 445.664 424.57 445.514 cv
425.345 445.364 426.095 445.264 426.845 445.264 cv
428.82 445.264 430.295 445.789 431.27 446.814 cv
432.245 447.839 432.745 449.389 432.745 451.464 cv
f
437.37 440.264 mo
439.62 440.264 li
439.62 459.264 li
437.37 459.264 li
437.37 440.264 li
f
454.445 457.214 mo
454.445 464.439 li
452.195 464.439 li
452.195 445.589 li
454.445 445.589 li
454.445 447.664 li
454.895 446.864 455.495 446.264 456.22 445.864 cv
456.945 445.464 457.82 445.264 458.82 445.264 cv
460.47 445.264 461.82 445.939 462.87 447.239 cv
463.895 448.564 464.42 450.289 464.42 452.439 cv
464.42 454.589 463.895 456.339 462.87 457.639 cv
461.82 458.939 460.47 459.589 458.82 459.589 cv
457.82 459.589 456.945 459.389 456.22 459.014 cv
455.495 458.639 454.895 458.039 454.445 457.214 cv
462.095 452.439 mo
462.095 450.789 461.745 449.514 461.07 448.564 cv
460.37 447.614 459.445 447.139 458.27 447.139 cv
457.07 447.139 456.145 447.614 455.47 448.564 cv
454.77 449.514 454.445 450.789 454.445 452.439 cv
454.445 454.089 454.77 455.389 455.47 456.339 cv
456.145 457.289 457.07 457.739 458.27 457.739 cv
459.445 457.739 460.37 457.289 461.07 456.339 cv
461.745 455.389 462.095 454.089 462.095 452.439 cv
f
474.37 452.389 mo
472.545 452.389 471.295 452.614 470.595 453.014 cv
469.895 453.439 469.545 454.139 469.545 455.139 cv
469.545 455.939 469.795 456.589 470.32 457.039 cv
470.845 457.514 471.57 457.739 472.47 457.739 cv
473.72 457.739 474.72 457.314 475.47 456.414 cv
476.22 455.539 476.595 454.364 476.595 452.889 cv
476.595 452.389 li
474.37 452.389 li
478.845 451.464 mo
478.845 459.264 li
476.595 459.264 li
476.595 457.189 li
476.07 458.039 475.42 458.639 474.67 459.014 cv
473.92 459.389 472.97 459.589 471.87 459.589 cv
470.47 459.589 469.345 459.214 468.52 458.439 cv
467.695 457.664 467.295 456.614 467.295 455.289 cv
467.295 453.764 467.795 452.614 468.845 451.814 cv
469.87 451.039 471.395 450.639 473.445 450.639 cv
476.595 450.639 li
476.595 450.414 li
476.595 449.389 476.245 448.589 475.57 448.014 cv
474.895 447.464 473.945 447.164 472.72 447.164 cv
471.92 447.164 471.17 447.264 470.42 447.464 cv
469.67 447.664 468.97 447.939 468.295 448.289 cv
468.295 446.214 li
469.095 445.914 469.895 445.664 470.67 445.514 cv
471.445 445.364 472.195 445.264 472.945 445.264 cv
474.92 445.264 476.395 445.789 477.37 446.814 cv
478.345 447.839 478.845 449.389 478.845 451.464 cv
f
491.395 447.689 mo
491.145 447.539 490.87 447.439 490.57 447.364 cv
490.27 447.314 489.945 447.264 489.595 447.264 cv
488.32 447.264 487.345 447.689 486.67 448.514 cv
485.97 449.339 485.645 450.514 485.645 452.064 cv
485.645 459.264 li
483.395 459.264 li
483.395 445.589 li
485.645 445.589 li
485.645 447.714 li
486.095 446.889 486.72 446.264 487.47 445.864 cv
488.22 445.464 489.145 445.264 490.245 445.264 cv
490.395 445.264 490.57 445.289 490.77 445.289 cv
490.945 445.314 491.145 445.339 491.395 445.389 cv
491.395 447.689 li
f
503.595 446.114 mo
503.595 448.214 li
502.945 447.864 502.32 447.614 501.67 447.439 cv
501.02 447.264 500.395 447.164 499.745 447.164 cv
498.295 447.164 497.145 447.639 496.345 448.564 cv
495.545 449.489 495.145 450.789 495.145 452.439 cv
495.145 454.114 495.545 455.414 496.345 456.339 cv
497.145 457.264 498.295 457.714 499.745 457.714 cv
500.395 457.714 501.02 457.639 501.67 457.464 cv
502.32 457.289 502.945 457.014 503.595 456.664 cv
503.595 458.739 li
502.945 459.039 502.295 459.264 501.645 459.389 cv
500.97 459.514 500.245 459.589 499.495 459.589 cv
497.445 459.589 495.795 458.964 494.595 457.664 cv
493.37 456.389 492.77 454.639 492.77 452.439 cv
492.77 450.214 493.37 448.464 494.595 447.189 cv
495.82 445.914 497.495 445.264 499.645 445.264 cv
500.345 445.264 501.02 445.339 501.67 445.489 cv
502.32 445.639 502.97 445.839 503.595 446.114 cv
f
519.195 451.864 mo
519.195 452.964 li
508.87 452.964 li
508.97 454.514 509.42 455.714 510.27 456.514 cv
511.095 457.314 512.245 457.714 513.745 457.714 cv
514.595 457.714 515.445 457.614 516.245 457.414 cv
517.045 457.214 517.87 456.889 518.67 456.439 cv
518.67 458.564 li
517.87 458.914 517.045 459.189 516.195 459.339 cv
515.345 459.489 514.47 459.589 513.62 459.589 cv
511.42 459.589 509.695 458.964 508.42 457.714 cv
507.145 456.464 506.52 454.739 506.52 452.564 cv
506.52 450.339 507.12 448.564 508.32 447.239 cv
509.52 445.939 511.17 445.264 513.22 445.264 cv
515.07 445.264 516.52 445.864 517.595 447.039 cv
518.645 448.239 519.195 449.839 519.195 451.864 cv
516.945 451.214 mo
516.92 449.989 516.57 449.014 515.92 448.264 cv
515.245 447.539 514.345 447.164 513.245 447.164 cv
511.995 447.164 510.995 447.539 510.245 448.239 cv
509.495 448.939 509.045 449.939 508.945 451.214 cv
516.945 451.214 li
f
522.87 440.264 mo
525.12 440.264 li
525.12 459.264 li
522.87 459.264 li
522.87 440.264 li
f
529.82 440.264 mo
532.07 440.264 li
532.07 459.264 li
529.82 459.264 li
529.82 440.264 li
f
542.995 452.389 mo
541.17 452.389 539.92 452.614 539.22 453.014 cv
538.52 453.439 538.17 454.139 538.17 455.139 cv
538.17 455.939 538.42 456.589 538.945 457.039 cv
539.47 457.514 540.195 457.739 541.095 457.739 cv
542.345 457.739 543.345 457.314 544.095 456.414 cv
544.845 455.539 545.22 454.364 545.22 452.889 cv
545.22 452.389 li
542.995 452.389 li
547.47 451.464 mo
547.47 459.264 li
545.22 459.264 li
545.22 457.189 li
544.695 458.039 544.045 458.639 543.295 459.014 cv
542.545 459.389 541.595 459.589 540.495 459.589 cv
539.095 459.589 537.97 459.214 537.145 458.439 cv
536.32 457.664 535.92 456.614 535.92 455.289 cv
535.92 453.764 536.42 452.614 537.47 451.814 cv
538.495 451.039 540.02 450.639 542.07 450.639 cv
545.22 450.639 li
545.22 450.414 li
545.22 449.389 544.87 448.589 544.195 448.014 cv
543.52 447.464 542.57 447.164 541.345 447.164 cv
540.545 447.164 539.795 447.264 539.045 447.464 cv
538.295 447.664 537.595 447.939 536.92 448.289 cv
536.92 446.214 li
537.72 445.914 538.52 445.664 539.295 445.514 cv
540.07 445.364 540.82 445.264 541.57 445.264 cv
543.545 445.264 545.02 445.789 545.995 446.814 cv
546.97 447.839 547.47 449.389 547.47 451.464 cv
f
554.32 441.714 mo
554.32 445.589 li
558.945 445.589 li
558.945 447.339 li
554.32 447.339 li
554.32 454.764 li
554.32 455.889 554.47 456.614 554.77 456.914 cv
555.07 457.239 555.695 457.389 556.645 457.389 cv
558.945 457.389 li
558.945 459.264 li
556.645 459.264 li
554.895 459.264 553.695 458.939 553.045 458.289 cv
552.395 457.639 552.07 456.464 552.07 454.764 cv
552.07 447.339 li
550.42 447.339 li
550.42 445.589 li
552.07 445.589 li
552.07 441.714 li
554.32 441.714 li
f
561.895 445.589 mo
564.145 445.589 li
564.145 459.264 li
561.895 459.264 li
561.895 445.589 li
561.895 440.264 mo
564.145 440.264 li
564.145 443.114 li
561.895 443.114 li
561.895 440.264 li
f
574.145 447.164 mo
572.945 447.164 571.995 447.639 571.295 448.589 cv
570.595 449.539 570.245 450.814 570.245 452.439 cv
570.245 454.089 570.57 455.364 571.27 456.314 cv
571.97 457.264 572.92 457.714 574.145 457.714 cv
575.345 457.714 576.295 457.264 576.995 456.314 cv
577.695 455.364 578.045 454.089 578.045 452.439 cv
578.045 450.839 577.695 449.539 576.995 448.589 cv
576.295 447.639 575.345 447.164 574.145 447.164 cv
574.145 445.264 mo
576.095 445.264 577.62 445.914 578.745 447.164 cv
579.845 448.439 580.42 450.189 580.42 452.439 cv
580.42 454.689 579.845 456.439 578.745 457.689 cv
577.62 458.964 576.095 459.589 574.145 459.589 cv
572.17 459.589 570.62 458.964 569.52 457.689 cv
568.42 456.439 567.87 454.689 567.87 452.439 cv
567.87 450.189 568.42 448.439 569.52 447.164 cv
570.62 445.914 572.17 445.264 574.145 445.264 cv
f
595.52 451.014 mo
595.52 459.264 li
593.27 459.264 li
593.27 451.089 li
593.27 449.789 592.995 448.839 592.495 448.189 cv
591.995 447.539 591.245 447.214 590.245 447.214 cv
589.02 447.214 588.07 447.614 587.37 448.389 cv
586.67 449.164 586.32 450.214 586.32 451.539 cv
586.32 459.264 li
584.07 459.264 li
584.07 445.589 li
586.32 445.589 li
586.32 447.714 li
586.845 446.914 587.47 446.289 588.22 445.889 cv
588.945 445.489 589.795 445.264 590.745 445.264 cv
592.295 445.264 593.495 445.764 594.295 446.739 cv
595.095 447.714 595.52 449.139 595.52 451.014 cv
f
608.72 445.989 mo
608.72 448.114 li
608.07 447.814 607.42 447.564 606.745 447.389 cv
606.045 447.239 605.345 447.139 604.62 447.139 cv
603.495 447.139 602.645 447.314 602.095 447.664 cv
601.545 448.014 601.27 448.514 601.27 449.189 cv
601.27 449.714 601.47 450.114 601.87 450.414 cv
602.27 450.714 603.07 451.014 604.27 451.264 cv
605.045 451.439 li
606.645 451.789 607.77 452.289 608.445 452.889 cv
609.095 453.514 609.445 454.389 609.445 455.489 cv
609.445 456.764 608.945 457.764 607.945 458.489 cv
606.945 459.239 605.545 459.589 603.795 459.589 cv
603.045 459.589 602.295 459.514 601.495 459.389 cv
600.695 459.264 599.87 459.064 598.995 458.764 cv
598.995 456.439 li
599.82 456.889 600.645 457.214 601.445 457.414 cv
602.245 457.639 603.045 457.739 603.845 457.739 cv
604.895 457.739 605.72 457.564 606.295 457.214 cv
606.845 456.864 607.145 456.339 607.145 455.664 cv
607.145 455.064 606.92 454.589 606.52 454.264 cv
606.12 453.939 605.22 453.614 603.82 453.314 cv
603.045 453.139 li
601.645 452.839 600.62 452.389 600.02 451.789 cv
599.395 451.189 599.095 450.364 599.095 449.289 cv
599.095 448.014 599.545 447.014 600.445 446.314 cv
601.345 445.614 602.645 445.264 604.345 445.264 cv
605.17 445.264 605.945 445.339 606.695 445.464 cv
607.42 445.589 608.095 445.764 608.72 445.989 cv
f
620.97 445.589 mo
623.22 445.589 li
623.22 459.264 li
620.97 459.264 li
620.97 445.589 li
620.97 440.264 mo
623.22 440.264 li
623.22 443.114 li
620.97 443.114 li
620.97 440.264 li
f
639.295 451.014 mo
639.295 459.264 li
637.045 459.264 li
637.045 451.089 li
637.045 449.789 636.77 448.839 636.27 448.189 cv
635.77 447.539 635.02 447.214 634.02 447.214 cv
632.795 447.214 631.845 447.614 631.145 448.389 cv
630.445 449.164 630.095 450.214 630.095 451.539 cv
630.095 459.264 li
627.845 459.264 li
627.845 445.589 li
630.095 445.589 li
630.095 447.714 li
630.62 446.914 631.245 446.289 631.995 445.889 cv
632.72 445.489 633.57 445.264 634.52 445.264 cv
636.07 445.264 637.27 445.764 638.07 446.739 cv
638.87 447.714 639.295 449.139 639.295 451.014 cv
f
653.945 441.714 mo
653.945 445.589 li
658.57 445.589 li
658.57 447.339 li
653.945 447.339 li
653.945 454.764 li
653.945 455.889 654.095 456.614 654.395 456.914 cv
654.695 457.239 655.32 457.389 656.27 457.389 cv
658.57 457.389 li
658.57 459.264 li
656.27 459.264 li
654.52 459.264 653.32 458.939 652.67 458.289 cv
652.02 457.639 651.695 456.464 651.695 454.764 cv
651.695 447.339 li
650.045 447.339 li
650.045 445.589 li
651.695 445.589 li
651.695 441.714 li
653.945 441.714 li
f
672.895 451.014 mo
672.895 459.264 li
670.645 459.264 li
670.645 451.089 li
670.645 449.789 670.37 448.839 669.87 448.189 cv
669.37 447.539 668.62 447.214 667.62 447.214 cv
666.395 447.214 665.445 447.614 664.745 448.389 cv
664.045 449.164 663.695 450.214 663.695 451.539 cv
663.695 459.264 li
661.445 459.264 li
661.445 440.264 li
663.695 440.264 li
663.695 447.714 li
664.22 446.914 664.845 446.289 665.595 445.889 cv
666.32 445.489 667.17 445.264 668.12 445.264 cv
669.67 445.264 670.87 445.764 671.67 446.739 cv
672.47 447.714 672.895 449.139 672.895 451.014 cv
f
689.07 451.864 mo
689.07 452.964 li
678.745 452.964 li
678.845 454.514 679.295 455.714 680.145 456.514 cv
680.97 457.314 682.12 457.714 683.62 457.714 cv
684.47 457.714 685.32 457.614 686.12 457.414 cv
686.92 457.214 687.745 456.889 688.545 456.439 cv
688.545 458.564 li
687.745 458.914 686.92 459.189 686.07 459.339 cv
685.22 459.489 684.345 459.589 683.495 459.589 cv
681.295 459.589 679.57 458.964 678.295 457.714 cv
677.02 456.464 676.395 454.739 676.395 452.564 cv
676.395 450.339 676.995 448.564 678.195 447.239 cv
679.395 445.939 681.045 445.264 683.095 445.264 cv
684.945 445.264 686.395 445.864 687.47 447.039 cv
688.52 448.239 689.07 449.839 689.07 451.864 cv
686.82 451.214 mo
686.795 449.989 686.445 449.014 685.795 448.264 cv
685.12 447.539 684.22 447.164 683.12 447.164 cv
681.87 447.164 680.87 447.539 680.12 448.239 cv
679.37 448.939 678.92 449.939 678.82 451.214 cv
686.82 451.214 li
f
702.92 441.714 mo
702.92 445.589 li
707.545 445.589 li
707.545 447.339 li
702.92 447.339 li
702.92 454.764 li
702.92 455.889 703.07 456.614 703.37 456.914 cv
703.67 457.239 704.295 457.389 705.245 457.389 cv
707.545 457.389 li
707.545 459.264 li
705.245 459.264 li
703.495 459.264 702.295 458.939 701.645 458.289 cv
700.995 457.639 700.67 456.464 700.67 454.764 cv
700.67 447.339 li
699.02 447.339 li
699.02 445.589 li
700.67 445.589 li
700.67 441.714 li
702.92 441.714 li
f
718.42 447.689 mo
718.17 447.539 717.895 447.439 717.595 447.364 cv
717.295 447.314 716.97 447.264 716.62 447.264 cv
715.345 447.264 714.37 447.689 713.695 448.514 cv
712.995 449.339 712.67 450.514 712.67 452.064 cv
712.67 459.264 li
710.42 459.264 li
710.42 445.589 li
712.67 445.589 li
712.67 447.714 li
713.12 446.889 713.745 446.264 714.495 445.864 cv
715.245 445.464 716.17 445.264 717.27 445.264 cv
717.42 445.264 717.595 445.289 717.795 445.289 cv
717.97 445.314 718.17 445.339 718.42 445.389 cv
718.42 447.689 li
f
726.995 452.389 mo
725.17 452.389 723.92 452.614 723.22 453.014 cv
722.52 453.439 722.17 454.139 722.17 455.139 cv
722.17 455.939 722.42 456.589 722.945 457.039 cv
723.47 457.514 724.195 457.739 725.095 457.739 cv
726.345 457.739 727.345 457.314 728.095 456.414 cv
728.845 455.539 729.22 454.364 729.22 452.889 cv
729.22 452.389 li
726.995 452.389 li
731.47 451.464 mo
731.47 459.264 li
729.22 459.264 li
729.22 457.189 li
728.695 458.039 728.045 458.639 727.295 459.014 cv
726.545 459.389 725.595 459.589 724.495 459.589 cv
723.095 459.589 721.97 459.214 721.145 458.439 cv
720.32 457.664 719.92 456.614 719.92 455.289 cv
719.92 453.764 720.42 452.614 721.47 451.814 cv
722.495 451.039 724.02 450.639 726.07 450.639 cv
729.22 450.639 li
729.22 450.414 li
729.22 449.389 728.87 448.589 728.195 448.014 cv
727.52 447.464 726.57 447.164 725.345 447.164 cv
724.545 447.164 723.795 447.264 723.045 447.464 cv
722.295 447.664 721.595 447.939 720.92 448.289 cv
720.92 446.214 li
721.72 445.914 722.52 445.664 723.295 445.514 cv
724.07 445.364 724.82 445.264 725.57 445.264 cv
727.545 445.264 729.02 445.789 729.995 446.814 cv
730.97 447.839 731.47 449.389 731.47 451.464 cv
f
736.095 445.589 mo
738.345 445.589 li
738.345 459.264 li
736.095 459.264 li
736.095 445.589 li
736.095 440.264 mo
738.345 440.264 li
738.345 443.114 li
736.095 443.114 li
736.095 440.264 li
f
754.42 451.014 mo
754.42 459.264 li
752.17 459.264 li
752.17 451.089 li
752.17 449.789 751.895 448.839 751.395 448.189 cv
750.895 447.539 750.145 447.214 749.145 447.214 cv
747.92 447.214 746.97 447.614 746.27 448.389 cv
745.57 449.164 745.22 450.214 745.22 451.539 cv
745.22 459.264 li
742.97 459.264 li
742.97 445.589 li
745.22 445.589 li
745.22 447.714 li
745.745 446.914 746.37 446.289 747.12 445.889 cv
747.845 445.489 748.695 445.264 749.645 445.264 cv
751.195 445.264 752.395 445.764 753.195 446.739 cv
753.995 447.714 754.42 449.139 754.42 451.014 cv
f
758.895 445.589 mo
761.145 445.589 li
761.145 459.264 li
758.895 459.264 li
758.895 445.589 li
758.895 440.264 mo
761.145 440.264 li
761.145 443.114 li
758.895 443.114 li
758.895 440.264 li
f
777.22 451.014 mo
777.22 459.264 li
774.97 459.264 li
774.97 451.089 li
774.97 449.789 774.695 448.839 774.195 448.189 cv
773.695 447.539 772.945 447.214 771.945 447.214 cv
770.72 447.214 769.77 447.614 769.07 448.389 cv
768.37 449.164 768.02 450.214 768.02 451.539 cv
768.02 459.264 li
765.77 459.264 li
765.77 445.589 li
768.02 445.589 li
768.02 447.714 li
768.545 446.914 769.17 446.289 769.92 445.889 cv
770.645 445.489 771.495 445.264 772.445 445.264 cv
773.995 445.264 775.195 445.764 775.995 446.739 cv
776.795 447.714 777.22 449.139 777.22 451.014 cv
f
790.695 452.264 mo
790.695 450.664 790.345 449.389 789.695 448.489 cv
789.02 447.589 788.07 447.139 786.87 447.139 cv
785.67 447.139 784.72 447.589 784.045 448.489 cv
783.37 449.389 783.045 450.664 783.045 452.264 cv
783.045 453.889 783.37 455.139 784.045 456.039 cv
784.72 456.939 785.67 457.389 786.87 457.389 cv
788.07 457.389 789.02 456.939 789.695 456.039 cv
790.345 455.139 790.695 453.889 790.695 452.264 cv
792.945 457.564 mo
792.945 459.864 792.42 461.589 791.395 462.739 cv
790.345 463.864 788.77 464.439 786.645 464.439 cv
785.845 464.439 785.12 464.364 784.42 464.264 cv
783.72 464.139 783.02 463.964 782.37 463.714 cv
782.37 461.539 li
783.02 461.889 783.67 462.139 784.32 462.314 cv
784.97 462.489 785.62 462.589 786.295 462.589 cv
787.745 462.589 788.845 462.189 789.595 461.439 cv
790.32 460.664 790.695 459.514 790.695 457.964 cv
790.695 456.864 li
790.22 457.664 789.62 458.264 788.895 458.664 cv
788.17 459.064 787.32 459.264 786.32 459.264 cv
784.62 459.264 783.27 458.639 782.245 457.364 cv
781.22 456.089 780.72 454.389 780.72 452.264 cv
780.72 450.164 781.22 448.464 782.245 447.189 cv
783.27 445.914 784.62 445.264 786.32 445.264 cv
787.32 445.264 788.17 445.464 788.895 445.864 cv
789.62 446.264 790.22 446.864 790.695 447.664 cv
790.695 445.589 li
792.945 445.589 li
792.945 457.564 li
f
814.245 445.989 mo
814.245 448.114 li
813.595 447.814 812.945 447.564 812.27 447.389 cv
811.57 447.239 810.87 447.139 810.145 447.139 cv
809.02 447.139 808.17 447.314 807.62 447.664 cv
807.07 448.014 806.795 448.514 806.795 449.189 cv
806.795 449.714 806.995 450.114 807.395 450.414 cv
807.795 450.714 808.595 451.014 809.795 451.264 cv
810.57 451.439 li
812.17 451.789 813.295 452.289 813.97 452.889 cv
814.62 453.514 814.97 454.389 814.97 455.489 cv
814.97 456.764 814.47 457.764 813.47 458.489 cv
812.47 459.239 811.07 459.589 809.32 459.589 cv
808.57 459.589 807.82 459.514 807.02 459.389 cv
806.22 459.264 805.395 459.064 804.52 458.764 cv
804.52 456.439 li
805.345 456.889 806.17 457.214 806.97 457.414 cv
807.77 457.639 808.57 457.739 809.37 457.739 cv
810.42 457.739 811.245 457.564 811.82 457.214 cv
812.37 456.864 812.67 456.339 812.67 455.664 cv
812.67 455.064 812.445 454.589 812.045 454.264 cv
811.645 453.939 810.745 453.614 809.345 453.314 cv
808.57 453.139 li
807.17 452.839 806.145 452.389 805.545 451.789 cv
804.92 451.189 804.62 450.364 804.62 449.289 cv
804.62 448.014 805.07 447.014 805.97 446.314 cv
806.87 445.614 808.17 445.264 809.87 445.264 cv
810.695 445.264 811.47 445.339 812.22 445.464 cv
812.945 445.589 813.62 445.764 814.245 445.989 cv
f
830.245 451.864 mo
830.245 452.964 li
819.919 452.964 li
820.02 454.514 820.47 455.714 821.32 456.514 cv
822.145 457.314 823.294 457.714 824.794 457.714 cv
825.645 457.714 826.495 457.614 827.294 457.414 cv
828.095 457.214 828.919 456.889 829.72 456.439 cv
829.72 458.564 li
828.919 458.914 828.095 459.189 827.245 459.339 cv
826.395 459.489 825.52 459.589 824.669 459.589 cv
822.47 459.589 820.745 458.964 819.47 457.714 cv
818.195 456.464 817.57 454.739 817.57 452.564 cv
817.57 450.339 818.169 448.564 819.37 447.239 cv
820.57 445.939 822.22 445.264 824.27 445.264 cv
826.12 445.264 827.57 445.864 828.645 447.039 cv
829.695 448.239 830.245 449.839 830.245 451.864 cv
827.995 451.214 mo
827.97 449.989 827.62 449.014 826.97 448.264 cv
826.294 447.539 825.395 447.164 824.294 447.164 cv
823.044 447.164 822.044 447.539 821.294 448.239 cv
820.544 448.939 820.095 449.939 819.995 451.214 cv
827.995 451.214 li
f
836.145 441.714 mo
836.145 445.589 li
840.77 445.589 li
840.77 447.339 li
836.145 447.339 li
836.145 454.764 li
836.145 455.889 836.295 456.614 836.595 456.914 cv
836.895 457.239 837.52 457.389 838.47 457.389 cv
840.77 457.389 li
840.77 459.264 li
838.47 459.264 li
836.72 459.264 835.52 458.939 834.87 458.289 cv
834.22 457.639 833.895 456.464 833.895 454.764 cv
833.895 447.339 li
832.245 447.339 li
832.245 445.589 li
833.895 445.589 li
833.895 441.714 li
836.145 441.714 li
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
71.0465 364.636 mo
856.953 364.636 li
856.953 365.436 li
71.0465 365.436 li
71.0465 364.636 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
71.4464 365.036 mo
67.9464 365.036 li
f
71.4464 365.036 mo
67.9464 365.036 li
@
39.1744 371.57 mo
42.7164 371.57 li
42.7164 359.338 li
38.8664 360.108 li
38.8664 358.128 li
42.6944 357.358 li
44.8724 357.358 li
44.8724 371.57 li
48.4144 371.57 li
48.4144 373.396 li
39.1744 373.396 li
39.1744 371.57 li
f
57.4344 358.788 mo
56.3124 358.788 55.4764 359.338 54.9044 360.438 cv
54.3324 361.538 54.0684 363.188 54.0684 365.388 cv
54.0684 367.588 54.3324 369.238 54.9044 370.338 cv
55.4764 371.438 56.3124 371.988 57.4344 371.988 cv
58.5564 371.988 59.3924 371.438 59.9644 370.338 cv
60.5144 369.238 60.8004 367.588 60.8004 365.388 cv
60.8004 363.188 60.5144 361.538 59.9644 360.438 cv
59.3924 359.338 58.5564 358.788 57.4344 358.788 cv
57.4344 357.072 mo
59.2164 357.072 60.5804 357.798 61.5484 359.206 cv
62.4944 360.636 62.9784 362.704 62.9784 365.388 cv
62.9784 368.094 62.4944 370.162 61.5484 371.57 cv
60.5804 372.978 59.2164 373.682 57.4344 373.682 cv
55.6304 373.682 54.2444 372.978 53.2984 371.57 cv
52.3524 370.162 51.8904 368.094 51.8904 365.388 cv
51.8904 362.704 52.3524 360.636 53.2984 359.206 cv
54.2444 357.798 55.6304 357.072 57.4344 357.072 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
71.0465 320.292 mo
856.953 320.292 li
856.953 321.092 li
71.0465 321.092 li
71.0465 320.292 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
71.4464 320.692 mo
67.9464 320.692 li
f
71.4464 320.692 mo
67.9464 320.692 li
@
40.6704 327.226 mo
48.2384 327.226 li
48.2384 329.052 li
38.0524 329.052 li
38.0524 327.226 li
38.8664 326.39 39.9884 325.246 41.4184 323.794 cv
42.8264 322.364 43.7284 321.44 44.1024 321.022 cv
44.8064 320.252 45.2904 319.592 45.5544 319.042 cv
45.8184 318.514 45.9724 317.964 45.9724 317.436 cv
45.9724 316.6 45.6644 315.896 45.0704 315.368 cv
44.4764 314.84 43.7064 314.554 42.7384 314.554 cv
42.0564 314.554 41.3304 314.686 40.5824 314.906 cv
39.8344 315.148 39.0204 315.5 38.1624 315.984 cv
38.1624 313.784 li
39.0424 313.432 39.8564 313.168 40.6044 312.992 cv
41.3524 312.816 42.0564 312.728 42.6944 312.728 cv
44.3444 312.728 45.6644 313.146 46.6544 313.982 cv
47.6444 314.818 48.1504 315.918 48.1504 317.304 cv
48.1504 317.964 48.0184 318.602 47.7764 319.174 cv
47.5344 319.768 47.0944 320.472 46.4344 321.264 cv
46.2584 321.484 45.6864 322.078 44.7184 323.068 cv
43.7504 324.058 42.4084 325.444 40.6704 327.226 cv
f
57.4344 314.444 mo
56.3124 314.444 55.4764 314.994 54.9044 316.094 cv
54.3324 317.194 54.0684 318.844 54.0684 321.044 cv
54.0684 323.244 54.3324 324.894 54.9044 325.994 cv
55.4764 327.094 56.3124 327.644 57.4344 327.644 cv
58.5564 327.644 59.3924 327.094 59.9644 325.994 cv
60.5144 324.894 60.8004 323.244 60.8004 321.044 cv
60.8004 318.844 60.5144 317.194 59.9644 316.094 cv
59.3924 314.994 58.5564 314.444 57.4344 314.444 cv
57.4344 312.728 mo
59.2164 312.728 60.5804 313.454 61.5484 314.862 cv
62.4944 316.292 62.9784 318.36 62.9784 321.044 cv
62.9784 323.75 62.4944 325.818 61.5484 327.226 cv
60.5804 328.634 59.2164 329.338 57.4344 329.338 cv
55.6304 329.338 54.2444 328.634 53.2984 327.226 cv
52.3524 325.818 51.8904 323.75 51.8904 321.044 cv
51.8904 318.36 52.3524 316.292 53.2984 314.862 cv
54.2444 313.454 55.6304 312.728 57.4344 312.728 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
71.0465 275.948 mo
856.953 275.948 li
856.953 276.748 li
71.0465 276.748 li
71.0465 275.948 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
71.4464 276.348 mo
67.9464 276.348 li
f
71.4464 276.348 mo
67.9464 276.348 li
@
45.3784 276.062 mo
46.4124 276.282 47.2264 276.744 47.7984 277.448 cv
48.3704 278.152 48.6784 279.032 48.6784 280.044 cv
48.6784 281.628 48.1284 282.86 47.0504 283.718 cv
45.9504 284.576 44.4104 284.994 42.4084 284.994 cv
41.7264 284.994 41.0224 284.928 40.3184 284.796 cv
39.6144 284.686 38.8664 284.488 38.1184 284.224 cv
38.1184 282.134 li
38.7124 282.486 39.3724 282.75 40.0984 282.926 cv
40.8024 283.102 41.5504 283.19 42.3424 283.19 cv
43.7064 283.19 44.7404 282.926 45.4444 282.398 cv
46.1484 281.87 46.5224 281.078 46.5224 280.044 cv
46.5224 279.12 46.1924 278.372 45.5324 277.844 cv
44.8724 277.316 43.9484 277.03 42.7604 277.03 cv
40.8904 277.03 li
40.8904 275.248 li
42.8484 275.248 li
43.9044 275.248 44.7184 275.05 45.2904 274.61 cv
45.8624 274.192 46.1484 273.576 46.1484 272.762 cv
46.1484 271.948 45.8404 271.31 45.2684 270.87 cv
44.6744 270.43 43.8384 270.21 42.7604 270.21 cv
42.1664 270.21 41.5284 270.276 40.8464 270.408 cv
40.1644 270.54 39.4164 270.738 38.6024 271.002 cv
38.6024 269.066 li
39.4164 268.846 40.1864 268.67 40.9124 268.56 cv
41.6164 268.45 42.2984 268.384 42.9584 268.384 cv
44.5864 268.384 45.8844 268.758 46.8524 269.506 cv
47.8204 270.254 48.3044 271.266 48.3044 272.542 cv
48.3044 273.422 48.0404 274.17 47.5344 274.786 cv
47.0284 275.402 46.3024 275.842 45.3784 276.062 cv
f
57.4344 270.1 mo
56.3124 270.1 55.4764 270.65 54.9044 271.75 cv
54.3324 272.85 54.0684 274.5 54.0684 276.7 cv
54.0684 278.9 54.3324 280.55 54.9044 281.65 cv
55.4764 282.75 56.3124 283.3 57.4344 283.3 cv
58.5564 283.3 59.3924 282.75 59.9644 281.65 cv
60.5144 280.55 60.8004 278.9 60.8004 276.7 cv
60.8004 274.5 60.5144 272.85 59.9644 271.75 cv
59.3924 270.65 58.5564 270.1 57.4344 270.1 cv
57.4344 268.384 mo
59.2164 268.384 60.5804 269.11 61.5484 270.518 cv
62.4944 271.948 62.9784 274.016 62.9784 276.7 cv
62.9784 279.406 62.4944 281.474 61.5484 282.882 cv
60.5804 284.29 59.2164 284.994 57.4344 284.994 cv
55.6304 284.994 54.2444 284.29 53.2984 282.882 cv
52.3524 281.474 51.8904 279.406 51.8904 276.7 cv
51.8904 274.016 52.3524 271.948 53.2984 270.518 cv
54.2444 269.11 55.6304 268.384 57.4344 268.384 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
2 lc
71.4464 232.004 mo
856.552 232.004 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
71.4464 232.004 mo
67.9464 232.004 li
f
71.4464 232.004 mo
67.9464 232.004 li
@
44.7624 226.217 mo
39.2844 234.775 li
44.7624 234.775 li
44.7624 226.217 li
44.1904 224.325 mo
46.9184 224.325 li
46.9184 234.775 li
49.2064 234.775 li
49.2064 236.579 li
46.9184 236.579 li
46.9184 240.363 li
44.7624 240.363 li
44.7624 236.579 li
37.5244 236.579 li
37.5244 234.489 li
44.1904 224.325 li
f
57.4344 225.755 mo
56.3124 225.755 55.4764 226.305 54.9044 227.405 cv
54.3324 228.505 54.0684 230.155 54.0684 232.355 cv
54.0684 234.555 54.3324 236.205 54.9044 237.305 cv
55.4764 238.405 56.3124 238.955 57.4344 238.955 cv
58.5564 238.955 59.3924 238.405 59.9644 237.305 cv
60.5144 236.205 60.8004 234.555 60.8004 232.355 cv
60.8004 230.155 60.5144 228.505 59.9644 227.405 cv
59.3924 226.305 58.5564 225.755 57.4344 225.755 cv
57.4344 224.039 mo
59.2164 224.039 60.5804 224.765 61.5484 226.173 cv
62.4944 227.603 62.9784 229.671 62.9784 232.355 cv
62.9784 235.061 62.4944 237.129 61.5484 238.537 cv
60.5804 239.945 59.2164 240.649 57.4344 240.649 cv
55.6304 240.649 54.2444 239.945 53.2984 238.537 cv
52.3524 237.129 51.8904 235.061 51.8904 232.355 cv
51.8904 229.671 52.3524 227.603 53.2984 226.173 cv
54.2444 224.765 55.6304 224.039 57.4344 224.039 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
2 lc
71.4464 187.66 mo
856.552 187.66 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
71.4464 187.66 mo
67.9464 187.66 li
f
71.4464 187.66 mo
67.9464 187.66 li
@
38.8224 179.981 mo
47.3364 179.981 li
47.3364 181.807 li
40.8024 181.807 li
40.8024 185.745 li
41.1104 185.635 41.4404 185.547 41.7484 185.503 cv
42.0564 185.459 42.3864 185.415 42.6944 185.415 cv
44.4764 185.415 45.8844 185.921 46.9404 186.889 cv
47.9964 187.879 48.5244 189.199 48.5244 190.871 cv
48.5244 192.609 47.9744 193.951 46.8964 194.897 cv
45.8184 195.843 44.3004 196.305 42.3644 196.305 cv
41.6824 196.305 41.0004 196.239 40.2964 196.151 cv
39.5924 196.041 38.8884 195.887 38.1404 195.645 cv
38.1404 193.467 li
38.7784 193.819 39.4384 194.083 40.1424 194.259 cv
40.8244 194.435 41.5504 194.501 42.3204 194.501 cv
43.5524 194.501 44.5424 194.193 45.2684 193.533 cv
45.9724 192.873 46.3464 191.993 46.3464 190.871 cv
46.3464 189.771 45.9724 188.891 45.2684 188.231 cv
44.5424 187.571 43.5524 187.241 42.3204 187.241 cv
41.7484 187.241 41.1544 187.307 40.5824 187.439 cv
40.0104 187.571 39.4164 187.769 38.8224 188.033 cv
38.8224 179.981 li
f
57.4344 181.411 mo
56.3124 181.411 55.4764 181.961 54.9044 183.061 cv
54.3324 184.161 54.0684 185.811 54.0684 188.011 cv
54.0684 190.211 54.3324 191.861 54.9044 192.961 cv
55.4764 194.061 56.3124 194.611 57.4344 194.611 cv
58.5564 194.611 59.3924 194.061 59.9644 192.961 cv
60.5144 191.861 60.8004 190.211 60.8004 188.011 cv
60.8004 185.811 60.5144 184.161 59.9644 183.061 cv
59.3924 181.961 58.5564 181.411 57.4344 181.411 cv
57.4344 179.695 mo
59.2164 179.695 60.5804 180.421 61.5484 181.829 cv
62.4944 183.259 62.9784 185.327 62.9784 188.011 cv
62.9784 190.717 62.4944 192.785 61.5484 194.193 cv
60.5804 195.601 59.2164 196.305 57.4344 196.305 cv
55.6304 196.305 54.2444 195.601 53.2984 194.193 cv
52.3524 192.785 51.8904 190.717 51.8904 188.011 cv
51.8904 185.327 52.3524 183.259 53.2984 181.829 cv
54.2444 180.421 55.6304 179.695 57.4344 179.695 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
2 lc
71.4464 143.316 mo
856.552 143.316 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
71.4464 143.316 mo
67.9464 143.316 li
f
71.4464 143.316 mo
67.9464 143.316 li
@
43.7064 142.787 mo
42.7384 142.787 41.9684 143.139 41.3964 143.799 cv
40.8244 144.459 40.5384 145.383 40.5384 146.527 cv
40.5384 147.693 40.8244 148.617 41.3964 149.277 cv
41.9684 149.937 42.7384 150.267 43.7064 150.267 cv
44.6744 150.267 45.4444 149.937 46.0164 149.277 cv
46.5884 148.617 46.8744 147.693 46.8744 146.527 cv
46.8744 145.383 46.5884 144.459 46.0164 143.799 cv
45.4444 143.139 44.6744 142.787 43.7064 142.787 cv
48.0184 135.989 mo
48.0184 137.969 li
47.4684 137.705 46.9184 137.507 46.3684 137.375 cv
45.7964 137.243 45.2464 137.177 44.7184 137.177 cv
43.2664 137.177 42.1664 137.661 41.4184 138.629 cv
40.6704 139.597 40.2304 141.071 40.1424 143.007 cv
40.5604 142.391 41.0884 141.907 41.7264 141.577 cv
42.3644 141.247 43.0684 141.071 43.8384 141.071 cv
45.4444 141.071 46.7204 141.577 47.6444 142.545 cv
48.5684 143.513 49.0524 144.855 49.0524 146.527 cv
49.0524 148.177 48.5464 149.497 47.5784 150.487 cv
46.6104 151.477 45.3124 151.961 43.7064 151.961 cv
41.8584 151.961 40.4284 151.257 39.4604 149.849 cv
38.4704 148.441 37.9864 146.373 37.9864 143.667 cv
37.9864 141.137 38.5804 139.113 39.7904 137.617 cv
40.9784 136.121 42.6064 135.351 44.6304 135.351 cv
45.1584 135.351 45.7084 135.417 46.2804 135.505 cv
46.8304 135.615 47.4024 135.769 48.0184 135.989 cv
f
57.4344 137.067 mo
56.3124 137.067 55.4764 137.617 54.9044 138.717 cv
54.3324 139.817 54.0684 141.467 54.0684 143.667 cv
54.0684 145.867 54.3324 147.517 54.9044 148.617 cv
55.4764 149.717 56.3124 150.267 57.4344 150.267 cv
58.5564 150.267 59.3924 149.717 59.9644 148.617 cv
60.5144 147.517 60.8004 145.867 60.8004 143.667 cv
60.8004 141.467 60.5144 139.817 59.9644 138.717 cv
59.3924 137.617 58.5564 137.067 57.4344 137.067 cv
57.4344 135.351 mo
59.2164 135.351 60.5804 136.077 61.5484 137.485 cv
62.4944 138.915 62.9784 140.983 62.9784 143.667 cv
62.9784 146.373 62.4944 148.441 61.5484 149.849 cv
60.5804 151.257 59.2164 151.961 57.4344 151.961 cv
55.6304 151.961 54.2444 151.257 53.2984 149.849 cv
52.3524 148.441 51.8904 146.373 51.8904 143.667 cv
51.8904 140.983 52.3524 138.915 53.2984 137.485 cv
54.2444 136.077 55.6304 135.351 57.4344 135.351 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
2 lc
71.4464 98.972 mo
856.552 98.972 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
71.4464 98.972 mo
67.9464 98.972 li
f
71.4464 98.972 mo
67.9464 98.972 li
@
38.2504 91.2934 mo
48.5684 91.2934 li
48.5684 92.2174 li
42.7384 107.331 li
40.4724 107.331 li
45.9504 93.1194 li
38.2504 93.1194 li
38.2504 91.2934 li
f
57.4344 92.7234 mo
56.3124 92.7234 55.4764 93.2734 54.9044 94.3734 cv
54.3324 95.4734 54.0684 97.1234 54.0684 99.3234 cv
54.0684 101.523 54.3324 103.173 54.9044 104.273 cv
55.4764 105.373 56.3124 105.923 57.4344 105.923 cv
58.5564 105.923 59.3924 105.373 59.9644 104.273 cv
60.5144 103.173 60.8004 101.523 60.8004 99.3234 cv
60.8004 97.1234 60.5144 95.4734 59.9644 94.3734 cv
59.3924 93.2734 58.5564 92.7234 57.4344 92.7234 cv
57.4344 91.0074 mo
59.2164 91.0074 60.5804 91.7334 61.5484 93.1414 cv
62.4944 94.5714 62.9784 96.6394 62.9784 99.3234 cv
62.9784 102.029 62.4944 104.097 61.5484 105.505 cv
60.5804 106.913 59.2164 107.617 57.4344 107.617 cv
55.6304 107.617 54.2444 106.913 53.2984 105.505 cv
52.3524 104.097 51.8904 102.029 51.8904 99.3234 cv
51.8904 96.6394 52.3524 94.5714 53.2984 93.1414 cv
54.2444 91.7334 55.6304 91.0074 57.4344 91.0074 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
71.0465 54.2279 mo
856.953 54.2279 li
856.953 55.028 li
71.0465 55.028 li
71.0465 54.2279 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
71.4464 54.628 mo
67.9464 54.628 li
f
71.4464 54.628 mo
67.9464 54.628 li
@
43.4424 55.3753 mo
42.4084 55.3753 41.5944 55.6613 41.0004 56.2113 cv
40.4064 56.7613 40.1204 57.5093 40.1204 58.4773 cv
40.1204 59.4453 40.4064 60.2153 41.0004 60.7653 cv
41.5944 61.3153 42.4084 61.5793 43.4424 61.5793 cv
44.4544 61.5793 45.2684 61.3153 45.8624 60.7433 cv
46.4564 60.1933 46.7644 59.4453 46.7644 58.4773 cv
46.7644 57.5093 46.4564 56.7613 45.8844 56.2113 cv
45.2904 55.6613 44.4764 55.3753 43.4424 55.3753 cv
41.2644 54.4513 mo
40.3404 54.2313 39.6144 53.7913 39.0864 53.1533 cv
38.5584 52.5153 38.3164 51.7453 38.3164 50.8213 cv
38.3164 49.5453 38.7564 48.5333 39.6804 47.7853 cv
40.5824 47.0373 41.8364 46.6633 43.4424 46.6633 cv
45.0264 46.6633 46.2804 47.0373 47.2044 47.7853 cv
48.1064 48.5333 48.5684 49.5453 48.5684 50.8213 cv
48.5684 51.7453 48.3044 52.5153 47.7764 53.1533 cv
47.2484 53.7913 46.5444 54.2313 45.6204 54.4513 cv
46.6544 54.6933 47.4684 55.1773 48.0624 55.8813 cv
48.6344 56.5853 48.9424 57.4653 48.9424 58.4773 cv
48.9424 60.0393 48.4584 61.2273 47.5124 62.0413 cv
46.5444 62.8773 45.2024 63.2733 43.4424 63.2733 cv
41.6604 63.2733 40.2964 62.8773 39.3504 62.0413 cv
38.4044 61.2273 37.9424 60.0393 37.9424 58.4773 cv
37.9424 57.4653 38.2284 56.5853 38.8224 55.8813 cv
39.3944 55.1773 40.2084 54.6933 41.2644 54.4513 cv
40.4724 51.0193 mo
40.4724 51.8553 40.7144 52.5153 41.2424 52.9773 cv
41.7704 53.4393 42.4964 53.6593 43.4424 53.6593 cv
44.3664 53.6593 45.0924 53.4393 45.6204 52.9773 cv
46.1484 52.5153 46.4124 51.8553 46.4124 51.0193 cv
46.4124 50.1833 46.1484 49.5453 45.6204 49.0833 cv
45.0924 48.6213 44.3664 48.3793 43.4424 48.3793 cv
42.4964 48.3793 41.7704 48.6213 41.2424 49.0833 cv
40.7144 49.5453 40.4724 50.1833 40.4724 51.0193 cv
f
57.4344 48.3793 mo
56.3124 48.3793 55.4764 48.9293 54.9044 50.0293 cv
54.3324 51.1293 54.0684 52.7793 54.0684 54.9793 cv
54.0684 57.1793 54.3324 58.8293 54.9044 59.9293 cv
55.4764 61.0293 56.3124 61.5793 57.4344 61.5793 cv
58.5564 61.5793 59.3924 61.0293 59.9644 59.9293 cv
60.5144 58.8293 60.8004 57.1793 60.8004 54.9793 cv
60.8004 52.7793 60.5144 51.1293 59.9644 50.0293 cv
59.3924 48.9293 58.5564 48.3793 57.4344 48.3793 cv
57.4344 46.6633 mo
59.2164 46.6633 60.5804 47.3893 61.5484 48.7973 cv
62.4944 50.2273 62.9784 52.2953 62.9784 54.9793 cv
62.9784 57.6853 62.4944 59.7533 61.5484 61.1613 cv
60.5804 62.5693 59.2164 63.2733 57.4344 63.2733 cv
55.6304 63.2733 54.2444 62.5693 53.2984 61.1613 cv
52.3524 59.7533 51.8904 57.6853 51.8904 54.9793 cv
51.8904 52.2953 52.3524 50.2273 53.2984 48.7973 cv
54.2444 47.3893 55.6304 46.6633 57.4344 46.6633 cv
f
gsave
71.4464 407.967 mo
856.552 407.967 li
856.552 6.58178 li
71.4464 6.58178 li
71.4464 407.967 li
clp
2 lc
71.4464 10.2839 mo
856.552 10.2839 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
71.4464 10.2839 mo
67.9464 10.2839 li
f
71.4464 10.2839 mo
67.9464 10.2839 li
@
38.8664 18.3133 mo
38.8664 16.3333 li
39.3944 16.5973 39.9444 16.7953 40.5164 16.9273 cv
41.0664 17.0593 41.6164 17.1253 42.1664 17.1253 cv
43.5744 17.1253 44.6744 16.6633 45.4224 15.6953 cv
46.1704 14.7273 46.6104 13.2753 46.7424 11.2953 cv
46.3024 11.9113 45.7744 12.3953 45.1584 12.7253 cv
44.5204 13.0553 43.8164 13.2093 43.0464 13.2093 cv
41.4184 13.2093 40.1424 12.7253 39.2184 11.7573 cv
38.2944 10.7893 37.8324 9.46928 37.8324 7.77528 cv
37.8324 6.14728 38.3164 4.82728 39.2844 3.81528 cv
40.2524 2.82528 41.5504 2.31928 43.1784 2.31928 cv
45.0264 2.31928 46.4564 3.04528 47.4244 4.45328 cv
48.3924 5.88328 48.8984 7.95128 48.8984 10.6353 cv
48.8984 13.1873 48.2824 15.1893 47.0944 16.6853 cv
45.8844 18.1813 44.2784 18.9293 42.2544 18.9293 cv
41.7044 18.9293 41.1544 18.8633 40.6044 18.7753 cv
40.0324 18.6873 39.4604 18.5333 38.8664 18.3133 cv
43.1784 11.5153 mo
44.1464 11.5153 44.9164 11.1853 45.4884 10.5253 cv
46.0604 9.86528 46.3464 8.94128 46.3464 7.77528 cv
46.3464 6.63128 46.0604 5.70728 45.4884 5.04728 cv
44.9164 4.38728 44.1464 4.03528 43.1784 4.03528 cv
42.2104 4.03528 41.4404 4.38728 40.8684 5.04728 cv
40.2964 5.70728 40.0104 6.63128 40.0104 7.77528 cv
40.0104 8.94128 40.2964 9.86528 40.8684 10.5253 cv
41.4404 11.1853 42.2104 11.5153 43.1784 11.5153 cv
f
57.4344 4.03528 mo
56.3124 4.03528 55.4764 4.58528 54.9044 5.68528 cv
54.3324 6.78528 54.0684 8.43528 54.0684 10.6353 cv
54.0684 12.8353 54.3324 14.4853 54.9044 15.5853 cv
55.4764 16.6853 56.3124 17.2353 57.4344 17.2353 cv
58.5564 17.2353 59.3924 16.6853 59.9644 15.5853 cv
60.5144 14.4853 60.8004 12.8353 60.8004 10.6353 cv
60.8004 8.43528 60.5144 6.78528 59.9644 5.68528 cv
59.3924 4.58528 58.5564 4.03528 57.4344 4.03528 cv
57.4344 2.31928 mo
59.2164 2.31928 60.5804 3.04528 61.5484 4.45328 cv
62.4944 5.88328 62.9784 7.95128 62.9784 10.6353 cv
62.9784 13.3413 62.4944 15.4093 61.5484 16.8173 cv
60.5804 18.2253 59.2164 18.9293 57.4344 18.9293 cv
55.6304 18.9293 54.2444 18.2253 53.2984 16.8173 cv
52.3524 15.4093 51.8904 13.3413 51.8904 10.6353 cv
51.8904 7.95128 52.3524 5.88328 53.2984 4.45328 cv
54.2444 3.04528 55.6304 2.31928 57.4344 2.31928 cv
f
11.0433 255.615 mo
25.2183 255.615 li
25.2183 252.64 li
25.2183 250.14 24.6683 248.29 23.5183 247.115 cv
22.3683 245.965 20.5683 245.365 18.1183 245.365 cv
15.6683 245.365 13.8933 245.965 12.7433 247.115 cv
11.6183 248.29 11.0433 250.14 11.0433 252.64 cv
11.0433 255.615 li
9.01828 258.09 mo
9.01828 253.015 li
9.01828 249.49 9.76828 246.89 11.2183 245.24 cv
12.6933 243.59 14.9933 242.765 18.1183 242.765 cv
21.2683 242.765 23.5683 243.615 25.0433 245.265 cv
26.5183 246.915 27.2433 249.515 27.2433 253.015 cv
27.2433 258.09 li
9.01828 258.09 li
f
13.5683 238.94 mo
13.5683 236.69 li
27.2433 236.69 li
27.2433 238.94 li
13.5683 238.94 li
8.24328 238.94 mo
8.24328 236.69 li
11.0933 236.69 li
11.0933 238.94 li
8.24328 238.94 li
f
14.0933 222.14 mo
16.1933 222.14 li
15.8433 222.79 15.5933 223.415 15.4183 224.065 cv
15.2433 224.715 15.1433 225.34 15.1433 225.99 cv
15.1433 227.44 15.6183 228.59 16.5433 229.39 cv
17.4683 230.19 18.7683 230.59 20.4183 230.59 cv
22.0933 230.59 23.3933 230.19 24.3183 229.39 cv
25.2433 228.59 25.6933 227.44 25.6933 225.99 cv
25.6933 225.34 25.6183 224.715 25.4433 224.065 cv
25.2683 223.415 24.9933 222.79 24.6433 222.14 cv
26.7183 222.14 li
27.0183 222.79 27.2433 223.44 27.3683 224.09 cv
27.4933 224.765 27.5683 225.49 27.5683 226.24 cv
27.5683 228.29 26.9433 229.94 25.6433 231.14 cv
24.3683 232.365 22.6183 232.965 20.4183 232.965 cv
18.1933 232.965 16.4433 232.365 15.1683 231.14 cv
13.8933 229.915 13.2433 228.24 13.2433 226.09 cv
13.2433 225.39 13.3183 224.715 13.4683 224.065 cv
13.6183 223.415 13.8183 222.765 14.0933 222.14 cv
f
19.8433 206.54 mo
20.9433 206.54 li
20.9433 216.865 li
22.4933 216.765 23.6933 216.315 24.4933 215.465 cv
25.2933 214.64 25.6933 213.49 25.6933 211.99 cv
25.6933 211.14 25.5933 210.29 25.3933 209.49 cv
25.1933 208.69 24.8683 207.865 24.4183 207.065 cv
26.5433 207.065 li
26.8933 207.865 27.1683 208.69 27.3183 209.54 cv
27.4683 210.39 27.5683 211.265 27.5683 212.115 cv
27.5683 214.315 26.9433 216.04 25.6933 217.315 cv
24.4433 218.59 22.7183 219.215 20.5433 219.215 cv
18.3183 219.215 16.5433 218.615 15.2183 217.415 cv
13.9183 216.215 13.2433 214.565 13.2433 212.515 cv
13.2433 210.665 13.8433 209.215 15.0183 208.14 cv
16.2183 207.09 17.8183 206.54 19.8433 206.54 cv
19.1933 208.79 mo
17.9683 208.815 16.9933 209.165 16.2433 209.815 cv
15.5183 210.49 15.1433 211.39 15.1433 212.49 cv
15.1433 213.74 15.5183 214.74 16.2183 215.49 cv
16.9183 216.24 17.9183 216.69 19.1933 216.79 cv
19.1933 208.79 li
f
8.26828 189.515 mo
10.1683 190.615 12.0183 191.415 13.8433 191.94 cv
15.6683 192.49 17.5183 192.74 19.3933 192.74 cv
21.2933 192.74 23.1433 192.49 24.9683 191.94 cv
26.8183 191.415 28.6433 190.615 30.5183 189.515 cv
30.5183 191.465 li
28.5933 192.69 26.7433 193.615 24.8933 194.215 cv
23.0433 194.815 21.2183 195.115 19.3933 195.115 cv
17.5933 195.115 15.7683 194.815 13.9183 194.215 cv
12.0683 193.615 10.1933 192.715 8.26828 191.465 cv
8.26828 189.515 li
f
19.2183 169.34 mo
19.2183 170.04 19.5183 170.615 20.1183 171.015 cv
20.7183 171.415 21.5683 171.615 22.6433 171.615 cv
23.6933 171.615 24.5433 171.415 25.1433 171.015 cv
25.7433 170.615 26.0433 170.04 26.0433 169.34 cv
26.0433 168.64 25.7433 168.09 25.1433 167.69 cv
24.5433 167.29 23.6933 167.09 22.6433 167.09 cv
21.5933 167.09 20.7433 167.29 20.1433 167.69 cv
19.5433 168.09 19.2183 168.64 19.2183 169.34 cv
17.6683 169.34 mo
17.6683 168.065 18.1183 167.04 19.0183 166.29 cv
19.9183 165.54 21.1433 165.14 22.6433 165.14 cv
24.1683 165.14 25.3683 165.54 26.2433 166.29 cv
27.1433 167.04 27.5683 168.065 27.5683 169.34 cv
27.5683 170.64 27.1433 171.69 26.2433 172.44 cv
25.3683 173.19 24.1683 173.565 22.6433 173.565 cv
21.1183 173.565 19.9183 173.19 19.0183 172.44 cv
18.1183 171.69 17.6683 170.64 17.6683 169.34 cv
10.2433 181.94 mo
10.2433 182.64 10.5683 183.19 11.1683 183.59 cv
11.7683 183.99 12.5933 184.19 13.6433 184.19 cv
14.7433 184.19 15.5683 183.99 16.1683 183.59 cv
16.7683 183.19 17.0683 182.64 17.0683 181.94 cv
17.0683 181.24 16.7683 180.665 16.1683 180.265 cv
15.5683 179.865 14.7433 179.665 13.6433 179.665 cv
12.5933 179.665 11.7683 179.89 11.1683 180.29 cv
10.5683 180.69 10.2433 181.24 10.2433 181.94 cv
8.69328 170.915 mo
8.69328 168.965 li
27.5683 180.365 li
27.5683 182.315 li
8.69328 170.915 li
8.69328 181.94 mo
8.69328 180.665 9.14328 179.64 10.0433 178.865 cv
10.9433 178.115 12.1433 177.715 13.6433 177.715 cv
15.1933 177.715 16.3933 178.115 17.2933 178.865 cv
18.1933 179.615 18.6183 180.64 18.6183 181.94 cv
18.6183 183.24 18.1933 184.265 17.2933 185.015 cv
16.3933 185.765 15.1933 186.14 13.6433 186.14 cv
12.1433 186.14 10.9433 185.765 10.0433 185.015 cv
9.14328 184.265 8.69328 183.24 8.69328 181.94 cv
f
8.26828 161.765 mo
8.26828 159.815 li
10.1933 158.615 12.0683 157.69 13.9183 157.09 cv
15.7683 156.49 17.5933 156.165 19.3933 156.165 cv
21.2183 156.165 23.0433 156.49 24.8933 157.09 cv
26.7433 157.69 28.5933 158.615 30.5183 159.815 cv
30.5183 161.765 li
28.6433 160.69 26.8183 159.89 24.9683 159.34 cv
23.1433 158.815 21.2933 158.54 19.3933 158.54 cv
17.5183 158.54 15.6683 158.815 13.8433 159.34 cv
12.0183 159.89 10.1683 160.69 8.26828 161.765 cv
f
2 lw
107.133 389.723 mo
107.133 380.056 li
@
136.265 214.355 mo
136.265 203.092 li
@
165.397 123.805 mo
165.397 119.459 li
@
194.529 89.5733 mo
194.529 87.6177 li
@
252.793 75.9597 mo
252.793 74.0041 li
@
383.887 56.4926 mo
383.887 54.537 li
@
529.546 47.7546 mo
529.546 45.1827 li
@
675.206 42.6129 mo
675.206 40.6573 li
@
819.866 34.7197 mo
819.866 32.7641 li
821.866 32.7641 li
821.866 34.7197 li
819.866 34.7197 li
f
2.8 lw
107.133 69.1555 mo
107.133 66.7068 li
/1 
[/DeviceCMYK] /CSA add_res
.801419 .109255 1 .0133364 cmyk
@
134.865 68.909 mo
134.865 66.9535 li
137.665 66.9535 li
137.665 68.909 li
134.865 68.909 li
f
165.397 68.9089 mo
165.397 66.9534 li
@
194.529 68.9089 mo
194.529 66.9534 li
@
252.793 68.9089 mo
252.793 66.9534 li
@
383.887 68.9089 mo
383.887 66.9534 li
@
529.546 68.9089 mo
529.546 66.9534 li
@
675.206 68.9089 mo
675.206 66.9534 li
@
820.866 68.9089 mo
820.866 66.9534 li
@
106.133 71.8605 mo
106.133 69.4119 li
108.133 69.4119 li
108.133 71.8605 li
106.133 71.8605 li
.847868 .481636 .0599985 .000640879 cmyk
f
135.265 69.175 mo
135.265 67.2195 li
137.265 67.2195 li
137.265 69.175 li
135.265 69.175 li
f
164.397 60.1287 mo
164.397 58.1732 li
166.397 58.1732 li
166.397 60.1287 li
164.397 60.1287 li
f
193.529 55.4568 mo
193.529 53.799 li
195.529 53.799 li
195.529 55.4568 li
193.529 55.4568 li
f
251.793 48.1117 mo
251.793 46.1559 li
253.793 46.1559 li
253.793 48.1117 li
251.793 48.1117 li
f
382.887 44.5197 mo
382.887 42.5641 li
384.887 42.5641 li
384.887 44.5197 li
382.887 44.5197 li
f
528.546 36.3161 mo
528.546 34.3605 li
530.546 34.3605 li
530.546 36.3161 li
528.546 36.3161 li
f
674.206 32.2807 mo
674.206 30.3252 li
676.206 30.3252 li
676.206 32.2807 li
674.206 32.2807 li
f
819.866 26.7821 mo
819.866 24.8266 li
821.866 24.8266 li
821.866 26.7821 li
819.866 26.7821 li
f
112.133 389.723 mo
102.133 389.723 li
1 /0 /CSD get_res sepcs
1 sep
f
1 lw
112.133 389.723 mo
102.133 389.723 li
@
141.265 214.355 mo
131.265 214.355 li
f
141.265 214.355 mo
131.265 214.355 li
@
170.397 123.805 mo
160.397 123.805 li
f
170.397 123.805 mo
160.397 123.805 li
@
199.529 89.5733 mo
189.529 89.5733 li
f
199.529 89.5733 mo
189.529 89.5733 li
@
257.793 75.9597 mo
247.793 75.9597 li
f
257.793 75.9597 mo
247.793 75.9597 li
@
388.887 56.4926 mo
378.887 56.4926 li
f
388.887 56.4926 mo
378.887 56.4926 li
@
534.546 47.7546 mo
524.546 47.7546 li
f
534.546 47.7546 mo
524.546 47.7546 li
@
680.206 42.6129 mo
670.206 42.6129 li
f
680.206 42.6129 mo
670.206 42.6129 li
@
825.866 34.7197 mo
815.866 34.7197 li
f
825.866 34.7197 mo
815.866 34.7197 li
@
112.133 380.056 mo
102.133 380.056 li
f
112.133 380.056 mo
102.133 380.056 li
@
141.265 203.092 mo
131.265 203.092 li
f
141.265 203.092 mo
131.265 203.092 li
@
170.397 119.459 mo
160.397 119.459 li
f
170.397 119.459 mo
160.397 119.459 li
@
199.529 87.6177 mo
189.529 87.6177 li
f
199.529 87.6177 mo
189.529 87.6177 li
@
257.793 74.0041 mo
247.793 74.0041 li
f
257.793 74.0041 mo
247.793 74.0041 li
@
388.887 54.537 mo
378.887 54.537 li
f
388.887 54.537 mo
378.887 54.537 li
@
534.546 45.1827 mo
524.546 45.1827 li
f
534.546 45.1827 mo
524.546 45.1827 li
@
680.206 40.6574 mo
670.206 40.6574 li
f
680.206 40.6574 mo
670.206 40.6574 li
@
825.866 32.7641 mo
815.866 32.7641 li
825.866 32.7641 li
f
825.866 33.2642 mo
815.866 33.2642 li
815.866 32.264 li
825.866 32.264 li
825.866 33.2642 li
f
112.133 71.8605 mo
102.133 71.8605 li
112.133 71.8605 li
.847868 .481636 .0599985 .000640879 cmyk
f
112.133 72.3606 mo
102.133 72.3606 li
102.133 71.3604 li
112.133 71.3604 li
112.133 72.3606 li
f
141.265 69.175 mo
131.265 69.175 li
141.265 69.175 li
f
141.265 69.6749 mo
131.265 69.6749 li
131.265 68.6749 li
141.265 68.6749 li
141.265 69.6749 li
f
170.397 60.1287 mo
160.397 60.1287 li
170.397 60.1287 li
f
170.397 60.6288 mo
160.397 60.6288 li
160.397 59.6289 li
170.397 59.6289 li
170.397 60.6288 li
f
199.529 55.4568 mo
189.529 55.4568 li
199.529 55.4568 li
f
199.529 55.9567 mo
189.529 55.9567 li
189.529 54.9567 li
199.529 54.9567 li
199.529 55.9567 li
f
257.793 48.1115 mo
247.793 48.1115 li
257.793 48.1115 li
f
257.793 48.6116 mo
247.793 48.6116 li
247.793 47.6116 li
257.793 47.6116 li
257.793 48.6116 li
f
388.887 44.5197 mo
378.886 44.5197 li
388.887 44.5197 li
f
388.887 45.0198 mo
378.886 45.0198 li
378.886 44.0198 li
388.887 44.0198 li
388.887 45.0198 li
f
534.546 36.3161 mo
524.546 36.3161 li
534.546 36.3161 li
f
534.546 36.8162 mo
524.546 36.8162 li
524.546 35.816 li
534.546 35.816 li
534.546 36.8162 li
f
680.206 32.2807 mo
670.206 32.2807 li
680.206 32.2807 li
f
680.206 32.7808 mo
670.206 32.7808 li
670.206 31.7809 li
680.206 31.7809 li
680.206 32.7808 li
f
825.866 26.7821 mo
815.866 26.7821 li
825.866 26.7821 li
f
825.866 27.2822 mo
815.866 27.2822 li
815.866 26.282 li
825.866 26.282 li
825.866 27.2822 li
f
112.133 69.4118 mo
102.133 69.4118 li
f
112.133 69.9118 mo
102.133 69.9118 li
102.133 68.9118 li
112.133 68.9118 li
112.133 69.9118 li
f
141.265 67.2195 mo
131.265 67.2195 li
141.265 67.2195 li
f
141.265 67.7194 mo
131.265 67.7194 li
131.265 66.7194 li
141.265 66.7194 li
141.265 67.7194 li
f
170.397 58.1732 mo
160.397 58.1732 li
170.397 58.1732 li
f
170.397 58.6733 mo
160.397 58.6733 li
160.397 57.6733 li
170.397 57.6733 li
170.397 58.6733 li
f
199.529 53.799 mo
189.529 53.799 li
199.529 53.799 li
f
199.529 54.2991 mo
189.529 54.2991 li
189.529 53.2992 li
199.529 53.2992 li
199.529 54.2991 li
f
257.793 46.1559 mo
247.793 46.1559 li
257.793 46.1559 li
f
257.793 46.656 mo
247.793 46.656 li
247.793 45.6561 li
257.793 45.6561 li
257.793 46.656 li
f
388.887 42.5641 mo
378.886 42.5641 li
388.887 42.5641 li
f
388.887 43.0642 mo
378.886 43.0642 li
378.886 42.0643 li
388.887 42.0643 li
388.887 43.0642 li
f
534.546 34.3605 mo
524.546 34.3605 li
534.546 34.3605 li
f
534.546 34.8607 mo
524.546 34.8607 li
524.546 33.8604 li
534.546 33.8604 li
534.546 34.8607 li
f
680.206 30.3252 mo
670.206 30.3252 li
680.206 30.3252 li
f
680.206 30.8253 mo
670.206 30.8253 li
670.206 29.8253 li
680.206 29.8253 li
680.206 30.8253 li
f
825.866 24.8266 mo
815.866 24.8266 li
825.866 24.8266 li
f
825.866 25.3267 mo
815.866 25.3267 li
815.866 24.3265 li
825.866 24.3265 li
825.866 25.3267 li
f
112.133 75.8192 mo
111.95 75.8192 li
112.133 75.6361 li
112.133 75.8192 li
111.609 75.8192 mo
109.651 75.8192 li
110.406 75.0642 li
110.801 75.0108 li
111.609 75.8192 li
104.615 75.8192 mo
102.657 75.8192 li
103.636 74.8404 li
104.615 75.8192 li
102.316 75.8192 mo
102.133 75.8192 li
102.133 75.6361 li
102.316 75.8192 li
102.133 74.9291 mo
102.133 74.8193 li
102.243 74.8193 li
102.133 74.9291 li
.0838026 .832731 .657679 .0052491 cmyk
f
112.133 74.9291 mo
112.046 74.8421 li
112.133 74.8303 li
112.133 74.9291 li
f
141.265 71.6261 mo
140.401 71.6261 li
139.715 70.9406 li
140.03 70.6262 li
141.265 70.6262 li
141.265 71.6261 li
132.217 71.5383 mo
132.093 70.6262 li
132.5 70.6262 li
132.815 70.9406 li
132.217 71.5383 li
f
170.397 61.5601 mo
168.513 61.5601 li
168.337 61.3844 li
168.59 61.1314 li
170.397 60.928 li
170.397 61.5601 li
f
199.529 58.2784 mo
198.886 58.2784 li
198.196 57.588 li
199.529 57.3577 li
199.529 58.2784 li
197.472 58.2784 mo
197.294 58.2784 li
197.383 58.1892 li
197.472 58.2784 li
191.764 58.2784 mo
191.585 58.2784 li
191.675 58.1892 li
191.764 58.2784 li
190.171 58.2784 mo
189.688 58.2784 li
189.591 57.4187 li
190.494 57.2785 li
190.764 57.2785 li
190.968 57.482 li
190.171 58.2784 li
f
387.673 48.0351 mo
386.651 48.0351 li
386.951 47.7353 li
387.344 47.7064 li
387.673 48.0351 li
381.122 48.0351 mo
380.1 48.0351 li
380.173 47.9623 li
381.048 47.9611 li
381.122 48.0351 li
388.887 47.8348 mo
388.661 47.6094 li
388.887 47.5928 li
388.887 47.8348 li
f
534.546 37.3039 mo
532.311 37.3039 li
532.354 37.2614 li
534.546 37.2006 li
534.546 37.3039 li
f
680.206 34.5989 mo
679.209 34.5989 li
678.59 33.9798 li
678.971 33.5987 li
680.206 33.5987 li
680.206 34.5989 li
671.203 34.5989 mo
671.028 34.5989 li
671.206 34.5956 li
671.203 34.5989 li
f
825.866 29.854 mo
825.623 29.854 li
824.627 28.858 li
824.63 28.854 li
825.866 28.854 li
825.866 29.854 li
824.208 29.854 mo
823.63 29.854 li
823.919 29.565 li
824.208 29.854 li
815.998 29.854 mo
815.866 29.854 li
815.866 29.3542 li
815.866 28.854 li
815.965 28.854 li
815.998 29.854 li
f
103.615 73.3707 mo
102.133 73.3707 li
102.133 72.8706 li
102.133 72.3707 li
104.615 72.3707 li
103.615 73.3707 li
f
160.397 58.6094 mo
160.397 58.6046 li
160.413 58.6046 li
160.397 58.6094 li
.22327 .911742 .704219 .110567 cmyk
f
248.604 45.6561 mo
247.793 45.6561 li
247.793 45.2569 li
250.028 45.2569 li
249.78 45.5049 li
248.604 45.6561 li
.0838026 .832731 .657679 .0052491 cmyk
f
247.793 45.7604 mo
247.793 45.6561 li
248.604 45.6561 li
247.793 45.7604 li
.22327 .911742 .704219 .110567 cmyk
f
825.866 27.8985 mo
824.63 27.8985 li
824.014 27.2822 li
825.866 27.2822 li
825.866 26.8985 li
825.866 27.8985 li
.0838026 .832731 .657679 .0052491 cmyk
f
825.866 27.2822 mo
824.014 27.2822 li
823.63 26.8985 li
825.866 26.8985 li
825.866 27.2822 li
.22327 .911742 .704219 .110567 cmyk
f
105.653 384.644 mo
134.785 208.479 li
134.842 208.248 li
163.974 121.156 li
164.038 120.967 164.14 120.789 164.272 120.64 cv
193.404 87.6034 li
193.611 87.3681 193.882 87.2063 194.187 87.1348 cv
252.451 73.5213 li
252.572 73.4982 li
383.666 54.0311 li
383.793 54.0176 li
529.453 44.9716 li
529.497 44.9696 li
675.14 40.1366 li
822.282 32.1628 li
822.445 35.1586 li
675.287 43.133 li
675.256 43.1342 li
529.618 47.9672 li
384.044 57.0079 li
253.074 76.4565 li
195.337 89.947 li
166.723 122.396 li
137.725 209.086 li
108.368 386.614 li
105.408 386.124 li
105.653 384.644 li
1 /0 /CSD get_res sepcs
1 sep
f
107.133 387.889 mo
107.929 387.889 108.692 387.573 109.254 387.01 cv
109.817 386.448 110.133 385.685 110.133 384.889 cv
110.133 384.093 109.817 383.33 109.254 382.768 cv
108.692 382.205 107.929 381.889 107.133 381.889 cv
106.337 381.889 105.574 382.205 105.012 382.768 cv
104.449 383.33 104.133 384.093 104.133 384.889 cv
104.133 385.685 104.449 386.448 105.012 387.01 cv
105.574 387.573 106.337 387.889 107.133 387.889 cv
cp
f
107.133 387.889 mo
107.929 387.889 108.692 387.573 109.254 387.01 cv
109.817 386.448 110.133 385.685 110.133 384.889 cv
110.133 384.093 109.817 383.33 109.254 382.768 cv
108.692 382.205 107.929 381.889 107.133 381.889 cv
106.337 381.889 105.574 382.205 105.012 382.768 cv
104.449 383.33 104.133 384.093 104.133 384.889 cv
104.133 385.685 104.449 386.448 105.012 387.01 cv
105.574 387.573 106.337 387.889 107.133 387.889 cv
cp
@
136.265 211.723 mo
137.061 211.723 137.824 211.407 138.386 210.845 cv
138.949 210.282 139.265 209.519 139.265 208.723 cv
139.265 207.928 138.949 207.165 138.386 206.602 cv
137.824 206.04 137.061 205.723 136.265 205.723 cv
135.469 205.723 134.706 206.04 134.144 206.602 cv
133.581 207.165 133.265 207.928 133.265 208.723 cv
133.265 209.519 133.581 210.282 134.144 210.845 cv
134.706 211.407 135.469 211.723 136.265 211.723 cv
cp
f
136.265 211.723 mo
137.061 211.723 137.824 211.407 138.386 210.845 cv
138.949 210.282 139.265 209.519 139.265 208.723 cv
139.265 207.928 138.949 207.165 138.386 206.602 cv
137.824 206.04 137.061 205.723 136.265 205.723 cv
135.469 205.723 134.706 206.04 134.144 206.602 cv
133.581 207.165 133.265 207.928 133.265 208.723 cv
133.265 209.519 133.581 210.282 134.144 210.845 cv
134.706 211.407 135.469 211.723 136.265 211.723 cv
cp
@
165.397 124.632 mo
166.193 124.632 166.956 124.316 167.518 123.753 cv
168.081 123.191 168.397 122.427 168.397 121.632 cv
168.397 120.836 168.081 120.073 167.518 119.51 cv
166.956 118.948 166.193 118.632 165.397 118.632 cv
164.601 118.632 163.838 118.948 163.276 119.51 cv
162.713 120.073 162.397 120.836 162.397 121.632 cv
162.397 122.427 162.713 123.191 163.276 123.753 cv
163.838 124.316 164.601 124.632 165.397 124.632 cv
cp
f
165.397 124.632 mo
166.193 124.632 166.956 124.316 167.518 123.753 cv
168.081 123.191 168.397 122.427 168.397 121.632 cv
168.397 120.836 168.081 120.073 167.518 119.51 cv
166.956 118.948 166.193 118.632 165.397 118.632 cv
164.601 118.632 163.838 118.948 163.276 119.51 cv
162.713 120.073 162.397 120.836 162.397 121.632 cv
162.397 122.427 162.713 123.191 163.276 123.753 cv
163.838 124.316 164.601 124.632 165.397 124.632 cv
cp
@
194.529 91.5955 mo
195.324 91.5955 196.088 91.2794 196.65 90.7168 cv
197.213 90.1542 197.529 89.3911 197.529 88.5955 cv
197.529 87.7999 197.213 87.0368 196.65 86.4742 cv
196.088 85.9116 195.324 85.5955 194.529 85.5955 cv
193.733 85.5955 192.97 85.9116 192.408 86.4742 cv
191.845 87.0368 191.529 87.7999 191.529 88.5955 cv
191.529 89.3911 191.845 90.1542 192.408 90.7168 cv
192.97 91.2794 193.733 91.5955 194.529 91.5955 cv
cp
f
194.529 91.5955 mo
195.324 91.5955 196.088 91.2794 196.65 90.7168 cv
197.213 90.1542 197.529 89.3911 197.529 88.5955 cv
197.529 87.7999 197.213 87.0368 196.65 86.4742 cv
196.088 85.9116 195.324 85.5955 194.529 85.5955 cv
193.733 85.5955 192.97 85.9116 192.408 86.4742 cv
191.845 87.0368 191.529 87.7999 191.529 88.5955 cv
191.529 89.3911 191.845 90.1542 192.408 90.7168 cv
192.97 91.2794 193.733 91.5955 194.529 91.5955 cv
cp
@
252.793 77.9819 mo
253.588 77.9819 254.352 77.6658 254.914 77.1032 cv
255.477 76.5406 255.793 75.7775 255.793 74.9819 cv
255.793 74.1863 255.477 73.4231 254.914 72.8605 cv
254.352 72.298 253.588 71.9819 252.793 71.9819 cv
251.997 71.9819 251.234 72.298 250.671 72.8605 cv
250.109 73.4231 249.793 74.1863 249.793 74.9819 cv
249.793 75.7775 250.109 76.5406 250.671 77.1032 cv
251.234 77.6658 251.997 77.9819 252.793 77.9819 cv
cp
f
252.793 77.9819 mo
253.588 77.9819 254.352 77.6658 254.914 77.1032 cv
255.477 76.5406 255.793 75.7775 255.793 74.9819 cv
255.793 74.1863 255.477 73.4231 254.914 72.8605 cv
254.352 72.298 253.588 71.9819 252.793 71.9819 cv
251.997 71.9819 251.234 72.298 250.671 72.8605 cv
250.109 73.4231 249.793 74.1863 249.793 74.9819 cv
249.793 75.7775 250.109 76.5406 250.671 77.1032 cv
251.234 77.6658 251.997 77.9819 252.793 77.9819 cv
cp
@
383.887 58.5148 mo
384.682 58.5148 385.445 58.1987 386.008 57.6362 cv
386.57 57.0736 386.887 56.3104 386.887 55.5148 cv
386.887 54.7192 386.57 53.9561 386.008 53.3935 cv
385.445 52.8309 384.682 52.5148 383.887 52.5148 cv
383.091 52.5148 382.328 52.8309 381.765 53.3935 cv
381.203 53.9561 380.887 54.7192 380.887 55.5148 cv
380.887 56.3104 381.203 57.0736 381.765 57.6362 cv
382.328 58.1987 383.091 58.5148 383.887 58.5148 cv
cp
f
383.887 58.5148 mo
384.682 58.5148 385.445 58.1987 386.008 57.6362 cv
386.57 57.0736 386.887 56.3104 386.887 55.5148 cv
386.887 54.7192 386.57 53.9561 386.008 53.3935 cv
385.445 52.8309 384.682 52.5148 383.887 52.5148 cv
383.091 52.5148 382.328 52.8309 381.765 53.3935 cv
381.203 53.9561 380.887 54.7192 380.887 55.5148 cv
380.887 56.3104 381.203 57.0736 381.765 57.6362 cv
382.328 58.1987 383.091 58.5148 383.887 58.5148 cv
cp
@
529.546 49.4687 mo
530.342 49.4687 531.105 49.1526 531.668 48.59 cv
532.23 48.0274 532.546 47.2643 532.546 46.4687 cv
532.546 45.673 532.23 44.9099 531.668 44.3473 cv
531.105 43.7848 530.342 43.4687 529.546 43.4687 cv
528.751 43.4687 527.988 43.7848 527.425 44.3473 cv
526.862 44.9099 526.546 45.673 526.546 46.4687 cv
526.546 47.2643 526.862 48.0274 527.425 48.59 cv
527.988 49.1526 528.751 49.4687 529.546 49.4687 cv
cp
f
529.546 49.4687 mo
530.342 49.4687 531.105 49.1526 531.668 48.59 cv
532.23 48.0274 532.546 47.2643 532.546 46.4687 cv
532.546 45.673 532.23 44.9099 531.668 44.3473 cv
531.105 43.7848 530.342 43.4687 529.546 43.4687 cv
528.751 43.4687 527.988 43.7848 527.425 44.3473 cv
526.862 44.9099 526.546 45.673 526.546 46.4687 cv
526.546 47.2643 526.862 48.0274 527.425 48.59 cv
527.988 49.1526 528.751 49.4687 529.546 49.4687 cv
cp
@
675.206 44.6352 mo
676.002 44.6352 676.765 44.3191 677.327 43.7565 cv
677.89 43.1939 678.206 42.4308 678.206 41.6352 cv
678.206 40.8396 677.89 40.0764 677.327 39.5138 cv
676.765 38.9513 676.002 38.6352 675.206 38.6352 cv
674.41 38.6352 673.647 38.9513 673.085 39.5138 cv
672.522 40.0764 672.206 40.8396 672.206 41.6352 cv
672.206 42.4308 672.522 43.1939 673.085 43.7565 cv
673.647 44.3191 674.41 44.6352 675.206 44.6352 cv
cp
f
675.206 44.6352 mo
676.002 44.6352 676.765 44.3191 677.327 43.7565 cv
677.89 43.1939 678.206 42.4308 678.206 41.6352 cv
678.206 40.8396 677.89 40.0764 677.327 39.5138 cv
676.765 38.9513 676.002 38.6352 675.206 38.6352 cv
674.41 38.6352 673.647 38.9513 673.085 39.5138 cv
672.522 40.0764 672.206 40.8396 672.206 41.6352 cv
672.206 42.4308 672.522 43.1939 673.085 43.7565 cv
673.647 44.3191 674.41 44.6352 675.206 44.6352 cv
cp
@
820.866 36.7419 mo
821.661 36.7419 822.424 36.4259 822.987 35.8632 cv
823.55 35.3007 823.866 34.5376 823.866 33.742 cv
823.866 32.9462 823.55 32.1831 822.987 31.6206 cv
822.424 31.0581 821.661 30.7419 820.866 30.7419 cv
820.07 30.7419 819.307 31.0581 818.744 31.6206 cv
818.182 32.1831 817.866 32.9462 817.866 33.742 cv
817.866 34.5376 818.182 35.3007 818.744 35.8632 cv
819.307 36.4259 820.07 36.7419 820.866 36.7419 cv
f
820.866 36.7419 mo
820.866 36.242 li
821.529 36.242 822.165 35.9785 822.634 35.5096 cv
823.102 35.041 823.366 34.4049 823.366 33.742 cv
823.366 33.0788 823.102 32.443 822.634 31.9741 cv
822.165 31.5052 821.529 31.242 820.866 31.242 cv
820.203 31.242 819.567 31.5052 819.098 31.9741 cv
819.098 31.9741 li
818.629 32.443 818.366 33.0788 818.366 33.742 cv
818.366 34.4049 818.629 35.041 819.098 35.5096 cv
819.098 35.5096 li
819.567 35.9785 820.203 36.242 820.866 36.242 cv
820.866 36.7419 li
820.866 37.242 li
819.938 37.242 819.047 36.8733 818.391 36.2167 cv
817.734 35.5603 817.366 34.6702 817.366 33.742 cv
817.366 32.8136 817.734 31.9234 818.391 31.2671 cv
819.047 30.6108 819.938 30.242 820.866 30.242 cv
821.794 30.242 822.684 30.6108 823.341 31.2671 cv
823.997 31.9234 824.366 32.8136 824.366 33.742 cv
824.366 34.6702 823.997 35.5603 823.341 36.2167 cv
822.684 36.8733 821.794 37.242 820.866 37.242 cv
820.866 36.7419 li
f
107.133 66.5312 mo
136.265 66.5312 li
165.397 66.5312 li
194.529 66.5312 li
252.793 66.5312 li
383.887 66.5312 li
529.546 66.5312 li
675.206 66.5312 li
822.266 66.5312 li
822.266 69.3313 li
675.206 69.3313 li
529.546 69.3313 li
383.887 69.3313 li
252.793 69.3313 li
194.529 69.3313 li
165.397 69.3313 li
136.265 69.3313 li
105.733 69.3313 li
105.733 66.5312 li
107.133 66.5312 li
.801419 .109255 1 .0133364 cmyk
f
gsave
99.633 75.4312 mo
114.633 75.4312 li
114.633 60.431 li
99.633 60.431 li
99.633 75.4312 li
clp
104.633 70.4311 mo
109.633 70.4311 li
109.633 65.4311 li
104.633 65.4311 li
104.633 70.4311 li
f
104.633 70.4311 mo
104.633 69.931 li
109.133 69.931 li
109.133 65.9312 li
105.133 65.9312 li
105.133 70.4311 li
104.633 70.4311 li
104.633 69.931 li
104.633 70.4311 li
104.133 70.4311 li
104.133 64.9312 li
110.133 64.9312 li
110.133 70.9313 li
104.133 70.9313 li
104.133 70.4311 li
104.633 70.4311 li
f
grestore
gsave
128.765 75.4312 mo
143.765 75.4312 li
143.765 60.431 li
128.765 60.431 li
128.765 75.4312 li
clp
133.765 70.4311 mo
138.765 70.4311 li
138.765 65.4311 li
133.765 65.4311 li
133.765 70.4311 li
f
133.765 70.4311 mo
133.765 69.931 li
138.265 69.931 li
138.265 65.9312 li
134.265 65.9312 li
134.265 70.4311 li
133.765 70.4311 li
133.765 69.931 li
133.765 70.4311 li
133.265 70.4311 li
133.265 64.9312 li
139.265 64.9312 li
139.265 70.9313 li
133.265 70.9313 li
133.265 70.4311 li
133.765 70.4311 li
f
grestore
gsave
157.897 75.4312 mo
172.897 75.4312 li
172.897 60.431 li
157.897 60.431 li
157.897 75.4312 li
clp
162.897 70.4311 mo
167.897 70.4311 li
167.897 65.4311 li
162.897 65.4311 li
162.897 70.4311 li
f
162.897 70.4311 mo
162.897 69.931 li
167.397 69.931 li
167.397 65.9312 li
163.397 65.9312 li
163.397 70.4311 li
162.897 70.4311 li
162.897 69.931 li
162.897 70.4311 li
162.397 70.4311 li
162.397 64.9312 li
168.397 64.9312 li
168.397 70.9313 li
162.397 70.9313 li
162.397 70.4311 li
162.897 70.4311 li
f
grestore
gsave
187.029 75.4312 mo
202.029 75.4312 li
202.029 60.431 li
187.029 60.431 li
187.029 75.4312 li
clp
192.029 70.4312 mo
197.029 70.4312 li
197.029 65.4312 li
192.029 65.4312 li
cp
f
0 lj
192.029 70.4312 mo
197.029 70.4312 li
197.029 65.4312 li
192.029 65.4312 li
cp
@
grestore
gsave
245.293 75.4312 mo
260.293 75.4312 li
260.293 60.431 li
245.293 60.431 li
245.293 75.4312 li
clp
250.293 70.4312 mo
255.293 70.4312 li
255.293 65.4312 li
250.293 65.4312 li
cp
f
0 lj
250.293 70.4312 mo
255.293 70.4312 li
255.293 65.4312 li
250.293 65.4312 li
cp
@
grestore
gsave
376.386 75.4312 mo
391.387 75.4312 li
391.387 60.431 li
376.386 60.431 li
376.386 75.4312 li
clp
381.387 70.4312 mo
386.387 70.4312 li
386.387 65.4312 li
381.387 65.4312 li
cp
f
0 lj
381.387 70.4312 mo
386.387 70.4312 li
386.387 65.4312 li
381.387 65.4312 li
cp
@
grestore
gsave
522.046 75.4312 mo
537.046 75.4312 li
537.046 60.431 li
522.046 60.431 li
522.046 75.4312 li
clp
527.046 70.4312 mo
532.046 70.4312 li
532.046 65.4312 li
527.046 65.4312 li
cp
f
0 lj
527.046 70.4312 mo
532.046 70.4312 li
532.046 65.4312 li
527.046 65.4312 li
cp
@
grestore
gsave
667.706 75.4312 mo
682.706 75.4312 li
682.706 60.431 li
667.706 60.431 li
667.706 75.4312 li
clp
672.706 70.4312 mo
677.706 70.4312 li
677.706 65.4312 li
672.706 65.4312 li
cp
f
0 lj
672.706 70.4312 mo
677.706 70.4312 li
677.706 65.4312 li
672.706 65.4312 li
cp
@
grestore
gsave
813.366 75.4312 mo
828.366 75.4312 li
828.366 60.431 li
813.366 60.431 li
813.366 75.4312 li
clp
818.366 70.4312 mo
823.366 70.4312 li
823.366 65.4312 li
818.366 65.4312 li
cp
f
0 lj
818.366 70.4312 mo
823.366 70.4312 li
823.366 65.4312 li
818.366 65.4312 li
cp
@
grestore
106.966 68.643 mo
135.881 66.2223 li
164.804 57.241 li
165.09 57.1748 li
194.222 52.6517 li
194.274 52.6444 li
252.538 45.1501 li
252.738 45.1347 li
383.802 41.5436 li
529.434 33.3416 li
529.491 33.339 li
675.14 29.3039 li
822.789 23.7302 li
822.94 27.7275 li
675.282 33.3015 li
675.262 33.3023 li
529.63 37.3368 li
383.999 45.5387 li
383.941 45.5412 li
252.949 49.1302 li
194.811 56.6082 li
165.85 61.1049 li
136.858 70.1073 li
136.72 70.1502 136.576 70.1783 136.432 70.1902 cv
105.307 72.796 li
104.973 68.8099 li
106.966 68.643 li
.847868 .481636 .0599985 .000640879 cmyk
f
102.133 75.6361 mo
112.133 65.6363 li
102.133 75.6361 li
102.133 65.6363 mo
112.133 75.6361 li
102.133 65.6363 li
f
101.78 75.2826 mo
111.78 65.2825 li
112.487 65.9898 li
102.487 75.9896 li
101.78 75.2826 li
102.487 65.2825 mo
112.487 75.2826 li
111.78 75.9896 li
101.78 65.9898 li
102.487 65.2825 li
f
131.265 73.1972 mo
141.265 63.1971 li
131.265 73.1972 li
131.265 63.1971 mo
141.265 73.1972 li
131.265 63.1971 li
f
130.911 72.8437 mo
140.911 62.8436 li
141.618 63.5509 li
131.619 73.5507 li
130.911 72.8437 li
131.619 62.8436 mo
141.618 72.8437 li
140.911 73.5507 li
130.911 63.5509 li
131.619 62.8436 li
f
160.397 64.1512 mo
170.397 54.151 li
160.397 64.1512 li
160.397 54.151 mo
170.397 64.1512 li
160.397 54.151 li
f
160.044 63.7974 mo
170.043 53.7975 li
170.75 54.5046 li
160.751 64.5047 li
160.044 63.7974 li
160.751 53.7975 mo
170.75 63.7974 li
170.043 64.5047 li
160.044 54.5046 li
160.751 53.7975 li
f
189.529 59.6279 mo
199.529 49.628 li
189.529 59.6279 li
189.529 49.628 mo
199.529 59.6279 li
189.529 49.628 li
f
189.175 59.2743 mo
199.175 49.2745 li
199.882 49.9815 li
189.883 59.9814 li
189.175 59.2743 li
189.883 49.2745 mo
199.882 59.2743 li
199.175 59.9814 li
189.175 49.9815 li
189.883 49.2745 li
f
247.793 52.1339 mo
257.793 42.1338 li
247.793 52.1339 li
247.793 42.1338 mo
257.793 52.1339 li
247.793 42.1338 li
f
247.439 51.7803 mo
257.439 41.7802 li
258.146 42.4873 li
248.146 52.4874 li
247.439 51.7803 li
248.146 41.7802 mo
258.146 51.7803 li
257.439 52.4874 li
247.439 42.4873 li
248.146 41.7802 li
f
378.886 48.5418 mo
388.887 38.542 li
378.886 48.5418 li
378.886 38.542 mo
388.887 48.5418 li
378.886 38.542 li
f
378.533 48.1883 mo
388.533 38.1884 li
389.24 38.8955 li
379.24 48.8956 li
378.533 48.1883 li
379.24 38.1884 mo
389.24 48.1883 li
388.533 48.8956 li
378.533 38.8955 li
379.24 38.1884 li
f
524.546 40.3382 mo
534.546 30.3384 li
524.546 40.3382 li
524.546 30.3384 mo
534.546 40.3382 li
524.546 30.3384 li
f
524.193 39.9847 mo
534.193 29.9846 li
534.9 30.6919 li
524.9 40.6918 li
524.193 39.9847 li
524.9 29.9846 mo
534.9 39.9847 li
534.193 40.6918 li
524.193 30.6919 li
524.9 29.9846 li
f
670.206 36.3029 mo
680.206 26.303 li
670.206 36.3029 li
670.206 26.303 mo
680.206 36.3029 li
670.206 26.303 li
f
669.852 35.9494 mo
679.852 25.9495 li
680.56 26.6566 li
670.56 36.6564 li
669.852 35.9494 li
670.56 25.9495 mo
680.56 35.9494 li
679.852 36.6564 li
669.852 26.6566 li
670.56 25.9495 li
f
815.866 30.8043 mo
825.866 20.8044 li
815.866 30.8043 li
815.866 20.8044 mo
825.866 30.8043 li
815.866 20.8044 li
f
815.512 30.4507 mo
825.512 20.4509 li
826.219 21.1579 li
816.219 31.1578 li
815.512 30.4507 li
816.219 20.4509 mo
826.219 30.4507 li
825.512 31.1578 li
815.512 21.1579 li
816.219 20.4509 li
f
110.406 75.0642 mo
110.63 74.8403 li
110.801 75.0108 li
110.406 75.0642 li
.0967422 .957885 .907469 .0132448 cmyk
f
112.133 74.8303 mo
112.133 74.8193 li
112.023 74.8193 li
111.337 74.1333 li
111.376 74.095 li
110.651 73.3707 li
112.133 73.3707 li
112.133 72.3707 li
110.387 72.3707 li
110.508 72.3606 li
112.133 72.3606 li
112.133 72.2245 li
117.276 71.794 li
117.587 74.0914 li
112.133 74.8303 li
.0798047 .829038 .658839 .00482185 cmyk
f
112.133 72.3606 mo
110.508 72.3606 li
112.133 72.2245 li
112.133 72.3606 li
.22327 .911742 .704219 .110567 cmyk
f
112.046 74.8421 mo
112.023 74.8193 li
112.133 74.8193 li
112.133 74.8303 li
112.046 74.8421 li
.0967422 .957885 .907469 .0132448 cmyk
f
112.133 73.3707 mo
110.651 73.3707 li
109.708 72.4275 li
110.387 72.3707 li
112.133 72.3707 li
112.133 73.3707 li
f
109.708 72.4275 mo
109.625 72.3446 li
117.211 71.3167 li
117.276 71.794 li
112.133 72.2245 li
110.508 72.3606 li
110.387 72.3707 li
109.708 72.4275 li
.22327 .911742 .704219 .110567 cmyk
f
110.801 75.0108 mo
110.63 74.8403 li
111.337 74.1333 li
112.023 74.8193 li
112.046 74.8421 li
110.801 75.0108 li
f
122.027 73.4901 mo
121.746 71.4197 li
132.084 70.5543 li
132.093 70.6262 li
131.265 70.6262 li
131.265 71.126 li
131.265 71.6261 li
132.129 71.6261 li
131.556 72.1992 li
122.027 73.4901 li
.0798047 .829038 .658839 .00482185 cmyk
f
132.129 71.6261 mo
131.265 71.6261 li
131.265 71.126 li
131.265 70.6262 li
132.093 70.6262 li
132.217 71.5383 li
132.129 71.6261 li
.0967422 .957885 .907469 .0132448 cmyk
f
121.746 71.4197 mo
121.651 70.7154 li
131.917 69.3247 li
132.028 70.1428 li
132.022 70.1484 li
132.03 70.1557 li
132.084 70.5543 li
121.746 71.4197 li
.22327 .911742 .704219 .110567 cmyk
f
131.556 72.1992 mo
132.129 71.6261 li
132.217 71.5383 li
132.293 72.0994 li
131.556 72.1992 li
f
140.484 70.1717 mo
140.508 70.1484 li
140.034 69.6749 li
141.265 69.6749 li
141.265 69.6706 li
141.265 69.3313 li
142.916 69.3313 li
140.484 70.1717 li
.0798047 .829038 .658839 .00482185 cmyk
f
141.265 69.6749 mo
140.034 69.6749 li
140.03 69.6706 li
141.265 69.6706 li
141.265 69.6749 li
.22327 .911742 .704219 .110567 cmyk
f
141.265 69.6706 mo
140.03 69.6706 li
139.691 69.3313 li
141.265 69.3313 li
141.265 69.6706 li
.123568 .976806 .924315 .0278935 cmyk
f
142.916 69.3313 mo
141.265 69.3313 li
139.691 69.3313 li
139.612 69.2523 li
146.478 67.1201 li
146.781 67.996 li
142.916 69.3313 li
.210452 .874205 .966308 .112734 cmyk
f
139.612 69.2523 mo
138.317 67.958 li
145.866 65.3497 li
146.478 67.1201 li
139.612 69.2523 li
.22327 .911742 .704219 .110567 cmyk
f
151.02 66.5312 mo
151.014 66.5312 li
150.759 65.7909 li
160.657 62.7171 li
160.777 63.0637 li
160.631 63.2103 li
151.02 66.5312 li
.0798047 .829038 .658839 .00482185 cmyk
f
151.015 66.533 mo
151.014 66.5312 li
151.02 66.5312 li
151.015 66.533 li
.210452 .874205 .966308 .112734 cmyk
f
150.759 65.7909 mo
150.1 63.8864 li
159.892 60.5031 li
160.657 62.7171 li
150.759 65.7909 li
.22327 .911742 .704219 .110567 cmyk
f
160.631 63.2103 mo
160.777 63.0637 li
160.807 63.1494 li
160.631 63.2103 li
f
170.397 60.928 mo
170.397 60.5601 li
170.397 60.3988 li
174.914 59.6975 li
174.994 60.4102 li
170.397 60.928 li
.0798047 .829038 .658839 .00482185 cmyk
f
170.397 60.5601 mo
169.358 60.5601 li
170.397 60.3988 li
170.397 60.5601 li
.22327 .911742 .704219 .110567 cmyk
f
168.59 61.1314 mo
169.093 60.6288 li
170.397 60.6288 li
170.397 60.5601 li
170.397 60.928 li
168.59 61.1314 li
.0967422 .957885 .907469 .0132448 cmyk
f
170.397 60.6288 mo
169.093 60.6288 li
169.126 60.5962 li
169.358 60.5601 li
170.397 60.5601 li
170.397 60.6288 li
.123568 .976806 .924315 .0278935 cmyk
f
169.126 60.5962 mo
169.64 60.0823 li
167.944 58.3865 li
174.681 57.6277 li
174.914 59.6975 li
170.397 60.3988 li
169.358 60.5601 li
169.126 60.5962 li
.22327 .911742 .704219 .110567 cmyk
f
179.446 59.9086 mo
179.344 59.0096 li
189.529 57.4283 li
189.529 57.7786 li
189.529 58.2784 li
189.688 58.2784 li
189.736 58.7131 li
189.695 58.7542 li
179.446 59.9086 li
.0798047 .829038 .658839 .00482185 cmyk
f
189.688 58.2784 mo
189.529 58.2784 li
189.529 57.7786 li
189.529 57.4283 li
189.591 57.4187 li
189.688 58.2784 li
.0967422 .957885 .907469 .0132448 cmyk
f
179.344 59.0096 mo
179.132 57.1263 li
189.427 55.9666 li
189.591 57.4187 li
189.529 57.4283 li
179.344 59.0096 li
.22327 .911742 .704219 .110567 cmyk
f
189.695 58.7542 mo
189.736 58.7131 li
189.741 58.7491 li
189.695 58.7542 li
f
199.529 57.3577 mo
199.529 57.2785 li
198.294 57.2785 li
198.772 56.8007 li
198.294 56.3229 li
199.529 56.3229 li
199.529 56.0013 li
204.295 55.3883 li
204.487 56.5012 li
199.529 57.3577 li
.0798047 .829038 .658839 .00482185 cmyk
f
198.196 57.588 mo
198.09 57.4821 li
198.294 57.2785 li
199.529 57.2785 li
199.529 57.3577 li
198.196 57.588 li
.0967422 .957885 .907469 .0132448 cmyk
f
199.529 56.3229 mo
198.294 56.3229 li
198.15 56.1787 li
199.529 56.0013 li
199.529 56.3229 li
f
198.15 56.1787 mo
196.935 54.9643 li
204.01 53.742 li
204.295 55.3883 li
199.529 56.0013 li
198.15 56.1787 li
.22327 .911742 .704219 .110567 cmyk
f
197.94 57.6322 mo
198.09 57.4821 li
198.196 57.588 li
197.94 57.6322 li
f
208.902 55.7383 mo
208.779 55.028 li
213.014 55.028 li
208.902 55.7383 li
217.645 54.2279 mo
213.316 54.2279 li
219.027 53.4933 li
219.11 53.9748 li
217.645 54.2279 li
.0798047 .829038 .658839 .00482185 cmyk
f
213.014 55.028 mo
208.779 55.028 li
208.742 54.8162 li
213.316 54.2279 li
217.645 54.2279 li
213.014 55.028 li
.134035 .883726 .7626 .0277409 cmyk
f
208.742 54.8162 mo
208.425 52.9794 li
218.634 51.2156 li
219.027 53.4933 li
213.316 54.2279 li
208.742 54.8162 li
.22327 .911742 .704219 .110567 cmyk
f
223.525 53.2119 mo
223.475 52.9213 li
230.255 52.0491 li
223.525 53.2119 li
.0798047 .829038 .658839 .00482185 cmyk
f
223.475 52.9213 mo
223.048 50.4527 li
233.257 48.6892 li
233.734 51.4481 li
230.255 52.0491 li
223.475 52.9213 li
238.148 50.6855 mo
237.672 47.9263 li
247.88 46.1628 li
248.357 48.9217 li
238.148 50.6855 li
255.639 48.1309 mo
257.035 46.7346 li
255.632 45.3309 li
262.888 45.3211 li
262.891 48.1211 li
255.639 48.1309 li
.22327 .911742 .704219 .110567 cmyk
f
267.371 48.115 mo
267.368 45.315 li
277.728 45.301 li
277.731 48.1011 li
267.371 48.115 li
f
291.181 48.0827 mo
292.571 48.0446 li
292.571 48.0808 li
291.181 48.0827 li
.0798047 .829038 .658839 .00482185 cmyk
f
282.211 48.095 mo
282.208 45.2949 li
292.568 45.281 li
292.571 48.0446 li
291.181 48.0827 li
282.211 48.095 li
.22327 .911742 .704219 .110567 cmyk
f
297.051 48.0749 mo
297.051 47.9218 li
307.411 47.638 li
307.411 48.0607 li
297.051 48.0749 li
.0798047 .829038 .658839 .00482185 cmyk
f
297.051 47.9218 mo
297.047 45.2749 li
307.407 45.261 li
307.411 47.638 li
297.051 47.9218 li
.22327 .911742 .704219 .110567 cmyk
f
311.891 48.0547 mo
311.891 47.5153 li
322.25 47.2314 li
322.251 48.0407 li
311.891 48.0547 li
.0798047 .829038 .658839 .00482185 cmyk
f
311.891 47.5153 mo
311.888 45.2549 li
322.248 45.2407 li
322.25 47.2314 li
311.891 47.5153 li
.22327 .911742 .704219 .110567 cmyk
f
326.731 48.0346 mo
326.73 47.1087 li
337.09 46.8248 li
337.091 48.0207 li
326.731 48.0346 li
.0798047 .829038 .658839 .00482185 cmyk
f
326.73 47.1087 mo
326.728 45.2346 li
337.087 45.2206 li
337.09 46.8248 li
326.73 47.1087 li
.22327 .911742 .704219 .110567 cmyk
f
341.571 48.0146 mo
341.569 46.7021 li
351.929 46.4183 li
351.931 48.0006 li
341.571 48.0146 li
.0798047 .829038 .658839 .00482185 cmyk
f
341.569 46.7021 mo
341.567 45.2145 li
351.928 45.2006 li
351.929 46.4183 li
341.569 46.7021 li
.22327 .911742 .704219 .110567 cmyk
f
356.411 47.9945 mo
356.409 46.2955 li
366.769 46.0117 li
366.771 47.9806 li
356.411 47.9945 li
.0798047 .829038 .658839 .00482185 cmyk
f
356.409 46.2955 mo
356.408 45.1945 li
366.768 45.1806 li
366.769 46.0117 li
356.409 46.2955 li
.22327 .911742 .704219 .110567 cmyk
f
371.251 47.9745 mo
371.248 45.889 li
378.886 45.6797 li
378.886 46.0796 li
380.122 46.0796 li
379.644 46.5574 li
379.904 46.8173 li
379.686 47.0352 li
378.886 47.0352 li
378.886 47.535 li
378.886 47.8348 li
378.757 47.9642 li
371.251 47.9745 li
.0798047 .829038 .658839 .00482185 cmyk
f
378.886 47.8348 mo
378.886 47.535 li
378.886 47.0352 li
379.686 47.0352 li
378.886 47.8348 li
.0967422 .957885 .907469 .0132448 cmyk
f
380.122 46.0796 mo
378.886 46.0796 li
378.886 45.6797 li
380.568 45.6336 li
380.122 46.0796 li
f
371.248 45.889 mo
371.247 45.1745 li
381.04 45.1613 li
380.568 45.6336 li
378.886 45.6797 li
371.248 45.889 li
.22327 .911742 .704219 .110567 cmyk
f
380.173 47.9623 mo
380.611 47.5245 li
381.048 47.9611 li
380.173 47.9623 li
.0967422 .957885 .907469 .0132448 cmyk
f
378.757 47.9642 mo
378.886 47.8348 li
379.686 47.0352 li
379.904 46.8173 li
380.611 47.5245 li
380.173 47.9623 li
378.757 47.9642 li
.22327 .911742 .704219 .110567 cmyk
f
386.951 47.7353 mo
387.162 47.5245 li
387.344 47.7064 li
386.951 47.7353 li
.0967422 .957885 .907469 .0132448 cmyk
f
388.887 47.5928 mo
388.887 47.0352 li
388.087 47.0352 li
387.869 46.8173 li
388.129 46.5574 li
387.651 46.0796 li
388.887 46.0796 li
388.887 45.2634 li
396.357 44.8426 li
396.518 47.0306 li
388.887 47.5928 li
.0798047 .829038 .658839 .00482185 cmyk
f
388.661 47.6094 mo
388.087 47.0352 li
388.887 47.0352 li
388.887 47.5928 li
388.661 47.6094 li
.0967422 .957885 .907469 .0132448 cmyk
f
388.887 46.0796 mo
387.651 46.0796 li
386.945 45.3728 li
388.887 45.2634 li
388.887 46.0796 li
f
386.945 45.3728 mo
386.531 44.9587 li
396.313 44.2382 li
396.357 44.8426 li
388.887 45.2634 li
386.945 45.3728 li
.22327 .911742 .704219 .110567 cmyk
f
387.344 47.7064 mo
387.162 47.5245 li
387.869 46.8173 li
388.087 47.0352 li
388.661 47.6094 li
387.344 47.7064 li
f
400.986 46.7014 mo
400.831 44.5907 li
411.176 44.0081 li
411.318 45.9401 li
400.986 46.7014 li
.0798047 .829038 .658839 .00482185 cmyk
f
400.831 44.5907 mo
400.78 43.909 li
411.112 43.1477 li
411.176 44.0081 li
400.831 44.5907 li
.22327 .911742 .704219 .110567 cmyk
f
415.786 45.6109 mo
415.65 43.7561 li
425.995 43.1735 li
426.118 44.8499 li
415.786 45.6109 li
.0798047 .829038 .658839 .00482185 cmyk
f
415.65 43.7561 mo
415.58 42.8185 li
425.912 42.0574 li
425.995 43.1735 li
415.65 43.7561 li
.22327 .911742 .704219 .110567 cmyk
f
430.586 44.5207 mo
430.468 42.9215 li
440.813 42.3389 li
440.918 43.7594 li
430.586 44.5207 li
.0798047 .829038 .658839 .00482185 cmyk
f
430.468 42.9215 mo
430.38 41.7282 li
440.712 40.9669 li
440.813 42.3389 li
430.468 42.9215 li
.22327 .911742 .704219 .110567 cmyk
f
445.386 43.4302 mo
445.287 42.087 li
455.632 41.5043 li
455.718 42.6691 li
445.386 43.4302 li
.0798047 .829038 .658839 .00482185 cmyk
f
445.287 42.087 mo
445.18 40.6378 li
455.512 39.8767 li
455.632 41.5043 li
445.287 42.087 li
.22327 .911742 .704219 .110567 cmyk
f
460.186 42.3399 mo
460.106 41.2524 li
470.451 40.6698 li
470.518 41.5786 li
460.186 42.3399 li
.0798047 .829038 .658839 .00482185 cmyk
f
460.106 41.2524 mo
459.98 39.5475 li
470.312 38.7862 li
470.451 40.6698 li
460.106 41.2524 li
.22327 .911742 .704219 .110567 cmyk
f
474.986 41.2494 mo
474.924 40.4178 li
485.269 39.8352 li
485.317 40.4884 li
474.986 41.2494 li
.0798047 .829038 .658839 .00482185 cmyk
f
474.924 40.4178 mo
474.78 38.457 li
485.112 37.6959 li
485.269 39.8352 li
474.924 40.4178 li
.22327 .911742 .704219 .110567 cmyk
f
489.785 40.1592 mo
489.743 39.5832 li
500.088 39.0006 li
500.118 39.3979 li
489.785 40.1592 li
.0798047 .829038 .658839 .00482185 cmyk
f
489.743 39.5832 mo
489.58 37.3668 li
499.912 36.6054 li
500.088 39.0006 li
489.743 39.5832 li
.22327 .911742 .704219 .110567 cmyk
f
504.585 39.0687 mo
504.562 38.7487 li
514.907 38.166 li
514.917 38.3076 li
504.585 39.0687 li
.0798047 .829038 .658839 .00482185 cmyk
f
504.562 38.7487 mo
504.38 36.2763 li
514.712 35.5152 li
514.907 38.166 li
504.562 38.7487 li
.22327 .911742 .704219 .110567 cmyk
f
519.385 37.9785 mo
519.381 37.9141 li
523.11 37.704 li
519.385 37.9785 li
.0798047 .829038 .658839 .00482185 cmyk
f
519.381 37.9141 mo
519.18 35.186 li
526.482 34.648 li
525.304 35.8261 li
526.828 37.3499 li
526.741 37.4365 li
523.11 37.704 li
519.381 37.9141 li
.22327 .911742 .704219 .110567 cmyk
f
526.741 37.4365 mo
526.828 37.3499 li
526.902 37.4246 li
526.741 37.4365 li
f
541.898 36.997 mo
544.477 36.9255 li
544.478 36.9491 li
541.898 36.997 li
.0798047 .829038 .658839 .00482185 cmyk
f
534.12 37.1413 mo
534.068 34.3418 li
544.426 34.1495 li
544.477 36.9255 li
541.898 36.997 li
534.12 37.1413 li
.22327 .911742 .704219 .110567 cmyk
f
548.957 36.8659 mo
548.956 36.8014 li
559.313 36.5145 li
559.316 36.6734 li
548.957 36.8659 li
.0798047 .829038 .658839 .00482185 cmyk
f
548.956 36.8014 mo
548.905 34.0664 li
559.264 33.8739 li
559.313 36.5145 li
548.956 36.8014 li
.22327 .911742 .704219 .110567 cmyk
f
563.795 36.5902 mo
563.791 36.3904 li
574.147 36.1035 li
574.153 36.398 li
563.795 36.5902 li
.0798047 .829038 .658839 .00482185 cmyk
f
563.791 36.3904 mo
563.743 33.7907 li
574.101 33.5985 li
574.147 36.1035 li
563.791 36.3904 li
.22327 .911742 .704219 .110567 cmyk
f
578.632 36.3148 mo
578.626 35.9795 li
588.982 35.6925 li
588.99 36.1223 li
578.632 36.3148 li
.0798047 .829038 .658839 .00482185 cmyk
f
578.626 35.9795 mo
578.58 33.5153 li
588.938 33.3228 li
588.982 35.6925 li
578.626 35.9795 li
.22327 .911742 .704219 .110567 cmyk
f
593.47 36.0392 mo
593.461 35.5685 li
603.817 35.2815 li
603.828 35.8469 li
593.47 36.0392 li
.0798047 .829038 .658839 .00482185 cmyk
f
593.461 35.5685 mo
593.418 33.2396 li
603.776 33.0474 li
603.817 35.2815 li
593.461 35.5685 li
.22327 .911742 .704219 .110567 cmyk
f
608.307 35.7637 mo
608.296 35.1575 li
618.652 34.8706 li
618.665 35.5713 li
608.307 35.7637 li
.0798047 .829038 .658839 .00482185 cmyk
f
608.296 35.1575 mo
608.255 32.9642 li
618.613 32.7717 li
618.652 34.8706 li
608.296 35.1575 li
.22327 .911742 .704219 .110567 cmyk
f
623.144 35.4881 mo
623.131 34.7465 li
633.487 34.4596 li
633.503 35.2958 li
623.144 35.4881 li
.0798047 .829038 .658839 .00482185 cmyk
f
623.131 34.7465 mo
623.092 32.6885 li
633.451 32.4963 li
633.487 34.4596 li
623.131 34.7465 li
.22327 .911742 .704219 .110567 cmyk
f
637.982 35.2127 mo
637.966 34.3355 li
648.322 34.0486 li
648.34 35.0202 li
637.982 35.2127 li
.0798047 .829038 .658839 .00482185 cmyk
f
637.966 34.3355 mo
637.93 32.4131 li
648.288 32.2206 li
648.322 34.0486 li
637.966 34.3355 li
.22327 .911742 .704219 .110567 cmyk
f
652.819 34.937 mo
652.801 33.9245 li
663.157 33.6376 li
663.178 34.7448 li
652.819 34.937 li
.0798047 .829038 .658839 .00482185 cmyk
f
652.801 33.9245 mo
652.767 32.1375 li
663.126 31.9452 li
663.157 33.6376 li
652.801 33.9245 li
.22327 .911742 .704219 .110567 cmyk
f
667.657 34.6616 mo
667.635 33.5135 li
671.255 33.4132 li
671.441 33.5987 li
670.206 33.5987 li
670.206 34.0988 li
670.206 34.5989 li
671.028 34.5989 li
667.657 34.6616 li
.0798047 .829038 .658839 .00482185 cmyk
f
671.028 34.5989 mo
670.206 34.5989 li
670.206 34.0988 li
670.206 33.5987 li
671.441 33.5987 li
671.822 33.9798 li
671.206 34.5956 li
671.028 34.5989 li
.0967422 .957885 .907469 .0132448 cmyk
f
667.635 33.5135 mo
667.605 31.862 li
672.31 31.7747 li
670.963 33.1212 li
671.255 33.4132 li
667.635 33.5135 li
.22327 .911742 .704219 .110567 cmyk
f
671.206 34.5956 mo
671.822 33.9798 li
672.415 34.5732 li
671.206 34.5956 li
f
682.511 34.284 mo
682.47 33.0301 li
692.823 32.6393 li
692.866 33.9467 li
682.511 34.284 li
.0798047 .829038 .658839 .00482185 cmyk
f
682.47 33.0301 mo
682.42 31.4854 li
692.775 31.1481 li
692.823 32.6393 li
682.47 33.0301 li
.22327 .911742 .704219 .110567 cmyk
f
697.343 33.8008 mo
697.3 32.4703 li
707.653 32.0795 li
707.698 33.4636 li
697.343 33.8008 li
.0798047 .829038 .658839 .00482185 cmyk
f
697.3 32.4703 mo
697.252 31.0023 li
707.607 30.665 li
707.653 32.0795 li
697.3 32.4703 li
.22327 .911742 .704219 .110567 cmyk
f
712.176 33.3175 mo
712.13 31.9105 li
722.482 31.5197 li
722.53 32.9802 li
712.176 33.3175 li
.0798047 .829038 .658839 .00482185 cmyk
f
712.13 31.9105 mo
712.084 30.519 li
722.439 30.1817 li
722.482 31.5197 li
712.13 31.9105 li
.22327 .911742 .704219 .110567 cmyk
f
727.008 32.8344 mo
726.959 31.3507 li
737.312 30.9599 li
737.362 32.4971 li
727.008 32.8344 li
.0798047 .829038 .658839 .00482185 cmyk
f
726.959 31.3507 mo
726.916 30.0358 li
737.271 29.6985 li
737.312 30.9599 li
726.959 31.3507 li
.22327 .911742 .704219 .110567 cmyk
f
741.84 32.3512 mo
741.789 30.7909 li
752.142 30.4001 li
752.194 32.014 li
741.84 32.3512 li
.0798047 .829038 .658839 .00482185 cmyk
f
741.789 30.7909 mo
741.749 29.5527 li
752.103 29.2154 li
752.142 30.4001 li
741.789 30.7909 li
.22327 .911742 .704219 .110567 cmyk
f
756.672 31.8681 mo
756.619 30.2311 li
766.971 29.8403 li
767.026 31.5308 li
756.672 31.8681 li
.0798047 .829038 .658839 .00482185 cmyk
f
756.619 30.2311 mo
756.581 29.0696 li
766.935 28.7323 li
766.971 29.8403 li
756.619 30.2311 li
.22327 .911742 .704219 .110567 cmyk
f
771.504 31.385 mo
771.448 29.6713 li
781.801 29.2805 li
781.859 31.0477 li
771.504 31.385 li
.0798047 .829038 .658839 .00482185 cmyk
f
771.448 29.6713 mo
771.413 28.5865 li
781.767 28.2492 li
781.801 29.2805 li
771.448 29.6713 li
.22327 .911742 .704219 .110567 cmyk
f
786.336 30.9019 mo
786.278 29.1115 li
796.631 28.7207 li
796.691 30.5646 li
786.336 30.9019 li
.0798047 .829038 .658839 .00482185 cmyk
f
786.278 29.1115 mo
786.245 28.1034 li
796.6 27.7661 li
796.631 28.7207 li
786.278 29.1115 li
.22327 .911742 .704219 .110567 cmyk
f
801.168 30.4188 mo
801.108 28.5517 li
811.46 28.1609 li
811.523 30.0812 li
801.168 30.4188 li
.0798047 .829038 .658839 .00482185 cmyk
f
801.108 28.5517 mo
801.077 27.6203 li
811.432 27.2827 li
811.46 28.1609 li
801.108 28.5517 li
.22327 .911742 .704219 .110567 cmyk
f
816.001 29.9354 mo
815.998 29.854 li
816.109 29.854 li
816.028 29.9345 li
816.001 29.9354 li
817.101 28.854 mo
815.965 28.854 li
815.937 27.9919 li
817.049 27.9499 li
816.623 28.3763 li
817.101 28.854 li
.0798047 .829038 .658839 .00482185 cmyk
f
816.109 29.854 mo
815.998 29.854 li
815.965 28.854 li
817.101 28.854 li
817.105 28.858 li
816.109 29.854 li
.0967422 .957885 .907469 .0132448 cmyk
f
815.937 27.9919 mo
815.909 27.1369 li
817.928 27.0712 li
817.049 27.9499 li
815.937 27.9919 li
.22327 .911742 .704219 .110567 cmyk
f
817.49 29.8869 mo
817.523 29.854 li
818.101 29.854 li
818.114 29.8667 li
817.49 29.8869 li
.0798047 .829038 .658839 .00482185 cmyk
f
818.101 29.854 mo
817.523 29.854 li
817.812 29.5652 li
818.101 29.854 li
.0967422 .957885 .907469 .0132448 cmyk
f
816.028 29.9345 mo
816.109 29.854 li
817.105 28.858 li
817.812 29.5652 li
817.523 29.854 li
817.49 29.8869 li
816.028 29.9345 li
.22327 .911742 .704219 .110567 cmyk
f
gsave
98.5975 82.6305 mo
115.669 82.6305 li
115.669 65.5594 li
98.5975 65.5594 li
98.5975 82.6305 li
clp
107.133 76.9234 mo
106.029 75.8192 li
108.237 75.8192 li
107.133 76.9234 li
106.133 74.8193 mo
105.029 74.8193 li
104.343 74.1333 li
105.106 73.3707 li
106.133 73.3707 li
106.133 74.8193 li
.0838026 .832731 .657679 .0052491 cmyk
f
107.231 74.8193 mo
106.133 74.8193 li
106.133 73.3707 li
107.035 73.3707 li
107.231 74.8193 li
.0933547 .953857 .909819 .0115663 cmyk
f
108.237 75.8192 mo
106.029 75.8192 li
105.029 74.8193 li
106.133 74.8193 li
106.133 75.3194 li
107.299 75.3194 li
107.321 75.4822 li
108.771 75.2858 li
108.237 75.8192 li
.0967422 .957885 .907469 .0132448 cmyk
f
107.299 75.3194 mo
106.133 75.3194 li
106.133 74.8193 li
107.231 74.8193 li
107.299 75.3194 li
.101442 .972717 .968963 .0153201 cmyk
f
106.133 73.3707 mo
105.106 73.3707 li
105.714 72.7619 li
107.89 72.5798 li
106.945 72.7077 li
106.967 72.8706 li
106.133 72.8706 li
106.133 73.3707 li
.0967422 .957885 .907469 .0132448 cmyk
f
107.035 73.3707 mo
106.133 73.3707 li
106.133 72.8706 li
106.967 72.8706 li
107.035 73.3707 li
.101442 .972717 .968963 .0153201 cmyk
f
105.714 72.7619 mo
107.133 71.3432 li
108.312 72.5225 li
107.89 72.5798 li
105.714 72.7619 li
.22327 .911742 .704219 .110567 cmyk
f
104.343 74.1333 mo
104.305 74.095 li
107.133 71.2665 li
108.38 72.5133 li
108.312 72.5225 li
107.133 71.3432 li
105.714 72.7619 li
105.106 73.3707 li
104.343 74.1333 li
f
109.237 74.8193 mo
108.133 74.8193 li
108.133 73.3707 li
109.161 73.3707 li
109.923 74.1333 li
109.237 74.8193 li
.0933547 .953857 .909819 .0115663 cmyk
f
108.133 74.8193 mo
107.231 74.8193 li
107.035 73.3707 li
108.133 73.3707 li
108.133 74.8193 li
.101442 .972717 .968963 .0153201 cmyk
f
107.321 75.4822 mo
107.299 75.3194 li
108.133 75.3194 li
108.133 74.8193 li
109.237 74.8193 li
108.771 75.2858 li
107.321 75.4822 li
.104646 .973602 .967712 .0170596 cmyk
f
108.133 75.3194 mo
107.299 75.3194 li
107.231 74.8193 li
108.133 74.8193 li
108.133 75.3194 li
.101625 .977569 .984863 .015259 cmyk
f
109.161 73.3707 mo
108.133 73.3707 li
108.133 72.8706 li
106.967 72.8706 li
106.945 72.7077 li
107.89 72.5798 li
108.333 72.5427 li
109.161 73.3707 li
.104646 .973602 .967712 .0170596 cmyk
f
108.133 73.3707 mo
107.035 73.3707 li
106.967 72.8706 li
108.133 72.8706 li
108.133 73.3707 li
.101625 .977569 .984863 .015259 cmyk
f
107.89 72.5798 mo
108.312 72.5225 li
108.333 72.5427 li
107.89 72.5798 li
.123476 .979889 .923674 .0276799 cmyk
f
109.923 74.1333 mo
109.161 73.3707 li
108.333 72.5427 li
108.312 72.5225 li
108.38 72.5133 li
109.962 74.095 li
109.923 74.1333 li
f
107.133 78.3375 mo
106.78 77.984 li
104.615 75.8192 li
106.029 75.8192 li
107.133 76.9234 li
108.237 75.8192 li
109.651 75.8192 li
107.133 78.3375 li
106.78 77.2769 mo
107.133 77.6305 li
106.78 77.2769 li
105.029 74.8193 mo
103.657 74.8193 li
104.343 74.1333 li
105.029 74.8193 li
102.929 74.1334 mo
102.89 74.095 li
103.615 73.3707 li
103.691 73.3707 li
102.929 74.1334 li
104.691 72.3707 mo
104.615 72.3707 li
104.625 72.3606 li
104.702 72.3606 li
104.691 72.3707 li
.0838026 .832731 .657679 .0052491 cmyk
f
104.702 72.3606 mo
104.625 72.3606 li
105.221 71.7648 li
105.226 71.8356 li
104.702 72.3606 li
.22327 .911742 .704219 .110567 cmyk
f
109.651 75.8192 mo
108.237 75.8192 li
108.771 75.2858 li
110.406 75.0642 li
109.651 75.8192 li
106.029 75.8192 mo
104.615 75.8192 li
103.636 74.8404 li
103.657 74.8193 li
105.029 74.8193 li
106.029 75.8192 li
.0967422 .957885 .907469 .0132448 cmyk
f
103.691 73.3707 mo
103.615 73.3707 li
104.615 72.3707 li
104.691 72.3707 li
103.691 73.3707 li
f
109.558 72.3537 mo
107.84 70.6361 li
107.878 70.5978 li
109.625 72.3446 li
109.558 72.3537 li
105.226 71.8356 mo
105.221 71.7648 li
106.388 70.5978 li
106.426 70.6361 li
105.226 71.8356 li
107.133 69.929 mo
107.095 69.8907 li
107.133 69.8524 li
107.171 69.8907 li
107.133 69.929 li
.22327 .911742 .704219 .110567 cmyk
f
103.636 74.8404 mo
102.929 74.1334 li
103.691 73.3707 li
104.691 72.3707 li
104.702 72.3606 li
105.226 71.8356 li
106.426 70.6361 li
106.388 70.5978 li
107.095 69.8907 li
107.133 69.929 li
107.171 69.8907 li
107.878 70.5978 li
107.84 70.6361 li
109.558 72.3537 li
108.38 72.5133 li
107.133 71.2665 li
104.305 74.095 li
104.343 74.1333 li
103.657 74.8193 li
103.636 74.8404 li
f
110.609 74.8193 mo
109.237 74.8193 li
109.923 74.1333 li
110.609 74.8193 li
.0933547 .953857 .909819 .0115663 cmyk
f
108.771 75.2858 mo
109.237 74.8193 li
110.609 74.8193 li
110.63 74.8403 li
110.406 75.0642 li
108.771 75.2858 li
.104646 .973602 .967712 .0170596 cmyk
f
111.337 74.1333 mo
110.575 73.3707 li
110.651 73.3707 li
111.376 74.095 li
111.337 74.1333 li
.0933547 .953857 .909819 .0115663 cmyk
f
110.651 73.3707 mo
110.575 73.3707 li
109.638 72.4334 li
109.708 72.4275 li
110.651 73.3707 li
.104646 .973602 .967712 .0170596 cmyk
f
109.638 72.4334 mo
109.558 72.3537 li
109.625 72.3446 li
109.708 72.4275 li
109.638 72.4334 li
.123476 .979889 .923674 .0276799 cmyk
f
110.63 74.8403 mo
110.609 74.8193 li
109.923 74.1333 li
109.962 74.095 li
108.38 72.5133 li
109.558 72.3537 li
109.638 72.4334 li
110.575 73.3707 li
111.337 74.1333 li
110.63 74.8403 li
f
grestore
gsave
127.73 78.6839 mo
144.801 78.6839 li
144.801 61.6128 li
127.73 61.6128 li
127.73 78.6839 li
clp
136.265 72.9768 mo
134.914 71.6261 li
137.616 71.6261 li
136.265 72.9768 li
.0838026 .832731 .657679 .0052491 cmyk
f
137.616 71.6261 mo
134.914 71.6261 li
134.229 70.9405 li
134.238 70.9313 li
135.265 70.9313 li
135.265 71.1263 li
136.901 71.1263 li
136.989 71.3796 li
138.286 70.9313 li
138.292 70.9313 li
138.301 70.9406 li
137.616 71.6261 li
.0967422 .957885 .907469 .0132448 cmyk
f
136.901 71.1263 mo
135.265 71.1263 li
135.265 70.9313 li
136.834 70.9313 li
136.901 71.1263 li
.101442 .972717 .968963 .0153201 cmyk
f
138.292 70.9313 mo
138.286 70.9313 li
138.29 70.9298 li
138.292 70.9313 li
136.834 70.9313 mo
135.265 70.9313 li
134.238 70.9313 li
134.846 70.323 li
136.432 70.1902 li
136.479 70.1864 136.525 70.1808 136.572 70.1735 cv
136.834 70.9313 li
.210086 .878904 .96585 .112642 cmyk
f
134.846 70.323 mo
136.167 69.002 li
136.572 70.1735 li
136.525 70.1808 136.479 70.1864 136.432 70.1902 cv
134.846 70.323 li
133.522 70.2334 mo
133.437 70.1484 li
135.473 68.1122 li
135.558 68.1972 li
133.522 70.2334 li
137.14 68.3649 mo
136.972 68.1972 li
137.057 68.1121 li
137.266 68.3212 li
137.14 68.3649 li
136.265 67.4901 mo
136.18 67.4051 li
136.265 67.3199 li
136.35 67.4049 li
136.265 67.4901 li
.22327 .911742 .704219 .110567 cmyk
f
138.301 70.9406 mo
138.292 70.9313 li
138.29 70.9298 li
138.324 70.9183 li
138.301 70.9406 li
134.229 70.9405 mo
133.522 70.2334 li
135.558 68.1972 li
135.473 68.1122 li
136.18 67.4051 li
136.265 67.4901 li
136.35 67.4049 li
137.057 68.1121 li
136.972 68.1972 li
137.14 68.3649 li
136.074 68.733 li
136.167 69.002 li
134.846 70.323 li
134.238 70.9313 li
134.229 70.9405 li
f
136.989 71.3796 mo
136.901 71.1263 li
137.265 71.1263 li
137.265 70.9313 li
138.286 70.9313 li
136.989 71.3796 li
.104646 .973602 .967712 .0170596 cmyk
f
137.265 71.1263 mo
136.901 71.1263 li
136.834 70.9313 li
137.265 70.9313 li
137.265 71.1263 li
.101625 .977569 .984863 .015259 cmyk
f
138.286 70.9313 mo
137.265 70.9313 li
136.834 70.9313 li
136.572 70.1735 li
136.669 70.1585 136.765 70.1362 136.858 70.1073 cv
137.323 69.9628 li
138.29 70.9298 li
138.286 70.9313 li
.128206 .965637 .989013 .0317998 cmyk
f
136.572 70.1735 mo
136.167 69.002 li
136.265 68.9043 li
137.323 69.9628 li
136.858 70.1073 li
136.765 70.1362 136.669 70.1585 136.572 70.1735 cv
.123476 .979889 .923674 .0276799 cmyk
f
139.008 70.2336 mo
138.403 69.6277 li
138.532 69.5873 li
139.094 70.1484 li
139.008 70.2336 li
.128206 .965637 .989013 .0317998 cmyk
f
138.403 69.6277 mo
137.14 68.3649 li
137.266 68.3212 li
138.532 69.5873 li
138.403 69.6277 li
.123476 .979889 .923674 .0276799 cmyk
f
138.29 70.9298 mo
137.323 69.9628 li
136.265 68.9043 li
136.167 69.002 li
136.074 68.733 li
137.14 68.3649 li
138.403 69.6277 li
139.008 70.2336 li
138.324 70.9183 li
138.29 70.9298 li
f
136.265 74.3909 mo
135.912 74.0374 li
133.522 71.6476 li
133.543 71.6261 li
134.914 71.6261 li
136.265 72.9768 li
137.616 71.6261 li
138.987 71.6261 li
139.008 71.6477 li
136.265 74.3909 li
135.912 73.3303 mo
136.265 73.6839 li
135.912 73.3303 li
140.03 70.6262 mo
139.401 70.6262 li
139.341 70.5666 li
140.484 70.1717 li
140.03 70.6262 li
133.129 70.6262 mo
132.5 70.6262 li
132.402 70.5276 li
133.265 70.4554 li
133.265 70.4902 li
133.129 70.6262 li
.0838026 .832731 .657679 .0052491 cmyk
f
138.987 71.6261 mo
137.616 71.6261 li
138.301 70.9406 li
138.987 71.6261 li
134.914 71.6261 mo
133.543 71.6261 li
134.229 70.9405 li
134.914 71.6261 li
139.715 70.9406 mo
139.401 70.6262 li
140.03 70.6262 li
139.715 70.9406 li
132.815 70.9406 mo
132.5 70.6262 li
133.129 70.6262 li
132.815 70.9406 li
.0967422 .957885 .907469 .0132448 cmyk
f
135.979 66.1918 mo
136.239 65.9312 li
136.291 65.9312 li
136.416 66.0562 li
135.979 66.1918 li
.210086 .878904 .96585 .112642 cmyk
f
133.265 70.4902 mo
133.265 70.4554 li
133.303 70.4522 li
133.265 70.4902 li
136.291 65.9312 mo
136.239 65.9312 li
136.265 65.9056 li
136.291 65.9312 li
f
132.402 70.5276 mo
132.03 70.1557 li
132.028 70.1428 li
134.766 67.405 li
135.473 68.1122 li
133.437 70.1484 li
133.522 70.2334 li
133.303 70.4522 li
133.265 70.4554 li
132.402 70.5276 li
137.266 68.3212 mo
137.057 68.1121 li
137.764 67.4049 li
138.317 67.958 li
137.266 68.3212 li
136.18 67.4051 mo
135.473 66.6979 li
135.979 66.1918 li
136.416 66.0562 li
137.057 66.6978 li
136.35 67.4049 li
136.265 67.3199 li
136.18 67.4051 li
.22327 .911742 .704219 .110567 cmyk
f
139.008 71.6477 mo
138.987 71.6261 li
138.301 70.9406 li
138.324 70.9183 li
139.341 70.5666 li
139.401 70.6262 li
139.715 70.9406 li
139.008 71.6477 li
133.522 71.6476 mo
132.815 70.9406 li
133.129 70.6262 li
133.265 70.4902 li
133.303 70.4522 li
133.522 70.2334 li
134.229 70.9405 li
133.543 71.6261 li
133.522 71.6476 li
135.473 68.1122 mo
134.766 67.405 li
135.473 66.6979 li
136.18 67.4051 li
135.473 68.1122 li
137.057 68.1121 mo
136.35 67.4049 li
137.057 66.6978 li
137.764 67.4049 li
137.057 68.1121 li
f
132.03 70.1557 mo
132.022 70.1484 li
132.028 70.1428 li
132.03 70.1557 li
.123476 .979889 .923674 .0276799 cmyk
f
139.341 70.5666 mo
139.265 70.4902 li
139.265 69.6749 li
140.034 69.6749 li
140.508 70.1484 li
140.484 70.1717 li
139.341 70.5666 li
.0933547 .953857 .909819 .0115663 cmyk
f
140.034 69.6749 mo
139.265 69.6749 li
139.265 69.6706 li
140.03 69.6706 li
140.034 69.6749 li
.123476 .979889 .923674 .0276799 cmyk
f
140.03 69.6706 mo
139.265 69.6706 li
139.265 69.3599 li
139.357 69.3313 li
139.691 69.3313 li
140.03 69.6706 li
.104952 .975525 .984283 .0171206 cmyk
f
139.691 69.3313 mo
139.357 69.3313 li
139.612 69.2523 li
139.691 69.3313 li
.128206 .965637 .989013 .0317998 cmyk
f
139.265 70.4902 mo
139.008 70.2336 li
139.094 70.1484 li
138.532 69.5873 li
139.265 69.3599 li
139.265 69.6706 li
139.265 69.6749 li
139.265 70.4902 li
f
138.532 69.5873 mo
137.266 68.3212 li
138.317 67.958 li
139.612 69.2523 li
139.357 69.3313 li
139.265 69.3599 li
138.532 69.5873 li
.123476 .979889 .923674 .0276799 cmyk
f
138.324 70.9183 mo
139.008 70.2336 li
139.265 70.4902 li
139.341 70.5666 li
138.324 70.9183 li
f
grestore
gsave
156.861 68.6179 mo
173.932 68.6179 li
173.932 51.5468 li
156.861 51.5468 li
156.861 68.6179 li
clp
165.397 62.9108 mo
164.126 61.64 li
164.384 61.5601 li
164.998 61.5601 li
165.041 61.6864 li
165.407 61.5601 li
166.748 61.5601 li
165.397 62.9108 li
.0838026 .832731 .657679 .0052491 cmyk
f
166.748 61.5601 mo
165.407 61.5601 li
165.708 61.4561 li
166.865 61.3258 li
166.923 61.3844 li
166.748 61.5601 li
164.998 61.5601 mo
164.384 61.5601 li
164.938 61.3879 li
164.998 61.5601 li
.0967422 .957885 .907469 .0132448 cmyk
f
164.126 61.64 mo
163.871 61.3845 li
164.663 60.592 li
164.938 61.3879 li
164.384 61.5601 li
164.126 61.64 li
163.163 60.6774 mo
162.568 60.0823 li
164.095 58.5559 li
164.463 58.9239 li
164.127 59.04 li
164.3 59.541 li
163.163 60.6774 li
165.397 58.4439 mo
164.802 57.8488 li
165.397 57.2539 li
165.992 57.849 li
165.397 58.4439 li
.22327 .911742 .704219 .110567 cmyk
f
163.871 61.3845 mo
163.163 60.6774 li
164.3 59.541 li
164.663 60.592 li
163.871 61.3845 li
166.923 61.3844 mo
166.865 61.3258 li
166.997 61.3109 li
166.923 61.3844 li
164.463 58.9239 mo
164.095 58.5559 li
164.802 57.8488 li
165.397 58.4439 li
165.992 57.849 li
166.673 58.5297 li
165.24 58.6911 li
165.139 58.7025 165.035 58.7261 164.94 58.759 cv
164.463 58.9239 li
f
165.041 61.6864 mo
164.998 61.5601 li
165.407 61.5601 li
165.041 61.6864 li
.0933547 .953857 .909819 .0115663 cmyk
f
165.407 61.5601 mo
164.998 61.5601 li
164.938 61.3879 li
165.85 61.1049 li
166.139 61.06 li
166.397 61.06 li
166.397 61.0198 li
166.537 60.9981 li
166.865 61.3258 li
165.708 61.4561 li
165.407 61.5601 li
.104646 .973602 .967712 .0170596 cmyk
f
166.397 61.06 mo
166.139 61.06 li
166.397 61.0198 li
166.397 61.06 li
.101625 .977569 .984863 .015259 cmyk
f
164.938 61.3879 mo
164.663 60.592 li
165.397 59.8582 li
166.537 60.9981 li
166.397 61.0198 li
166.139 61.06 li
165.85 61.1049 li
164.938 61.3879 li
.123476 .979889 .923674 .0276799 cmyk
f
167.63 60.6773 mo
166.104 59.151 li
166.699 58.5561 li
168.225 60.0823 li
167.63 60.6773 li
164.3 59.541 mo
164.127 59.04 li
164.463 58.9239 li
164.69 59.151 li
164.3 59.541 li
f
166.865 61.3258 mo
166.537 60.9981 li
165.397 59.8582 li
164.663 60.592 li
164.3 59.541 li
164.69 59.151 li
164.463 58.9239 li
164.94 58.759 li
165.035 58.7261 165.139 58.7025 165.24 58.6911 cv
166.673 58.5297 li
166.699 58.5561 li
166.104 59.151 li
167.63 60.6773 li
166.997 61.3109 li
166.865 61.3258 li
f
165.397 64.3249 mo
165.043 63.9713 li
163.164 62.0916 li
163.385 61.8701 li
164.126 61.64 li
165.397 62.9108 li
166.748 61.5601 li
167.099 61.5601 li
167.63 62.0915 li
165.397 64.3249 li
165.043 63.2643 mo
165.397 63.6178 li
165.043 63.2643 li
164.339 57.3855 mo
164.095 57.1417 li
165.397 55.8395 li
166.511 56.9541 li
165.09 57.1748 li
164.804 57.241 li
164.339 57.3855 li
.0838026 .832731 .657679 .0052491 cmyk
f
167.099 61.5601 mo
166.748 61.5601 li
166.923 61.3844 li
167.099 61.5601 li
168.337 61.3844 mo
168.136 61.1827 li
168.59 61.1314 li
168.337 61.3844 li
.0967422 .957885 .907469 .0132448 cmyk
f
163.385 61.8701 mo
163.871 61.3845 li
164.126 61.64 li
163.385 61.8701 li
162.456 61.3845 mo
161.154 60.0823 li
163.388 57.8488 li
164.095 58.5559 li
162.568 60.0823 li
163.163 60.6774 li
162.456 61.3845 li
166.732 58.523 mo
167.406 57.8489 li
167.944 58.3865 li
166.732 58.523 li
165.992 57.849 mo
165.397 57.2539 li
164.802 57.8488 li
164.339 57.3855 li
164.804 57.241 li
165.09 57.1748 li
166.511 56.9541 li
166.699 57.1418 li
165.992 57.849 li
.22327 .911742 .704219 .110567 cmyk
f
163.164 62.0916 mo
162.456 61.3845 li
163.163 60.6774 li
163.871 61.3845 li
163.385 61.8701 li
163.164 62.0916 li
167.63 62.0915 mo
167.099 61.5601 li
166.923 61.3844 li
166.997 61.3109 li
168.136 61.1827 li
168.337 61.3844 li
167.63 62.0915 li
164.095 58.5559 mo
163.388 57.8488 li
164.095 57.1417 li
164.339 57.3855 li
164.802 57.8488 li
164.095 58.5559 li
166.673 58.5297 mo
165.992 57.849 li
166.699 57.1418 li
167.406 57.8489 li
166.732 58.523 li
166.673 58.5297 li
f
168.136 61.1827 mo
167.761 60.8081 li
168.915 60.6288 li
169.093 60.6288 li
168.59 61.1314 li
168.136 61.1827 li
.104646 .973602 .967712 .0170596 cmyk
f
169.093 60.6288 mo
168.915 60.6288 li
169.126 60.5962 li
169.093 60.6288 li
.104952 .975525 .984283 .0171206 cmyk
f
167.761 60.8081 mo
167.63 60.6773 li
168.225 60.0823 li
166.699 58.5561 li
166.732 58.523 li
167.944 58.3865 li
169.64 60.0823 li
169.126 60.5962 li
168.915 60.6288 li
167.761 60.8081 li
.123476 .979889 .923674 .0276799 cmyk
f
166.997 61.3109 mo
167.63 60.6773 li
167.761 60.8081 li
168.136 61.1827 li
166.997 61.3109 li
166.699 58.5561 mo
166.673 58.5297 li
166.732 58.523 li
166.699 58.5561 li
f
grestore
gsave
185.993 65.3362 mo
203.064 65.3362 li
203.064 48.2651 li
185.993 48.2651 li
185.993 65.3362 li
clp
194.529 59.6291 mo
193.178 58.2784 li
195.88 58.2784 li
194.529 59.6291 li
193.529 57.2785 mo
192.585 57.2785 li
192.97 56.894 li
193.529 56.8072 li
193.529 57.2785 li
.0838026 .832731 .657679 .0052491 cmyk
f
194.083 57.2785 mo
193.529 57.2785 li
193.529 56.8072 li
194.022 56.7307 li
194.083 57.2785 li
.0933547 .953857 .909819 .0115663 cmyk
f
195.88 58.2784 mo
193.178 58.2784 li
192.382 57.4821 li
192.585 57.2785 li
193.529 57.2785 li
193.529 57.7786 li
194.14 57.7786 li
194.193 58.2475 li
194.686 58.192 li
194.767 58.1803 li
196.23 57.9275 li
195.88 58.2784 li
.0967422 .957885 .907469 .0132448 cmyk
f
194.14 57.7786 mo
193.529 57.7786 li
193.529 57.2785 li
194.083 57.2785 li
194.14 57.7786 li
.101442 .972717 .968963 .0153201 cmyk
f
192.97 56.894 mo
193.932 55.9322 li
194.022 56.7307 li
193.529 56.8072 li
192.97 56.894 li
194.475 55.3894 mo
194.529 55.335 li
194.567 55.3734 li
194.475 55.3894 li
.22327 .911742 .704219 .110567 cmyk
f
192.382 57.4821 mo
191.7 56.8007 li
194.529 53.9722 li
195.729 55.1726 li
194.567 55.3734 li
194.529 55.335 li
194.475 55.3894 li
194.331 55.4142 li
193.879 55.4652 li
193.932 55.9322 li
192.97 56.894 li
192.585 57.2785 li
192.382 57.4821 li
f
196.472 57.2785 mo
195.529 57.2785 li
195.529 56.5158 li
195.689 56.4952 li
196.472 57.2785 li
.0933547 .953857 .909819 .0115663 cmyk
f
195.529 57.2785 mo
194.083 57.2785 li
194.022 56.7307 li
194.811 56.6082 li
195.529 56.5158 li
195.529 57.2785 li
.101442 .972717 .968963 .0153201 cmyk
f
194.193 58.2475 mo
194.14 57.7786 li
195.529 57.7786 li
195.529 57.2785 li
196.472 57.2785 li
196.676 57.482 li
196.23 57.9275 li
194.767 58.1803 li
194.686 58.192 li
194.193 58.2475 li
.104646 .973602 .967712 .0170596 cmyk
f
195.529 57.7786 mo
194.14 57.7786 li
194.083 57.2785 li
195.529 57.2785 li
195.529 57.7786 li
.101625 .977569 .984863 .015259 cmyk
f
194.022 56.7307 mo
193.932 55.9322 li
194.475 55.3894 li
194.567 55.3734 li
195.689 56.4952 li
195.529 56.5158 li
194.811 56.6082 li
194.022 56.7307 li
.123476 .979889 .923674 .0276799 cmyk
f
196.676 57.482 mo
196.472 57.2785 li
195.689 56.4952 li
194.567 55.3734 li
195.729 55.1726 li
197.357 56.8007 li
196.676 57.482 li
193.932 55.9322 mo
193.879 55.4652 li
194.331 55.4142 li
194.475 55.3894 li
193.932 55.9322 li
f
194.529 61.0435 mo
194.175 60.69 li
191.764 58.2784 li
193.178 58.2784 li
194.529 59.6291 li
195.88 58.2784 li
197.294 58.2784 li
194.529 61.0435 li
194.175 59.9827 mo
194.529 60.3364 li
194.175 59.9827 li
191.171 57.2785 mo
190.764 57.2785 li
190.728 57.2421 li
191.296 57.1539 li
191.171 57.2785 li
194.468 52.6194 mo
194.529 52.5582 li
194.576 52.6055 li
194.468 52.6194 li
.0838026 .832731 .657679 .0052491 cmyk
f
197.294 58.2784 mo
195.88 58.2784 li
196.23 57.9275 li
196.99 57.7963 li
197.383 58.1892 li
197.294 58.2784 li
193.178 58.2784 mo
191.764 58.2784 li
191.675 58.1892 li
192.382 57.4821 li
193.178 58.2784 li
190.968 57.482 mo
190.764 57.2785 li
191.171 57.2785 li
190.968 57.482 li
.0967422 .957885 .907469 .0132448 cmyk
f
190.728 57.2421 mo
190.286 56.8007 li
193.14 53.9466 li
193.822 54.6279 li
191.296 57.1539 li
190.728 57.2421 li
195.773 55.1651 mo
195.236 54.6279 li
195.917 53.9466 li
196.935 54.9643 li
195.773 55.1651 li
194.529 53.9208 mo
193.848 53.2395 li
194.468 52.6194 li
194.576 52.6055 li
195.21 53.2395 li
194.529 53.9208 li
.22327 .911742 .704219 .110567 cmyk
f
191.675 58.1892 mo
190.968 57.482 li
191.171 57.2785 li
191.296 57.1539 li
193.822 54.6279 li
193.14 53.9466 li
193.848 53.2395 li
194.529 53.9208 li
195.21 53.2395 li
195.917 53.9466 li
195.236 54.6279 li
195.773 55.1651 li
195.729 55.1726 li
194.529 53.9722 li
191.7 56.8007 li
192.382 57.4821 li
191.675 58.1892 li
197.383 58.1892 mo
196.99 57.7963 li
197.94 57.6322 li
197.383 58.1892 li
f
196.23 57.9275 mo
196.676 57.482 li
196.99 57.7963 li
196.23 57.9275 li
.104646 .973602 .967712 .0170596 cmyk
f
198.294 57.2785 mo
197.887 57.2785 li
196.942 56.334 li
197.029 56.3229 li
198.294 56.3229 li
198.772 56.8007 li
198.294 57.2785 li
.0933547 .953857 .909819 .0115663 cmyk
f
198.09 57.4821 mo
197.887 57.2785 li
198.294 57.2785 li
198.09 57.4821 li
.104646 .973602 .967712 .0170596 cmyk
f
198.294 56.3229 mo
197.029 56.3229 li
198.15 56.1787 li
198.294 56.3229 li
f
196.942 56.334 mo
195.773 55.1651 li
196.935 54.9643 li
198.15 56.1787 li
197.029 56.3229 li
196.942 56.334 li
.123476 .979889 .923674 .0276799 cmyk
f
196.99 57.7963 mo
196.676 57.482 li
197.357 56.8007 li
195.729 55.1726 li
195.773 55.1651 li
196.942 56.334 li
197.887 57.2785 li
198.09 57.4821 li
197.94 57.6322 li
196.99 57.7963 li
f
grestore
gsave
244.257 55.2702 mo
261.328 55.2702 li
261.328 38.1991 li
244.257 38.1991 li
244.257 55.2702 li
clp
252.793 49.5631 mo
252.427 49.1973 li
252.949 49.1302 li
253.234 49.1224 li
252.793 49.5631 li
251.708 45.2569 mo
251.623 45.2569 li
251.533 45.1665 li
252.793 43.9062 li
253.987 45.1004 li
252.738 45.1347 li
252.538 45.1501 li
251.708 45.2569 li
.0838026 .832731 .657679 .0052491 cmyk
f
251.633 45.2665 mo
251.623 45.2569 li
251.708 45.2569 li
251.633 45.2665 li
.0967422 .957885 .907469 .0132448 cmyk
f
252.427 49.1973 mo
251.932 48.702 li
252.728 47.9057 li
252.772 48.1591 li
252.914 48.1345 li
253.086 48.1343 li
253.654 48.7021 li
253.234 49.1224 li
252.949 49.1302 li
252.427 49.1973 li
251.225 47.9949 mo
249.964 46.7346 li
250.825 45.8736 li
252.086 47.1338 li
251.225 47.9949 li
252.405 46.0395 mo
251.633 45.2665 li
251.708 45.2569 li
252.538 45.1501 li
252.738 45.1347 li
253.987 45.1004 li
254.053 45.1664 li
253.886 45.3333 li
252.791 45.3348 li
252.554 45.355 li
252.295 45.3999 li
252.405 46.0395 li
.22327 .911742 .704219 .110567 cmyk
f
253.654 48.7021 mo
253.086 48.1343 li
254.223 48.1328 li
253.654 48.7021 li
251.932 48.702 mo
251.225 47.9949 li
252.086 47.1338 li
250.825 45.8736 li
251.533 45.1665 li
251.623 45.2569 li
251.633 45.2665 li
252.405 46.0395 li
252.728 47.9057 li
251.932 48.702 li
253.886 45.3333 mo
254.053 45.1664 li
254.219 45.3328 li
253.886 45.3333 li
f
252.772 48.1591 mo
252.728 47.9057 li
252.793 47.8409 li
253.086 48.1343 li
252.914 48.1345 li
252.772 48.1591 li
254.361 47.9949 mo
253.5 47.1338 li
254.76 45.8735 li
255.621 46.7346 li
254.361 47.9949 li
252.793 46.4267 mo
252.405 46.0395 li
252.295 45.3999 li
252.554 45.355 li
252.791 45.3348 li
253.886 45.3333 li
252.793 46.4267 li
.123476 .979889 .923674 .0276799 cmyk
f
253.086 48.1343 mo
252.793 47.8409 li
252.728 47.9057 li
252.405 46.0395 li
252.793 46.4267 li
253.886 45.3333 li
254.219 45.3328 li
254.76 45.8735 li
253.5 47.1338 li
254.361 47.9949 li
254.223 48.1328 li
253.086 48.1343 li
f
252.793 50.9774 mo
252.439 50.6237 li
251.225 49.4091 li
251.29 49.3435 li
252.427 49.1973 li
252.793 49.5631 li
253.234 49.1224 li
254.052 49.1 li
254.361 49.4092 li
252.793 50.9774 li
252.439 49.9166 mo
252.793 50.2701 li
252.439 49.9166 li
250.209 45.2569 mo
250.028 45.2569 li
250.118 45.1664 li
250.209 45.2569 li
251.533 45.1665 mo
250.825 44.4594 li
252.793 42.4921 li
254.76 44.4593 li
254.123 45.0967 li
253.987 45.1004 li
252.793 43.9062 li
251.533 45.1665 li
.0838026 .832731 .657679 .0052491 cmyk
f
249.78 45.5049 mo
250.028 45.2569 li
250.209 45.2569 li
250.38 45.4277 li
249.78 45.5049 li
.0967422 .957885 .907469 .0132448 cmyk
f
251.29 49.3435 mo
251.932 48.702 li
252.427 49.1973 li
251.29 49.3435 li
253.234 49.1224 mo
253.654 48.7021 li
254.052 49.1 li
253.234 49.1224 li
255.068 48.702 mo
254.498 48.1324 li
255.639 48.1309 li
255.068 48.702 li
250.517 48.702 mo
248.55 46.7346 li
249.78 45.5049 li
250.38 45.4277 li
250.825 45.8736 li
249.964 46.7346 li
251.225 47.9949 li
250.517 48.702 li
255.302 45.3313 mo
255.467 45.1665 li
255.632 45.3309 li
255.302 45.3313 li
254.053 45.1664 mo
253.987 45.1004 li
254.123 45.0967 li
254.053 45.1664 li
.22327 .911742 .704219 .110567 cmyk
f
254.361 49.4092 mo
254.052 49.1 li
253.654 48.7021 li
254.223 48.1328 li
254.498 48.1324 li
255.068 48.702 li
254.361 49.4092 li
251.225 49.4091 mo
250.517 48.702 li
251.225 47.9949 li
251.932 48.702 li
251.29 49.3435 li
251.225 49.4091 li
250.825 45.8736 mo
250.38 45.4277 li
250.209 45.2569 li
250.118 45.1664 li
250.825 44.4594 li
251.533 45.1665 li
250.825 45.8736 li
254.219 45.3328 mo
254.053 45.1664 li
254.123 45.0967 li
254.76 44.4593 li
255.467 45.1665 li
255.302 45.3313 li
254.219 45.3328 li
f
254.498 48.1324 mo
254.361 47.9949 li
255.621 46.7346 li
254.76 45.8735 li
255.302 45.3313 li
255.632 45.3309 li
257.035 46.7346 li
255.639 48.1309 li
254.498 48.1324 li
.123476 .979889 .923674 .0276799 cmyk
f
254.223 48.1328 mo
254.361 47.9949 li
254.498 48.1324 li
254.223 48.1328 li
254.76 45.8735 mo
254.219 45.3328 li
255.302 45.3313 li
254.76 45.8735 li
f
grestore
gsave
375.351 55.0929 mo
392.422 55.0929 li
392.422 38.0218 li
375.351 38.0218 li
375.351 55.0929 li
clp
383.887 49.3858 mo
382.536 48.0351 li
385.237 48.0351 li
383.887 49.3858 li
386.13 47.0352 mo
384.887 47.0352 li
384.887 46.0796 li
385.717 46.0796 li
386.087 46.4499 li
386.13 47.0352 li
382.887 47.0352 mo
381.61 47.0352 li
381.609 46.5264 li
382.056 46.0796 li
382.887 46.0796 li
382.887 47.0352 li
.0838026 .832731 .657679 .0052491 cmyk
f
384.887 47.0352 mo
382.887 47.0352 li
382.887 46.0796 li
384.887 46.0796 li
384.887 47.0352 li
.0933547 .953857 .909819 .0115663 cmyk
f
385.237 48.0351 mo
382.536 48.0351 li
381.61 47.1093 li
381.61 47.0352 li
382.887 47.0352 li
382.887 47.535 li
384.887 47.535 li
384.887 47.0352 li
386.13 47.0352 li
386.138 47.1345 li
385.237 48.0351 li
.0967422 .957885 .907469 .0132448 cmyk
f
384.887 47.535 mo
382.887 47.535 li
382.887 47.0352 li
384.887 47.0352 li
384.887 47.535 li
.101442 .972717 .968963 .0153201 cmyk
f
385.717 46.0796 mo
384.887 46.0796 li
384.887 45.5795 li
382.887 45.5795 li
382.887 46.0796 li
382.056 46.0796 li
382.556 45.5791 li
383.941 45.5412 li
383.999 45.5387 li
385.113 45.4759 li
385.717 46.0796 li
.0967422 .957885 .907469 .0132448 cmyk
f
384.887 46.0796 mo
382.887 46.0796 li
382.887 45.5795 li
384.887 45.5795 li
384.887 46.0796 li
.101442 .972717 .968963 .0153201 cmyk
f
382.556 45.5791 mo
383.887 44.2491 li
385.113 45.4759 li
383.999 45.5387 li
383.941 45.5412 li
382.556 45.5791 li
.22327 .911742 .704219 .110567 cmyk
f
381.609 46.5264 mo
381.609 46.0069 li
383.887 43.7289 li
386.046 45.8884 li
386.087 46.4499 li
385.717 46.0796 li
385.113 45.4759 li
383.887 44.2491 li
382.556 45.5791 li
382.056 46.0796 li
381.609 46.5264 li
f
381.61 47.0352 mo
381.536 47.0352 li
381.318 46.8174 li
381.609 46.5264 li
381.61 47.0352 li
.0933547 .953857 .909819 .0115663 cmyk
f
381.61 47.1093 mo
381.536 47.0352 li
381.61 47.0352 li
381.61 47.1093 li
.104646 .973602 .967712 .0170596 cmyk
f
381.318 46.8174 mo
381.058 46.5574 li
381.609 46.0069 li
381.609 46.5264 li
381.318 46.8174 li
.123476 .979889 .923674 .0276799 cmyk
f
386.237 47.0352 mo
386.13 47.0352 li
386.087 46.4499 li
386.455 46.8174 li
386.237 47.0352 li
.0933547 .953857 .909819 .0115663 cmyk
f
386.138 47.1345 mo
386.13 47.0352 li
386.237 47.0352 li
386.138 47.1345 li
.104646 .973602 .967712 .0170596 cmyk
f
386.455 46.8174 mo
386.087 46.4499 li
386.046 45.8884 li
386.715 46.5574 li
386.455 46.8174 li
.123476 .979889 .923674 .0276799 cmyk
f
383.887 50.7999 mo
383.533 50.4464 li
381.122 48.0351 li
382.536 48.0351 li
383.887 49.3858 li
385.237 48.0351 li
386.651 48.0351 li
383.887 50.7999 li
383.533 49.7393 mo
383.887 50.0929 li
383.533 49.7393 li
.0838026 .832731 .657679 .0052491 cmyk
f
386.651 48.0351 mo
385.237 48.0351 li
386.138 47.1345 li
386.186 47.7917 li
386.951 47.7353 li
386.651 48.0351 li
382.536 48.0351 mo
381.122 48.0351 li
381.048 47.9611 li
381.611 47.9603 li
381.61 47.1093 li
382.536 48.0351 li
.0967422 .957885 .907469 .0132448 cmyk
f
381.04 45.1613 mo
382.919 43.2819 li
383.179 43.542 li
381.561 45.1606 li
381.04 45.1613 li
386.046 44.9944 mo
384.594 43.542 li
384.854 43.2819 li
386.531 44.9587 li
386.046 44.9944 li
383.887 42.8349 mo
383.626 42.5747 li
383.887 42.3146 li
384.147 42.5747 li
383.887 42.8349 li
.22327 .911742 .704219 .110567 cmyk
f
381.609 46.0069 mo
381.607 45.1605 li
381.561 45.1606 li
383.179 43.542 li
382.919 43.2819 li
383.626 42.5747 li
383.887 42.8349 li
384.147 42.5747 li
384.854 43.2819 li
384.594 43.542 li
386.046 44.9944 li
385.981 44.9992 li
386.046 45.8884 li
383.887 43.7289 li
381.609 46.0069 li
f
379.904 46.8173 mo
379.644 46.5574 li
380.122 46.0796 li
380.642 46.0796 li
379.904 46.8173 li
.0933547 .953857 .909819 .0115663 cmyk
f
380.642 46.0796 mo
380.122 46.0796 li
380.568 45.6336 li
381.102 45.619 li
380.642 46.0796 li
.104646 .973602 .967712 .0170596 cmyk
f
380.568 45.6336 mo
381.04 45.1613 li
381.561 45.1606 li
381.102 45.619 li
380.568 45.6336 li
.123476 .979889 .923674 .0276799 cmyk
f
381.536 47.0352 mo
381.1 47.0352 li
381.318 46.8174 li
381.536 47.0352 li
.0933547 .953857 .909819 .0115663 cmyk
f
381.048 47.9611 mo
380.611 47.5245 li
381.1 47.0352 li
381.536 47.0352 li
381.61 47.1093 li
381.611 47.9603 li
381.048 47.9611 li
.104646 .973602 .967712 .0170596 cmyk
f
380.611 47.5245 mo
379.904 46.8173 li
380.642 46.0796 li
381.102 45.619 li
381.561 45.1606 li
381.607 45.1605 li
381.609 46.0069 li
381.058 46.5574 li
381.318 46.8174 li
381.1 47.0352 li
380.611 47.5245 li
.123476 .979889 .923674 .0276799 cmyk
f
386.673 47.0352 mo
386.237 47.0352 li
386.455 46.8174 li
386.673 47.0352 li
.0933547 .953857 .909819 .0115663 cmyk
f
386.186 47.7917 mo
386.138 47.1345 li
386.237 47.0352 li
386.673 47.0352 li
387.162 47.5245 li
386.951 47.7353 li
386.186 47.7917 li
.104646 .973602 .967712 .0170596 cmyk
f
387.869 46.8173 mo
387.131 46.0796 li
387.651 46.0796 li
388.129 46.5574 li
387.869 46.8173 li
.0933547 .953857 .909819 .0115663 cmyk
f
387.651 46.0796 mo
387.131 46.0796 li
386.452 45.4005 li
386.945 45.3728 li
387.651 46.0796 li
.104646 .973602 .967712 .0170596 cmyk
f
386.452 45.4005 mo
386.046 44.9944 li
386.531 44.9587 li
386.945 45.3728 li
386.452 45.4005 li
.123476 .979889 .923674 .0276799 cmyk
f
387.162 47.5245 mo
386.673 47.0352 li
386.455 46.8174 li
386.715 46.5574 li
386.046 45.8884 li
385.981 44.9992 li
386.046 44.9944 li
386.452 45.4005 li
387.131 46.0796 li
387.869 46.8173 li
387.162 47.5245 li
f
grestore
gsave
521.011 44.3617 mo
538.082 44.3617 li
538.082 27.2906 li
521.011 27.2906 li
521.011 44.3617 li
clp
529.546 38.6546 mo
528.303 37.4115 li
529.63 37.3368 li
530.805 37.3043 li
530.851 37.3499 li
529.546 38.6546 li
529.189 33.3554 mo
529.546 32.9977 li
529.877 33.3283 li
529.491 33.339 li
529.434 33.3416 li
529.189 33.3554 li
.0838026 .832731 .657679 .0052491 cmyk
f
528.303 37.4115 mo
528.242 37.3499 li
528.268 37.324 li
529.611 37.225 li
529.641 37.2245 li
529.62 36.1192 li
530.805 37.3043 li
529.63 37.3368 li
528.303 37.4115 li
531.558 36.6429 mo
530.253 35.3383 li
531.07 34.5215 li
532.375 35.8261 li
531.558 36.6429 li
529.592 34.5858 mo
529.589 34.425 li
529.52 34.4262 li
529.444 34.4298 li
529.352 34.4366 li
528.729 33.8144 li
529.189 33.3554 li
529.434 33.3416 li
529.491 33.339 li
529.877 33.3283 li
530.363 33.8144 li
529.592 34.5858 li
528.008 34.5355 mo
528.022 34.5215 li
528.034 34.5336 li
528.008 34.5355 li
.22327 .911742 .704219 .110567 cmyk
f
530.851 37.3499 mo
530.805 37.3043 li
529.62 36.1192 li
529.592 34.5858 li
530.363 33.8144 li
531.07 34.5215 li
530.253 35.3383 li
531.558 36.6429 li
530.851 37.3499 li
528.242 37.3499 mo
528.219 37.3276 li
528.268 37.324 li
528.242 37.3499 li
528.034 34.5336 mo
528.022 34.5215 li
528.729 33.8144 li
529.352 34.4366 li
528.034 34.5336 li
f
528.268 37.324 mo
529.546 36.0454 li
529.62 36.1192 li
529.641 37.2245 li
529.611 37.225 li
528.268 37.324 li
527.535 36.6429 mo
526.718 35.8261 li
528.008 34.5355 li
528.034 34.5336 li
528.839 35.3383 li
527.535 36.6429 li
529.546 34.6311 mo
529.352 34.4366 li
529.444 34.4298 li
529.52 34.4262 li
529.589 34.425 li
529.592 34.5858 li
529.546 34.6311 li
.123476 .979889 .923674 .0276799 cmyk
f
528.219 37.3276 mo
527.535 36.6429 li
528.839 35.3383 li
528.034 34.5336 li
529.352 34.4366 li
529.546 34.6311 li
529.592 34.5858 li
529.62 36.1192 li
529.546 36.0454 li
528.268 37.324 li
528.219 37.3276 li
f
529.546 40.0687 mo
529.193 39.7151 li
527.535 38.057 li
528.173 37.4189 li
528.303 37.4115 li
529.546 38.6546 li
530.851 37.3499 li
531.558 38.057 li
529.546 40.0687 li
529.193 39.0081 mo
529.546 39.3616 li
529.193 39.0081 li
532.265 37.3499 mo
532.219 37.3039 li
532.311 37.3039 li
532.265 37.3499 li
528.319 33.4043 mo
528.022 33.1073 li
529.546 31.5833 li
531.07 33.1073 li
530.877 33.3006 li
529.877 33.3283 li
529.546 32.9977 li
529.189 33.3554 li
528.319 33.4043 li
.0838026 .832731 .657679 .0052491 cmyk
f
532.311 37.3039 mo
532.219 37.3039 li
532.181 37.2662 li
532.354 37.2614 li
532.311 37.3039 li
.0967422 .957885 .907469 .0132448 cmyk
f
528.173 37.4189 mo
528.242 37.3499 li
528.303 37.4115 li
528.173 37.4189 li
532.181 37.2662 mo
531.558 36.6429 li
532.375 35.8261 li
531.07 34.5215 li
531.777 33.8144 li
533.789 35.8261 li
532.354 37.2614 li
532.181 37.2662 li
526.482 34.648 mo
527.315 33.8144 li
528.022 34.5215 li
528.008 34.5355 li
526.482 34.648 li
530.363 33.8144 mo
529.877 33.3283 li
530.877 33.3006 li
530.363 33.8144 li
528.729 33.8144 mo
528.319 33.4043 li
529.189 33.3554 li
528.729 33.8144 li
.22327 .911742 .704219 .110567 cmyk
f
531.558 38.057 mo
530.851 37.3499 li
531.558 36.6429 li
532.181 37.2662 li
532.219 37.3039 li
532.265 37.3499 li
531.558 38.057 li
527.535 38.057 mo
526.902 37.4246 li
528.219 37.3276 li
528.242 37.3499 li
528.173 37.4189 li
527.535 38.057 li
531.07 34.5215 mo
530.363 33.8144 li
530.877 33.3006 li
531.07 33.1073 li
531.777 33.8144 li
531.07 34.5215 li
528.022 34.5215 mo
527.315 33.8144 li
528.022 33.1073 li
528.319 33.4043 li
528.729 33.8144 li
528.022 34.5215 li
f
526.828 37.3499 mo
525.304 35.8261 li
526.482 34.648 li
528.008 34.5355 li
526.718 35.8261 li
527.535 36.6429 li
526.828 37.3499 li
.123476 .979889 .923674 .0276799 cmyk
f
526.902 37.4246 mo
526.828 37.3499 li
527.535 36.6429 li
528.219 37.3276 li
526.902 37.4246 li
f
grestore
gsave
666.67 41.6565 mo
683.742 41.6565 li
683.742 24.5856 li
666.67 24.5856 li
666.67 41.6565 li
clp
675.206 35.9496 mo
673.855 34.5989 li
676.557 34.5989 li
675.206 35.9496 li
.0838026 .832731 .657679 .0052491 cmyk
f
676.557 34.5989 mo
673.855 34.5989 li
673.804 34.5474 li
675.232 34.5208 li
675.252 34.5203 li
676.682 34.4738 li
676.557 34.5989 li
.0967422 .957885 .907469 .0132448 cmyk
f
677.992 33.1633 mo
677.99 33.0763 li
678.034 33.1212 li
677.992 33.1633 li
673.751 31.7479 mo
674.347 31.1514 li
674.499 31.303 li
674.06 31.7422 li
673.751 31.7479 li
676.295 31.6849 mo
675.913 31.303 li
676.065 31.1514 li
676.589 31.6754 li
676.295 31.6849 li
675.206 30.5959 mo
675.054 30.4443 li
675.206 30.2927 li
675.358 30.4443 li
675.206 30.5959 li
.22327 .911742 .704219 .110567 cmyk
f
674.06 31.7422 mo
674.499 31.303 li
674.347 31.1514 li
675.054 30.4443 li
675.206 30.5959 li
675.358 30.4443 li
676.065 31.1514 li
675.913 31.303 li
676.295 31.6849 li
675.171 31.7215 li
674.06 31.7422 li
f
672.529 33.2727 mo
672.378 33.1212 li
673.751 31.7479 li
674.06 31.7422 li
672.529 33.2727 li
.123476 .979889 .923674 .0276799 cmyk
f
676.795 33.5987 mo
676.206 33.5987 li
676.206 33.2666 li
676.453 33.2573 li
676.795 33.5987 li
674.206 33.5987 mo
673.617 33.5987 li
673.875 33.3407 li
674.206 33.3315 li
674.206 33.5987 li
.0933547 .953857 .909819 .0115663 cmyk
f
676.206 33.5987 mo
674.206 33.5987 li
674.206 33.3315 li
675.262 33.3023 li
675.282 33.3015 li
676.206 33.2666 li
676.206 33.5987 li
.101442 .972717 .968963 .0153201 cmyk
f
673.804 34.5474 mo
673.236 33.9799 li
673.617 33.5987 li
674.206 33.5987 li
674.206 34.0988 li
676.206 34.0988 li
676.206 33.5987 li
676.795 33.5987 li
677.176 33.9798 li
676.682 34.4738 li
675.252 34.5203 li
675.232 34.5208 li
673.804 34.5474 li
.104646 .973602 .967712 .0170596 cmyk
f
676.206 34.0988 mo
674.206 34.0988 li
674.206 33.5987 li
676.206 33.5987 li
676.206 34.0988 li
.101625 .977569 .984863 .015259 cmyk
f
673.875 33.3407 mo
675.206 32.0101 li
676.453 33.2573 li
676.206 33.2666 li
675.282 33.3015 li
675.262 33.3023 li
674.206 33.3315 li
673.875 33.3407 li
.123476 .979889 .923674 .0276799 cmyk
f
677.883 33.2727 mo
677.816 33.2058 li
677.955 33.2006 li
677.883 33.2727 li
.0933547 .953857 .909819 .0115663 cmyk
f
677.816 33.2058 mo
676.295 31.6849 li
676.589 31.6754 li
677.99 33.0763 li
677.992 33.1633 li
677.955 33.2006 li
677.816 33.2058 li
.123476 .979889 .923674 .0276799 cmyk
f
673.236 33.9799 mo
672.529 33.2727 li
674.06 31.7422 li
675.171 31.7215 li
676.295 31.6849 li
677.816 33.2058 li
677.883 33.2727 li
677.176 33.9798 li
676.795 33.5987 li
676.453 33.2573 li
675.206 32.0101 li
673.875 33.3407 li
673.617 33.5987 li
673.236 33.9799 li
f
675.206 37.3637 mo
674.852 37.0102 li
672.529 34.6869 li
672.617 34.5989 li
673.855 34.5989 li
675.206 35.9496 li
676.557 34.5989 li
677.795 34.5989 li
677.883 34.6868 li
675.206 37.3637 li
674.852 36.3032 mo
675.206 36.6567 li
674.852 36.3032 li
678.971 33.5987 mo
678.209 33.5987 li
678 33.3895 li
677.994 33.1991 li
679.425 33.1451 li
678.971 33.5987 li
674.77 29.3142 mo
675.206 28.8784 li
675.614 29.2861 li
675.14 29.3039 li
674.77 29.3142 li
.0838026 .832731 .657679 .0052491 cmyk
f
677.795 34.5989 mo
676.557 34.5989 li
676.682 34.4738 li
677.639 34.4426 li
677.795 34.5989 li
673.855 34.5989 mo
672.617 34.5989 li
672.647 34.5689 li
673.804 34.5474 li
673.855 34.5989 li
678.59 33.9798 mo
678.209 33.5987 li
678.971 33.5987 li
678.59 33.9798 li
.0967422 .957885 .907469 .0132448 cmyk
f
677.994 33.1991 mo
677.992 33.1633 li
678.034 33.1212 li
677.99 33.0763 li
677.942 31.6313 li
676.589 31.6754 li
676.065 31.1514 li
676.772 30.4443 li
679.448 33.1212 li
679.425 33.1451 li
677.994 33.1991 li
672.31 31.7747 mo
673.64 30.4443 li
674.347 31.1514 li
673.751 31.7479 li
672.31 31.7747 li
675.358 30.4443 mo
675.206 30.2927 li
675.054 30.4443 li
674.347 29.7371 li
674.77 29.3142 li
675.14 29.3039 li
675.614 29.2861 li
676.065 29.7372 li
675.358 30.4443 li
.22327 .911742 .704219 .110567 cmyk
f
672.529 34.6869 mo
672.415 34.5732 li
672.647 34.5689 li
672.617 34.5989 li
672.529 34.6869 li
677.883 34.6868 mo
677.795 34.5989 li
677.639 34.4426 li
678.034 34.4298 li
678 33.3895 li
678.209 33.5987 li
678.59 33.9798 li
677.883 34.6868 li
676.065 31.1514 mo
675.358 30.4443 li
676.065 29.7372 li
676.772 30.4443 li
676.065 31.1514 li
674.347 31.1514 mo
673.64 30.4443 li
674.347 29.7371 li
675.054 30.4443 li
674.347 31.1514 li
f
672.203 33.5987 mo
671.441 33.5987 li
671.255 33.4132 li
672.421 33.381 li
672.203 33.5987 li
.0933547 .953857 .909819 .0115663 cmyk
f
671.822 33.9798 mo
671.441 33.5987 li
672.203 33.5987 li
671.822 33.9798 li
.104646 .973602 .967712 .0170596 cmyk
f
671.255 33.4132 mo
670.963 33.1212 li
672.31 31.7747 li
673.751 31.7479 li
672.378 33.1212 li
672.529 33.2727 li
672.421 33.381 li
671.255 33.4132 li
.123476 .979889 .923674 .0276799 cmyk
f
672.647 34.5689 mo
673.236 33.9799 li
673.804 34.5474 li
672.647 34.5689 li
676.682 34.4738 mo
677.176 33.9798 li
677.639 34.4426 li
676.682 34.4738 li
.104646 .973602 .967712 .0170596 cmyk
f
678 33.3895 mo
677.883 33.2727 li
677.955 33.2006 li
677.994 33.1991 li
678 33.3895 li
.0933547 .953857 .909819 .0115663 cmyk
f
677.955 33.2006 mo
677.992 33.1633 li
677.994 33.1991 li
677.955 33.2006 li
677.99 33.0763 mo
676.589 31.6754 li
677.942 31.6313 li
677.99 33.0763 li
.123476 .979889 .923674 .0276799 cmyk
f
672.415 34.5732 mo
671.822 33.9798 li
672.203 33.5987 li
672.421 33.381 li
672.529 33.2727 li
673.236 33.9799 li
672.647 34.5689 li
672.415 34.5732 li
677.639 34.4426 mo
677.176 33.9798 li
677.883 33.2727 li
678 33.3895 li
678.034 34.4298 li
677.639 34.4426 li
f
grestore
gsave
812.33 36.9118 mo
829.401 36.9118 li
829.401 19.8407 li
812.33 19.8407 li
812.33 36.9118 li
clp
820.009 30.3484 mo
819.515 29.854 li
822.216 29.854 li
821.722 30.3484 li
821.444 30.2783 821.157 30.242 820.866 30.242 cv
820.575 30.242 820.287 30.2783 820.009 30.3484 cv
823.208 28.854 mo
821.866 28.854 li
821.866 27.8985 li
822.253 27.8985 li
823.208 28.854 li
.0838026 .832731 .657679 .0052491 cmyk
f
821.866 28.854 mo
820.881 28.854 li
820.85 27.8985 li
821.866 27.8985 li
821.866 28.854 li
.0933547 .953857 .909819 .0115663 cmyk
f
822.216 29.854 mo
819.515 29.854 li
819.483 29.8221 li
820.911 29.7756 li
820.898 29.3542 li
821.866 29.3542 li
821.866 28.854 li
823.208 28.854 li
823.212 28.858 li
822.216 29.854 li
.0967422 .957885 .907469 .0132448 cmyk
f
821.866 29.3542 mo
820.898 29.3542 li
820.881 28.854 li
821.866 28.854 li
821.866 29.3542 li
.101442 .972717 .968963 .0153201 cmyk
f
822.253 27.8985 mo
821.866 27.8985 li
821.866 27.7681 li
822.113 27.7587 li
822.253 27.8985 li
.0967422 .957885 .907469 .0132448 cmyk
f
821.866 27.8985 mo
820.85 27.8985 li
820.847 27.8065 li
821.866 27.7681 li
821.866 27.8985 li
.101442 .972717 .968963 .0153201 cmyk
f
820.866 31.2047 mo
820.009 30.3484 li
820.287 30.2783 820.575 30.242 820.866 30.242 cv
821.157 30.242 821.444 30.2783 821.722 30.3484 cv
820.866 31.2047 li
.225345 1 1 .156985 cmyk
f
820.847 27.8065 mo
820.82 26.9771 li
820.386 26.9913 li
820.866 26.5114 li
822.113 27.7587 li
821.866 27.7681 li
820.847 27.8065 li
.22327 .911742 .704219 .110567 cmyk
f
823.212 28.858 mo
823.208 28.854 li
822.253 27.8985 li
822.113 27.7587 li
820.866 26.5114 li
820.386 26.9913 li
819.39 27.0237 li
820.866 25.5478 li
823.694 28.3763 li
823.212 28.858 li
f
819.866 28.854 mo
818.523 28.854 li
819.479 27.8985 li
819.866 27.8985 li
819.866 28.854 li
.0933547 .953857 .909819 .0115663 cmyk
f
820.881 28.854 mo
819.866 28.854 li
819.866 27.8985 li
820.85 27.8985 li
820.881 28.854 li
.101442 .972717 .968963 .0153201 cmyk
f
819.483 29.8221 mo
818.519 28.8581 li
818.523 28.854 li
819.866 28.854 li
819.866 29.3542 li
820.898 29.3542 li
820.911 29.7756 li
819.483 29.8221 li
.104646 .973602 .967712 .0170596 cmyk
f
820.898 29.3542 mo
819.866 29.3542 li
819.866 28.854 li
820.881 28.854 li
820.898 29.3542 li
.101625 .977569 .984863 .015259 cmyk
f
819.866 27.8985 mo
819.479 27.8985 li
819.521 27.8566 li
819.866 27.8436 li
819.866 27.8985 li
.104646 .973602 .967712 .0170596 cmyk
f
820.85 27.8985 mo
819.866 27.8985 li
819.866 27.8436 li
820.847 27.8065 li
820.85 27.8985 li
.101625 .977569 .984863 .015259 cmyk
f
819.521 27.8566 mo
820.386 26.9913 li
820.82 26.9771 li
820.847 27.8065 li
819.866 27.8436 li
819.521 27.8566 li
.123476 .979889 .923674 .0276799 cmyk
f
818.519 28.8581 mo
818.037 28.3763 li
819.39 27.0237 li
820.386 26.9913 li
819.521 27.8566 li
819.479 27.8985 li
818.523 28.854 li
818.519 28.8581 li
f
819.017 30.7701 mo
818.114 29.8667 li
818.503 29.854 li
819.515 29.854 li
820.009 30.3484 li
819.659 30.4368 819.324 30.5791 819.017 30.7701 cv
822.714 30.7701 mo
822.407 30.5791 822.072 30.4368 821.722 30.3484 cv
822.216 29.854 li
823.63 29.854 li
822.714 30.7701 li
824.63 28.854 mo
824.623 28.854 li
823.667 27.8985 li
824.63 27.8985 li
825.108 28.3763 li
824.63 28.854 li
823.014 26.282 mo
822.885 26.282 li
822.88 26.1483 li
823.014 26.282 li
.0838026 .832731 .657679 .0052491 cmyk
f
823.63 26.8985 mo
822.909 26.8985 li
822.885 26.282 li
823.014 26.282 li
823.63 26.8985 li
.22327 .911742 .704219 .110567 cmyk
f
823.63 29.854 mo
822.216 29.854 li
823.212 28.858 li
823.919 29.565 li
823.63 29.854 li
819.515 29.854 mo
818.503 29.854 li
819.483 29.8221 li
819.515 29.854 li
824.627 28.858 mo
824.623 28.854 li
824.63 28.854 li
824.627 28.858 li
.0967422 .957885 .907469 .0132448 cmyk
f
824.63 27.8985 mo
823.667 27.8985 li
823.051 27.2822 li
824.014 27.2822 li
824.63 27.8985 li
f
824.014 27.2822 mo
823.051 27.2822 li
822.918 27.1496 li
822.909 26.8985 li
823.63 26.8985 li
824.014 27.2822 li
.123476 .979889 .923674 .0276799 cmyk
f
820.866 32.6188 mo
820.512 32.2653 li
819.751 31.5041 li
820.094 31.3333 820.475 31.242 820.866 31.242 cv
821.256 31.242 821.637 31.3333 821.98 31.5042 cv
820.866 32.6188 li
820.512 31.5582 mo
820.866 31.9117 li
820.512 31.5582 li
.225345 1 1 .156985 cmyk
f
821.98 31.5042 mo
821.637 31.3333 821.256 31.242 820.866 31.242 cv
820.475 31.242 820.094 31.3333 819.751 31.5041 cv
819.017 30.7701 li
819.324 30.5791 819.659 30.4368 820.009 30.3484 cv
820.866 31.2047 li
821.722 30.3484 li
822.072 30.4368 822.407 30.5791 822.714 30.7701 cv
821.98 31.5042 li
f
822.918 27.1496 mo
821.573 25.8043 li
822.055 25.3226 li
822.88 26.1483 li
822.885 26.282 li
822.909 26.8985 li
822.918 27.1496 li
817.928 27.0712 mo
819.677 25.3226 li
820.159 25.8043 li
818.924 27.0388 li
817.928 27.0712 li
820.866 25.0972 mo
820.384 24.6154 li
820.866 24.1337 li
821.347 24.6155 li
820.866 25.0972 li
.22327 .911742 .704219 .110567 cmyk
f
823.919 29.565 mo
823.212 28.858 li
823.694 28.3763 li
820.866 25.5478 li
819.39 27.0237 li
818.924 27.0388 li
820.159 25.8043 li
819.677 25.3226 li
820.384 24.6154 li
820.866 25.0972 li
821.347 24.6155 li
822.055 25.3226 li
821.573 25.8043 li
822.918 27.1496 li
823.051 27.2822 li
823.667 27.8985 li
824.623 28.854 li
824.627 28.858 li
823.919 29.565 li
f
817.109 28.854 mo
817.101 28.854 li
816.623 28.3763 li
817.049 27.9499 li
818.051 27.9121 li
817.109 28.854 li
.0933547 .953857 .909819 .0115663 cmyk
f
817.105 28.858 mo
817.101 28.854 li
817.109 28.854 li
817.105 28.858 li
.104646 .973602 .967712 .0170596 cmyk
f
817.049 27.9499 mo
817.928 27.0712 li
818.924 27.0388 li
818.051 27.9121 li
817.049 27.9499 li
.123476 .979889 .923674 .0276799 cmyk
f
818.114 29.8667 mo
818.101 29.854 li
818.503 29.854 li
818.114 29.8667 li
.0933547 .953857 .909819 .0115663 cmyk
f
818.503 29.854 mo
818.101 29.854 li
817.812 29.5652 li
818.519 28.8581 li
819.483 29.8221 li
818.503 29.854 li
.104646 .973602 .967712 .0170596 cmyk
f
817.812 29.5652 mo
817.105 28.858 li
817.109 28.854 li
818.051 27.9121 li
818.924 27.0388 li
819.39 27.0237 li
818.037 28.3763 li
818.519 28.8581 li
817.812 29.5652 li
.123476 .979889 .923674 .0276799 cmyk
f
grestore
.8 lw
2 lc
0 lj
71.4464 407.967 mo
71.4464 6.58173 li
1 /0 /CSD get_res sepcs
1 sep
@
856.552 407.967 mo
856.552 6.58173 li
@
71.4464 407.967 mo
856.552 407.967 li
@
71.4464 6.58173 mo
856.552 6.58173 li
@
839.052 394.967 mo
432.881 394.967 li
431.291 394.966 430.193 394.573 429.484 393.864 cv
428.775 393.155 428.382 392.057 428.381 390.467 cv
428.381 365.436 li
461.881 365.436 li
461.881 368.272 li
460.038 370.114 li
452.72 370.114 li
452.72 372.914 li
460.038 372.914 li
461.881 374.757 li
461.881 383.514 li
457.881 383.514 li
457.881 384.014 li
457.881 384.514 li
467.881 384.514 li
467.881 383.514 li
463.881 383.514 li
463.881 374.757 li
467.123 371.514 li
463.881 368.272 li
463.881 365.436 li
843.552 365.436 li
843.552 390.467 li
843.551 392.057 843.159 393.155 842.449 393.864 cv
841.74 394.573 840.642 394.966 839.052 394.967 cv
482.401 370.114 mo
482.401 372.914 li
487.881 372.914 li
487.881 370.114 li
482.401 370.114 li
467.561 370.114 mo
467.561 372.914 li
477.921 372.914 li
477.921 370.114 li
467.561 370.114 li
437.881 370.114 mo
437.881 372.914 li
448.241 372.914 li
448.241 370.114 li
437.881 370.114 li
843.552 364.636 mo
463.881 364.636 li
463.881 359.514 li
467.881 359.514 li
467.881 358.514 li
457.881 358.514 li
457.881 359.014 li
457.881 359.514 li
461.881 359.514 li
461.881 364.636 li
428.381 364.636 li
428.381 321.092 li
843.552 321.092 li
843.552 364.636 li
843.552 320.292 mo
428.381 320.292 li
428.381 276.748 li
843.552 276.748 li
843.552 320.292 li
843.552 275.948 mo
428.381 275.948 li
428.381 246.155 li
428.382 244.565 428.775 243.467 429.484 242.758 cv
430.193 242.049 431.291 241.657 432.881 241.655 cv
839.052 241.655 li
840.642 241.657 841.74 242.049 842.449 242.758 cv
843.159 243.467 843.551 244.565 843.552 246.155 cv
843.552 275.948 li
0 0 0 0 cmyk
f
843.552 365.436 mo
463.881 365.436 li
463.881 364.636 li
843.552 364.636 li
843.552 365.436 li
461.881 365.436 mo
428.381 365.436 li
428.381 364.636 li
461.881 364.636 li
461.881 365.436 li
.0523384 .0376287 .0376287 0 cmyk
f
843.552 321.092 mo
428.381 321.092 li
428.381 320.292 li
843.552 320.292 li
843.552 321.092 li
f
843.552 276.748 mo
428.381 276.748 li
428.381 275.948 li
843.552 275.948 li
843.552 276.748 li
f
839.063 395.967 mo
839.059 395.967 839.056 395.967 839.052 395.967 cv
432.881 395.967 li
432.877 395.967 432.873 395.967 432.87 395.967 cv
431.131 395.967 429.733 395.526 428.777 394.571 cv
427.82 393.613 427.379 392.211 427.381 390.467 cv
427.381 365.436 li
428.381 365.436 li
428.381 390.467 li
428.382 392.057 428.775 393.155 429.484 393.864 cv
430.193 394.573 431.291 394.966 432.881 394.967 cv
432.881 394.967 li
839.052 394.967 li
840.642 394.966 841.74 394.573 842.449 393.864 cv
843.159 393.155 843.551 392.057 843.552 390.467 cv
843.552 365.436 li
844.553 365.436 li
844.553 390.467 li
844.554 392.211 844.113 393.613 843.156 394.571 cv
842.2 395.526 840.802 395.967 839.063 395.967 cv
844.553 364.636 mo
843.552 364.636 li
843.552 321.092 li
844.553 321.092 li
844.553 364.636 li
428.381 364.636 mo
427.381 364.636 li
427.381 321.092 li
428.381 321.092 li
428.381 364.636 li
844.553 320.292 mo
843.552 320.292 li
843.552 276.748 li
844.553 276.748 li
844.553 320.292 li
428.381 320.292 mo
427.381 320.292 li
427.381 276.748 li
428.381 276.748 li
428.381 320.292 li
844.553 275.948 mo
843.552 275.948 li
843.552 246.155 li
843.551 244.565 843.159 243.467 842.449 242.758 cv
841.74 242.049 840.642 241.657 839.052 241.655 cv
432.881 241.655 li
431.291 241.657 430.193 242.049 429.484 242.758 cv
428.775 243.467 428.382 244.565 428.381 246.155 cv
428.381 275.948 li
427.381 275.948 li
427.381 246.155 li
427.379 244.411 427.82 243.009 428.777 242.051 cv
429.732 241.096 431.131 240.655 432.869 240.655 cv
432.873 240.655 432.876 240.655 432.881 240.655 cv
839.052 240.655 li
839.056 240.655 839.06 240.655 839.064 240.655 cv
840.802 240.655 842.201 241.096 843.156 242.051 cv
844.113 243.009 844.554 244.411 844.553 246.155 cv
844.553 275.948 li
.15433 .116732 .12192 0 cmyk
f
844.553 365.436 mo
843.552 365.436 li
843.552 364.636 li
844.553 364.636 li
844.553 365.436 li
428.381 365.436 mo
427.381 365.436 li
427.381 364.636 li
428.381 364.636 li
428.381 365.436 li
.220584 .17322 .178317 0 cmyk
f
844.553 321.092 mo
843.552 321.092 li
843.552 320.292 li
844.553 320.292 li
844.553 321.092 li
428.381 321.092 mo
427.381 321.092 li
427.381 320.292 li
428.381 320.292 li
428.381 321.092 li
f
844.553 276.748 mo
843.552 276.748 li
843.552 275.948 li
844.553 275.948 li
844.553 276.748 li
428.381 276.748 mo
427.381 276.748 li
427.381 275.948 li
428.381 275.948 li
428.381 276.748 li
f
2 lw
0 lc
1 lj
462.881 273.905 mo
462.881 248.905 li
1 /0 /CSD get_res sepcs
1 sep
@
467.881 273.905 mo
457.881 273.905 li
f
1 lw
467.881 273.905 mo
457.881 273.905 li
@
467.881 248.905 mo
457.881 248.905 li
f
467.881 248.905 mo
457.881 248.905 li
@
3 lw
2 lc
437.881 261.405 mo
487.881 261.405 li
@
462.881 264.405 mo
463.676 264.405 464.439 264.089 465.002 263.526 cv
465.564 262.964 465.881 262.2 465.881 261.405 cv
465.881 260.609 465.564 259.846 465.002 259.284 cv
464.439 258.721 463.676 258.405 462.881 258.405 cv
462.085 258.405 461.322 258.721 460.759 259.284 cv
460.197 259.846 459.881 260.609 459.881 261.405 cv
459.881 262.2 460.197 262.964 460.759 263.526 cv
461.322 264.089 462.085 264.405 462.881 264.405 cv
cp
f
1 lw
0 lc
462.881 264.405 mo
463.676 264.405 464.439 264.089 465.002 263.526 cv
465.564 262.964 465.881 262.2 465.881 261.405 cv
465.881 260.609 465.564 259.846 465.002 259.284 cv
464.439 258.721 463.676 258.405 462.881 258.405 cv
462.085 258.405 461.322 258.721 460.759 259.284 cv
460.197 259.846 459.881 260.609 459.881 261.405 cv
459.881 262.2 460.197 262.964 460.759 263.526 cv
461.322 264.089 462.085 264.405 462.881 264.405 cv
cp
@
512.806 253.955 mo
512.806 260.805 li
515.906 260.805 li
517.056 260.805 517.931 260.53 518.556 259.93 cv
519.181 259.33 519.506 258.48 519.506 257.38 cv
519.506 256.28 519.181 255.455 518.556 254.855 cv
517.931 254.255 517.056 253.955 515.906 253.955 cv
512.806 253.955 li
510.331 251.93 mo
515.906 251.93 li
517.931 251.93 519.481 252.405 520.531 253.33 cv
521.581 254.255 522.106 255.605 522.106 257.38 cv
522.106 259.18 521.581 260.555 520.531 261.455 cv
519.481 262.38 517.931 262.83 515.906 262.83 cv
512.806 262.83 li
512.806 270.155 li
510.331 270.155 li
510.331 251.93 li
f
531.53 263.28 mo
529.705 263.28 528.455 263.505 527.755 263.905 cv
527.055 264.33 526.705 265.03 526.705 266.03 cv
526.705 266.83 526.955 267.48 527.48 267.93 cv
528.005 268.405 528.73 268.63 529.63 268.63 cv
530.88 268.63 531.88 268.205 532.63 267.305 cv
533.38 266.43 533.755 265.255 533.755 263.78 cv
533.755 263.28 li
531.53 263.28 li
536.005 262.355 mo
536.005 270.155 li
533.755 270.155 li
533.755 268.08 li
533.23 268.93 532.58 269.53 531.83 269.905 cv
531.08 270.28 530.13 270.48 529.03 270.48 cv
527.63 270.48 526.505 270.105 525.68 269.33 cv
524.855 268.555 524.455 267.505 524.455 266.18 cv
524.455 264.655 524.955 263.505 526.005 262.705 cv
527.03 261.93 528.555 261.53 530.605 261.53 cv
533.755 261.53 li
533.755 261.305 li
533.755 260.28 533.405 259.48 532.73 258.905 cv
532.055 258.355 531.105 258.055 529.88 258.055 cv
529.08 258.055 528.33 258.155 527.58 258.355 cv
526.83 258.555 526.13 258.83 525.455 259.18 cv
525.455 257.105 li
526.255 256.805 527.055 256.555 527.83 256.405 cv
528.605 256.255 529.355 256.155 530.105 256.155 cv
532.08 256.155 533.555 256.68 534.53 257.705 cv
535.505 258.73 536.005 260.28 536.005 262.355 cv
f
548.556 258.58 mo
548.306 258.43 548.031 258.33 547.731 258.255 cv
547.431 258.205 547.106 258.155 546.756 258.155 cv
545.481 258.155 544.506 258.58 543.831 259.405 cv
543.131 260.23 542.806 261.405 542.806 262.955 cv
542.806 270.155 li
540.556 270.155 li
540.556 256.48 li
542.806 256.48 li
542.806 258.605 li
543.256 257.78 543.881 257.155 544.631 256.755 cv
545.381 256.355 546.306 256.155 547.406 256.155 cv
547.556 256.155 547.731 256.18 547.931 256.18 cv
548.106 256.205 548.306 256.23 548.556 256.28 cv
548.556 258.58 li
f
560.756 257.005 mo
560.756 259.105 li
560.106 258.755 559.481 258.505 558.831 258.33 cv
558.181 258.155 557.556 258.055 556.906 258.055 cv
555.456 258.055 554.306 258.53 553.506 259.455 cv
552.706 260.38 552.306 261.68 552.306 263.33 cv
552.306 265.005 552.706 266.305 553.506 267.23 cv
554.306 268.155 555.456 268.605 556.906 268.605 cv
557.556 268.605 558.181 268.53 558.831 268.355 cv
559.481 268.18 560.106 267.905 560.756 267.555 cv
560.756 269.63 li
560.106 269.93 559.456 270.155 558.806 270.28 cv
558.131 270.405 557.406 270.48 556.656 270.48 cv
554.606 270.48 552.956 269.855 551.756 268.555 cv
550.531 267.28 549.931 265.53 549.931 263.33 cv
549.931 261.105 550.531 259.355 551.756 258.08 cv
552.981 256.805 554.656 256.155 556.806 256.155 cv
557.506 256.155 558.181 256.23 558.831 256.38 cv
559.481 256.53 560.131 256.73 560.756 257.005 cv
f
576.356 262.755 mo
576.356 263.855 li
566.031 263.855 li
566.131 265.405 566.581 266.605 567.431 267.405 cv
568.256 268.205 569.406 268.605 570.906 268.605 cv
571.756 268.605 572.606 268.505 573.406 268.305 cv
574.206 268.105 575.031 267.78 575.831 267.33 cv
575.831 269.455 li
575.031 269.805 574.206 270.08 573.356 270.23 cv
572.506 270.38 571.631 270.48 570.781 270.48 cv
568.581 270.48 566.856 269.855 565.581 268.605 cv
564.306 267.355 563.681 265.63 563.681 263.455 cv
563.681 261.23 564.281 259.455 565.481 258.13 cv
566.681 256.83 568.331 256.155 570.381 256.155 cv
572.231 256.155 573.681 256.755 574.756 257.93 cv
575.806 259.13 576.356 260.73 576.356 262.755 cv
574.106 262.105 mo
574.081 260.88 573.731 259.905 573.081 259.155 cv
572.406 258.43 571.506 258.055 570.406 258.055 cv
569.156 258.055 568.156 258.43 567.406 259.13 cv
566.656 259.83 566.206 260.83 566.106 262.105 cv
574.106 262.105 li
f
580.031 251.155 mo
582.281 251.155 li
582.281 270.155 li
580.031 270.155 li
580.031 251.155 li
f
586.981 251.155 mo
589.231 251.155 li
589.231 270.155 li
586.981 270.155 li
586.981 251.155 li
f
600.156 263.28 mo
598.331 263.28 597.081 263.505 596.381 263.905 cv
595.681 264.33 595.331 265.03 595.331 266.03 cv
595.331 266.83 595.581 267.48 596.106 267.93 cv
596.631 268.405 597.356 268.63 598.256 268.63 cv
599.506 268.63 600.506 268.205 601.256 267.305 cv
602.006 266.43 602.381 265.255 602.381 263.78 cv
602.381 263.28 li
600.156 263.28 li
604.631 262.355 mo
604.631 270.155 li
602.381 270.155 li
602.381 268.08 li
601.856 268.93 601.206 269.53 600.456 269.905 cv
599.706 270.28 598.756 270.48 597.656 270.48 cv
596.256 270.48 595.131 270.105 594.306 269.33 cv
593.481 268.555 593.081 267.505 593.081 266.18 cv
593.081 264.655 593.581 263.505 594.631 262.705 cv
595.656 261.93 597.181 261.53 599.231 261.53 cv
602.381 261.53 li
602.381 261.305 li
602.381 260.28 602.031 259.48 601.356 258.905 cv
600.681 258.355 599.731 258.055 598.506 258.055 cv
597.706 258.055 596.956 258.155 596.206 258.355 cv
595.456 258.555 594.756 258.83 594.081 259.18 cv
594.081 257.105 li
594.881 256.805 595.681 256.555 596.456 256.405 cv
597.231 256.255 597.981 256.155 598.731 256.155 cv
600.706 256.155 602.181 256.68 603.156 257.705 cv
604.131 258.73 604.631 260.28 604.631 262.355 cv
f
611.481 252.605 mo
611.481 256.48 li
616.106 256.48 li
616.106 258.23 li
611.481 258.23 li
611.481 265.655 li
611.481 266.78 611.631 267.505 611.931 267.805 cv
612.231 268.13 612.856 268.28 613.806 268.28 cv
616.106 268.28 li
616.106 270.155 li
613.806 270.155 li
612.056 270.155 610.856 269.83 610.206 269.18 cv
609.556 268.53 609.231 267.355 609.231 265.655 cv
609.231 258.23 li
607.581 258.23 li
607.581 256.48 li
609.231 256.48 li
609.231 252.605 li
611.481 252.605 li
f
619.056 256.48 mo
621.306 256.48 li
621.306 270.155 li
619.056 270.155 li
619.056 256.48 li
619.056 251.155 mo
621.306 251.155 li
621.306 254.005 li
619.056 254.005 li
619.056 251.155 li
f
631.306 258.055 mo
630.106 258.055 629.156 258.53 628.456 259.48 cv
627.756 260.43 627.406 261.705 627.406 263.33 cv
627.406 264.98 627.731 266.255 628.431 267.205 cv
629.131 268.155 630.081 268.605 631.306 268.605 cv
632.506 268.605 633.456 268.155 634.156 267.205 cv
634.856 266.255 635.206 264.98 635.206 263.33 cv
635.206 261.73 634.856 260.43 634.156 259.48 cv
633.456 258.53 632.506 258.055 631.306 258.055 cv
631.306 256.155 mo
633.256 256.155 634.781 256.805 635.906 258.055 cv
637.006 259.33 637.581 261.08 637.581 263.33 cv
637.581 265.58 637.006 267.33 635.906 268.58 cv
634.781 269.855 633.256 270.48 631.306 270.48 cv
629.331 270.48 627.781 269.855 626.681 268.58 cv
625.581 267.33 625.031 265.58 625.031 263.33 cv
625.031 261.08 625.581 259.33 626.681 258.055 cv
627.781 256.805 629.331 256.155 631.306 256.155 cv
f
652.681 261.905 mo
652.681 270.155 li
650.431 270.155 li
650.431 261.98 li
650.431 260.68 650.156 259.73 649.656 259.08 cv
649.156 258.43 648.406 258.105 647.406 258.105 cv
646.181 258.105 645.231 258.505 644.531 259.28 cv
643.831 260.055 643.481 261.105 643.481 262.43 cv
643.481 270.155 li
641.231 270.155 li
641.231 256.48 li
643.481 256.48 li
643.481 258.605 li
644.006 257.805 644.631 257.18 645.381 256.78 cv
646.106 256.38 646.956 256.155 647.906 256.155 cv
649.456 256.155 650.656 256.655 651.456 257.63 cv
652.256 258.605 652.681 260.03 652.681 261.905 cv
f
670.406 258.055 mo
669.206 258.055 668.256 258.53 667.556 259.48 cv
666.856 260.43 666.506 261.705 666.506 263.33 cv
666.506 264.98 666.831 266.255 667.531 267.205 cv
668.231 268.155 669.181 268.605 670.406 268.605 cv
671.606 268.605 672.556 268.155 673.256 267.205 cv
673.956 266.255 674.306 264.98 674.306 263.33 cv
674.306 261.73 673.956 260.43 673.256 259.48 cv
672.556 258.53 671.606 258.055 670.406 258.055 cv
670.406 256.155 mo
672.356 256.155 673.881 256.805 675.006 258.055 cv
676.106 259.33 676.681 261.08 676.681 263.33 cv
676.681 265.58 676.106 267.33 675.006 268.58 cv
673.881 269.855 672.356 270.48 670.406 270.48 cv
668.431 270.48 666.881 269.855 665.781 268.58 cv
664.681 267.33 664.131 265.58 664.131 263.33 cv
664.131 261.08 664.681 259.33 665.781 258.055 cv
666.881 256.805 668.431 256.155 670.406 256.155 cv
f
691.781 261.905 mo
691.781 270.155 li
689.531 270.155 li
689.531 261.98 li
689.531 260.68 689.256 259.73 688.756 259.08 cv
688.256 258.43 687.506 258.105 686.506 258.105 cv
685.281 258.105 684.331 258.505 683.631 259.28 cv
682.931 260.055 682.581 261.105 682.581 262.43 cv
682.581 270.155 li
680.331 270.155 li
680.331 256.48 li
682.581 256.48 li
682.581 258.605 li
683.106 257.805 683.731 257.18 684.481 256.78 cv
685.206 256.38 686.056 256.155 687.006 256.155 cv
688.556 256.155 689.756 256.655 690.556 257.63 cv
691.356 258.605 691.781 260.03 691.781 261.905 cv
f
696.256 251.155 mo
698.506 251.155 li
698.506 270.155 li
696.256 270.155 li
696.256 251.155 li
f
708.906 271.405 mo
708.256 273.005 707.631 274.08 707.031 274.58 cv
706.431 275.08 705.631 275.33 704.631 275.33 cv
702.831 275.33 li
702.831 273.455 li
704.156 273.455 li
704.756 273.455 705.231 273.305 705.581 273.005 cv
705.931 272.705 706.306 272.03 706.731 270.93 cv
707.131 269.93 li
701.606 256.48 li
703.981 256.48 li
708.256 267.18 li
712.531 256.48 li
714.906 256.48 li
708.906 271.405 li
f
731.355 251.18 mo
730.255 253.08 729.455 254.93 728.93 256.755 cv
728.38 258.58 728.13 260.43 728.13 262.305 cv
728.13 264.205 728.38 266.055 728.93 267.88 cv
729.455 269.73 730.255 271.555 731.355 273.43 cv
729.405 273.43 li
728.18 271.505 727.255 269.655 726.655 267.805 cv
726.055 265.955 725.755 264.13 725.755 262.305 cv
725.755 260.505 726.055 258.68 726.655 256.83 cv
727.255 254.98 728.155 253.105 729.405 251.18 cv
731.355 251.18 li
f
738.28 261.455 mo
738.28 268.13 li
742.23 268.13 li
743.555 268.13 744.53 267.855 745.18 267.305 cv
745.805 266.755 746.13 265.93 746.13 264.78 cv
746.13 263.655 745.805 262.83 745.18 262.28 cv
744.53 261.73 743.555 261.455 742.23 261.455 cv
738.28 261.455 li
738.28 253.955 mo
738.28 259.455 li
741.93 259.455 li
743.13 259.455 744.005 259.23 744.605 258.78 cv
745.205 258.33 745.505 257.655 745.505 256.705 cv
745.505 255.805 745.205 255.105 744.605 254.655 cv
744.005 254.205 743.13 253.955 741.93 253.955 cv
738.28 253.955 li
735.805 251.93 mo
742.105 251.93 li
743.98 251.93 745.43 252.33 746.455 253.105 cv
747.455 253.905 747.98 255.005 747.98 256.43 cv
747.98 257.555 747.705 258.455 747.18 259.105 cv
746.655 259.755 745.905 260.18 744.905 260.33 cv
746.105 260.605 747.055 261.155 747.73 261.98 cv
748.38 262.805 748.73 263.83 748.73 265.055 cv
748.73 266.705 748.155 267.955 747.055 268.83 cv
745.955 269.73 744.38 270.155 742.355 270.155 cv
735.805 270.155 li
735.805 251.93 li
f
752.956 251.93 mo
755.431 251.93 li
755.431 268.08 li
764.306 268.08 li
764.306 270.155 li
752.956 270.155 li
752.956 251.93 li
f
765.656 262.305 mo
772.231 262.305 li
772.231 264.305 li
765.656 264.305 li
765.656 262.305 li
f
778.381 253.955 mo
778.381 260.805 li
781.481 260.805 li
782.631 260.805 783.506 260.53 784.131 259.93 cv
784.756 259.33 785.081 258.48 785.081 257.38 cv
785.081 256.28 784.756 255.455 784.131 254.855 cv
783.506 254.255 782.631 253.955 781.481 253.955 cv
778.381 253.955 li
775.906 251.93 mo
781.481 251.93 li
783.506 251.93 785.056 252.405 786.106 253.33 cv
787.156 254.255 787.681 255.605 787.681 257.38 cv
787.681 259.18 787.156 260.555 786.106 261.455 cv
785.056 262.38 783.506 262.83 781.481 262.83 cv
778.381 262.83 li
778.381 270.155 li
775.906 270.155 li
775.906 251.93 li
f
797.106 263.28 mo
795.281 263.28 794.031 263.505 793.331 263.905 cv
792.63 264.33 792.281 265.03 792.281 266.03 cv
792.281 266.83 792.531 267.48 793.056 267.93 cv
793.581 268.405 794.306 268.63 795.206 268.63 cv
796.456 268.63 797.456 268.205 798.206 267.305 cv
798.956 266.43 799.331 265.255 799.331 263.78 cv
799.331 263.28 li
797.106 263.28 li
801.581 262.355 mo
801.581 270.155 li
799.331 270.155 li
799.331 268.08 li
798.806 268.93 798.156 269.53 797.406 269.905 cv
796.656 270.28 795.706 270.48 794.606 270.48 cv
793.206 270.48 792.081 270.105 791.255 269.33 cv
790.431 268.555 790.031 267.505 790.031 266.18 cv
790.031 264.655 790.531 263.505 791.581 262.705 cv
792.606 261.93 794.13 261.53 796.181 261.53 cv
799.331 261.53 li
799.331 261.305 li
799.331 260.28 798.981 259.48 798.306 258.905 cv
797.63 258.355 796.681 258.055 795.456 258.055 cv
794.656 258.055 793.906 258.155 793.156 258.355 cv
792.406 258.555 791.706 258.83 791.031 259.18 cv
791.031 257.105 li
791.831 256.805 792.63 256.555 793.406 256.405 cv
794.181 256.255 794.931 256.155 795.681 256.155 cv
797.656 256.155 799.13 256.68 800.106 257.705 cv
801.081 258.73 801.581 260.28 801.581 262.355 cv
f
814.131 258.58 mo
813.881 258.43 813.606 258.33 813.306 258.255 cv
813.006 258.205 812.681 258.155 812.331 258.155 cv
811.056 258.155 810.081 258.58 809.406 259.405 cv
808.706 260.23 808.381 261.405 808.381 262.955 cv
808.381 270.155 li
806.131 270.155 li
806.131 256.48 li
808.381 256.48 li
808.381 258.605 li
808.831 257.78 809.456 257.155 810.206 256.755 cv
810.956 256.355 811.881 256.155 812.981 256.155 cv
813.131 256.155 813.306 256.18 813.506 256.18 cv
813.681 256.205 813.881 256.23 814.131 256.28 cv
814.131 258.58 li
f
826.331 257.005 mo
826.331 259.105 li
825.681 258.755 825.056 258.505 824.406 258.33 cv
823.756 258.155 823.131 258.055 822.481 258.055 cv
821.031 258.055 819.881 258.53 819.081 259.455 cv
818.281 260.38 817.881 261.68 817.881 263.33 cv
817.881 265.005 818.281 266.305 819.081 267.23 cv
819.881 268.155 821.031 268.605 822.481 268.605 cv
823.131 268.605 823.756 268.53 824.406 268.355 cv
825.056 268.18 825.681 267.905 826.331 267.555 cv
826.331 269.63 li
825.681 269.93 825.031 270.155 824.381 270.28 cv
823.706 270.405 822.981 270.48 822.231 270.48 cv
820.181 270.48 818.531 269.855 817.331 268.555 cv
816.106 267.28 815.506 265.53 815.506 263.33 cv
815.506 261.105 816.106 259.355 817.331 258.08 cv
818.556 256.805 820.231 256.155 822.381 256.155 cv
823.081 256.155 823.756 256.23 824.406 256.38 cv
825.056 256.53 825.706 256.73 826.331 257.005 cv
f
829.881 251.18 mo
831.831 251.18 li
833.031 253.105 833.956 254.98 834.556 256.83 cv
835.156 258.68 835.481 260.505 835.481 262.305 cv
835.481 264.13 835.156 265.955 834.556 267.805 cv
833.956 269.655 833.031 271.505 831.831 273.43 cv
829.881 273.43 li
830.956 271.555 831.756 269.73 832.306 267.88 cv
832.831 266.055 833.106 264.205 833.106 262.305 cv
833.106 260.43 832.831 258.58 832.306 256.755 cv
831.756 254.93 830.956 253.08 829.881 251.18 cv
f
2.8 lw
462.881 310.608 mo
462.881 285.608 li
.801419 .109255 1 .0133364 cmyk
@
2 lc
437.881 298.108 mo
487.881 298.108 li
@
460.381 300.608 mo
465.381 300.608 li
465.381 295.608 li
460.381 295.608 li
cp
f
1 lw
0 lc
0 lj
460.381 300.608 mo
465.381 300.608 li
465.381 295.608 li
460.381 295.608 li
cp
@
518.981 298.308 mo
519.506 298.508 520.031 298.883 520.531 299.458 cv
521.031 300.058 521.531 300.858 522.031 301.883 cv
524.531 306.858 li
521.881 306.858 li
519.556 302.183 li
518.956 300.983 518.356 300.158 517.806 299.758 cv
517.231 299.358 516.456 299.158 515.481 299.158 cv
512.806 299.158 li
512.806 306.858 li
510.331 306.858 li
510.331 288.633 li
515.906 288.633 li
517.981 288.633 519.531 289.083 520.556 289.933 cv
521.581 290.808 522.106 292.133 522.106 293.883 cv
522.106 295.033 521.831 296.008 521.306 296.758 cv
520.756 297.508 519.981 298.033 518.981 298.308 cv
512.806 290.658 mo
512.806 297.133 li
515.906 297.133 li
517.081 297.133 517.981 296.858 518.581 296.308 cv
519.181 295.758 519.506 294.958 519.506 293.883 cv
519.506 292.833 519.181 292.033 518.581 291.483 cv
517.981 290.933 517.081 290.658 515.906 290.658 cv
512.806 290.658 li
1 /0 /CSD get_res sepcs
1 sep
f
539.306 299.458 mo
539.306 300.558 li
528.981 300.558 li
529.081 302.108 529.531 303.308 530.381 304.108 cv
531.206 304.908 532.356 305.308 533.856 305.308 cv
534.706 305.308 535.556 305.208 536.356 305.008 cv
537.156 304.808 537.981 304.483 538.781 304.033 cv
538.781 306.158 li
537.981 306.508 537.156 306.783 536.306 306.933 cv
535.456 307.083 534.581 307.183 533.731 307.183 cv
531.531 307.183 529.806 306.558 528.531 305.308 cv
527.256 304.058 526.631 302.333 526.631 300.158 cv
526.631 297.933 527.231 296.158 528.431 294.833 cv
529.631 293.533 531.281 292.858 533.331 292.858 cv
535.181 292.858 536.631 293.458 537.706 294.633 cv
538.756 295.833 539.306 297.433 539.306 299.458 cv
537.056 298.808 mo
537.031 297.583 536.681 296.608 536.031 295.858 cv
535.356 295.133 534.456 294.758 533.356 294.758 cv
532.106 294.758 531.106 295.133 530.356 295.833 cv
529.606 296.533 529.156 297.533 529.056 298.808 cv
537.056 298.808 li
f
551.981 299.858 mo
551.981 298.258 551.631 296.983 550.981 296.083 cv
550.306 295.183 549.356 294.733 548.156 294.733 cv
546.956 294.733 546.006 295.183 545.331 296.083 cv
544.656 296.983 544.331 298.258 544.331 299.858 cv
544.331 301.483 544.656 302.733 545.331 303.633 cv
546.006 304.533 546.956 304.983 548.156 304.983 cv
549.356 304.983 550.306 304.533 550.981 303.633 cv
551.631 302.733 551.981 301.483 551.981 299.858 cv
554.231 305.158 mo
554.231 307.458 553.706 309.183 552.681 310.333 cv
551.631 311.458 550.056 312.033 547.931 312.033 cv
547.131 312.033 546.406 311.958 545.706 311.858 cv
545.006 311.733 544.306 311.558 543.656 311.308 cv
543.656 309.133 li
544.306 309.483 544.956 309.733 545.606 309.908 cv
546.256 310.083 546.906 310.183 547.581 310.183 cv
549.031 310.183 550.131 309.783 550.881 309.033 cv
551.606 308.258 551.981 307.108 551.981 305.558 cv
551.981 304.458 li
551.506 305.258 550.906 305.858 550.181 306.258 cv
549.456 306.658 548.606 306.858 547.606 306.858 cv
545.906 306.858 544.556 306.233 543.531 304.958 cv
542.506 303.683 542.006 301.983 542.006 299.858 cv
542.006 297.758 542.506 296.058 543.531 294.783 cv
544.556 293.508 545.906 292.858 547.606 292.858 cv
548.606 292.858 549.456 293.058 550.181 293.458 cv
550.906 293.858 551.506 294.458 551.981 295.258 cv
551.981 293.183 li
554.231 293.183 li
554.231 305.158 li
f
558.856 293.183 mo
561.106 293.183 li
561.106 306.858 li
558.856 306.858 li
558.856 293.183 li
558.856 287.858 mo
561.106 287.858 li
561.106 290.708 li
558.856 290.708 li
558.856 287.858 li
f
574.531 293.583 mo
574.531 295.708 li
573.881 295.408 573.231 295.158 572.556 294.983 cv
571.856 294.833 571.156 294.733 570.431 294.733 cv
569.306 294.733 568.456 294.908 567.906 295.258 cv
567.356 295.608 567.081 296.108 567.081 296.783 cv
567.081 297.308 567.281 297.708 567.681 298.008 cv
568.081 298.308 568.881 298.608 570.081 298.858 cv
570.856 299.033 li
572.456 299.383 573.581 299.883 574.256 300.483 cv
574.906 301.108 575.256 301.983 575.256 303.083 cv
575.256 304.358 574.756 305.358 573.756 306.083 cv
572.756 306.833 571.356 307.183 569.606 307.183 cv
568.856 307.183 568.106 307.108 567.306 306.983 cv
566.506 306.858 565.681 306.658 564.806 306.358 cv
564.806 304.033 li
565.631 304.483 566.456 304.808 567.256 305.008 cv
568.056 305.233 568.856 305.333 569.656 305.333 cv
570.706 305.333 571.531 305.158 572.106 304.808 cv
572.656 304.458 572.956 303.933 572.956 303.258 cv
572.956 302.658 572.731 302.183 572.331 301.858 cv
571.931 301.533 571.031 301.208 569.631 300.908 cv
568.856 300.733 li
567.456 300.433 566.431 299.983 565.831 299.383 cv
565.206 298.783 564.906 297.958 564.906 296.883 cv
564.906 295.608 565.356 294.608 566.256 293.908 cv
567.156 293.208 568.456 292.858 570.156 292.858 cv
570.981 292.858 571.756 292.933 572.506 293.058 cv
573.231 293.183 573.906 293.358 574.531 293.583 cv
f
581.056 289.308 mo
581.056 293.183 li
585.681 293.183 li
585.681 294.933 li
581.056 294.933 li
581.056 302.358 li
581.056 303.483 581.206 304.208 581.506 304.508 cv
581.806 304.833 582.431 304.983 583.381 304.983 cv
585.681 304.983 li
585.681 306.858 li
583.381 306.858 li
581.631 306.858 580.431 306.533 579.781 305.883 cv
579.131 305.233 578.806 304.058 578.806 302.358 cv
578.806 294.933 li
577.156 294.933 li
577.156 293.183 li
578.806 293.183 li
578.806 289.308 li
581.056 289.308 li
f
596.556 295.283 mo
596.306 295.133 596.031 295.033 595.731 294.958 cv
595.431 294.908 595.106 294.858 594.756 294.858 cv
593.481 294.858 592.506 295.283 591.831 296.108 cv
591.131 296.933 590.806 298.108 590.806 299.658 cv
590.806 306.858 li
588.556 306.858 li
588.556 293.183 li
590.806 293.183 li
590.806 295.308 li
591.256 294.483 591.881 293.858 592.631 293.458 cv
593.381 293.058 594.306 292.858 595.406 292.858 cv
595.556 292.858 595.731 292.883 595.931 292.883 cv
596.106 292.908 596.306 292.933 596.556 292.983 cv
596.556 295.283 li
f
605.13 299.983 mo
603.305 299.983 602.055 300.208 601.355 300.608 cv
600.655 301.033 600.305 301.733 600.305 302.733 cv
600.305 303.533 600.555 304.183 601.081 304.633 cv
601.605 305.108 602.331 305.333 603.23 305.333 cv
604.48 305.333 605.48 304.908 606.23 304.008 cv
606.98 303.133 607.355 301.958 607.355 300.483 cv
607.355 299.983 li
605.13 299.983 li
609.605 299.058 mo
609.605 306.858 li
607.355 306.858 li
607.355 304.783 li
606.831 305.633 606.18 306.233 605.43 306.608 cv
604.68 306.983 603.73 307.183 602.63 307.183 cv
601.23 307.183 600.105 306.808 599.28 306.033 cv
598.456 305.258 598.055 304.208 598.055 302.883 cv
598.055 301.358 598.555 300.208 599.605 299.408 cv
600.63 298.633 602.155 298.233 604.206 298.233 cv
607.355 298.233 li
607.355 298.008 li
607.355 296.983 607.005 296.183 606.331 295.608 cv
605.655 295.058 604.706 294.758 603.48 294.758 cv
602.68 294.758 601.93 294.858 601.18 295.058 cv
600.43 295.258 599.73 295.533 599.055 295.883 cv
599.055 293.808 li
599.855 293.508 600.655 293.258 601.43 293.108 cv
602.206 292.958 602.956 292.858 603.706 292.858 cv
605.68 292.858 607.155 293.383 608.13 294.408 cv
609.105 295.433 609.605 296.983 609.605 299.058 cv
f
616.456 289.308 mo
616.456 293.183 li
621.081 293.183 li
621.081 294.933 li
616.456 294.933 li
616.456 302.358 li
616.456 303.483 616.606 304.208 616.906 304.508 cv
617.206 304.833 617.831 304.983 618.781 304.983 cv
621.081 304.983 li
621.081 306.858 li
618.781 306.858 li
617.031 306.858 615.831 306.533 615.181 305.883 cv
614.531 305.233 614.206 304.058 614.206 302.358 cv
614.206 294.933 li
612.556 294.933 li
612.556 293.183 li
614.206 293.183 li
614.206 289.308 li
616.456 289.308 li
f
624.031 293.183 mo
626.281 293.183 li
626.281 306.858 li
624.031 306.858 li
624.031 293.183 li
624.031 287.858 mo
626.281 287.858 li
626.281 290.708 li
624.031 290.708 li
624.031 287.858 li
f
636.281 294.758 mo
635.081 294.758 634.131 295.233 633.431 296.183 cv
632.731 297.133 632.381 298.408 632.381 300.033 cv
632.381 301.683 632.706 302.958 633.406 303.908 cv
634.106 304.858 635.056 305.308 636.281 305.308 cv
637.481 305.308 638.431 304.858 639.131 303.908 cv
639.831 302.958 640.181 301.683 640.181 300.033 cv
640.181 298.433 639.831 297.133 639.131 296.183 cv
638.431 295.233 637.481 294.758 636.281 294.758 cv
636.281 292.858 mo
638.231 292.858 639.756 293.508 640.881 294.758 cv
641.981 296.033 642.556 297.783 642.556 300.033 cv
642.556 302.283 641.981 304.033 640.881 305.283 cv
639.756 306.558 638.231 307.183 636.281 307.183 cv
634.306 307.183 632.756 306.558 631.656 305.283 cv
630.556 304.033 630.006 302.283 630.006 300.033 cv
630.006 297.783 630.556 296.033 631.656 294.758 cv
632.756 293.508 634.306 292.858 636.281 292.858 cv
f
657.656 298.608 mo
657.656 306.858 li
655.406 306.858 li
655.406 298.683 li
655.406 297.383 655.131 296.433 654.631 295.783 cv
654.131 295.133 653.381 294.808 652.381 294.808 cv
651.156 294.808 650.206 295.208 649.506 295.983 cv
648.806 296.758 648.456 297.808 648.456 299.133 cv
648.456 306.858 li
646.206 306.858 li
646.206 293.183 li
648.456 293.183 li
648.456 295.308 li
648.981 294.508 649.606 293.883 650.356 293.483 cv
651.081 293.083 651.931 292.858 652.881 292.858 cv
654.431 292.858 655.631 293.358 656.431 294.333 cv
657.231 295.308 657.656 296.733 657.656 298.608 cv
f
675.38 294.758 mo
674.18 294.758 673.23 295.233 672.53 296.183 cv
671.83 297.133 671.48 298.408 671.48 300.033 cv
671.48 301.683 671.805 302.958 672.505 303.908 cv
673.205 304.858 674.155 305.308 675.38 305.308 cv
676.58 305.308 677.53 304.858 678.23 303.908 cv
678.93 302.958 679.28 301.683 679.28 300.033 cv
679.28 298.433 678.93 297.133 678.23 296.183 cv
677.53 295.233 676.58 294.758 675.38 294.758 cv
675.38 292.858 mo
677.33 292.858 678.855 293.508 679.98 294.758 cv
681.08 296.033 681.655 297.783 681.655 300.033 cv
681.655 302.283 681.08 304.033 679.98 305.283 cv
678.855 306.558 677.33 307.183 675.38 307.183 cv
673.405 307.183 671.855 306.558 670.755 305.283 cv
669.655 304.033 669.105 302.283 669.105 300.033 cv
669.105 297.783 669.655 296.033 670.755 294.758 cv
671.855 293.508 673.405 292.858 675.38 292.858 cv
f
696.755 298.608 mo
696.755 306.858 li
694.505 306.858 li
694.505 298.683 li
694.505 297.383 694.23 296.433 693.73 295.783 cv
693.23 295.133 692.48 294.808 691.48 294.808 cv
690.255 294.808 689.305 295.208 688.605 295.983 cv
687.905 296.758 687.555 297.808 687.555 299.133 cv
687.555 306.858 li
685.305 306.858 li
685.305 293.183 li
687.555 293.183 li
687.555 295.308 li
688.08 294.508 688.705 293.883 689.455 293.483 cv
690.18 293.083 691.03 292.858 691.98 292.858 cv
693.53 292.858 694.73 293.358 695.53 294.333 cv
696.33 295.308 696.755 296.733 696.755 298.608 cv
f
701.231 287.858 mo
703.481 287.858 li
703.481 306.858 li
701.231 306.858 li
701.231 287.858 li
f
713.881 308.108 mo
713.231 309.708 712.606 310.783 712.006 311.283 cv
711.406 311.783 710.606 312.033 709.606 312.033 cv
707.806 312.033 li
707.806 310.158 li
709.131 310.158 li
709.731 310.158 710.206 310.008 710.556 309.708 cv
710.906 309.408 711.281 308.733 711.706 307.633 cv
712.106 306.633 li
706.581 293.183 li
708.956 293.183 li
713.231 303.883 li
717.506 293.183 li
719.881 293.183 li
713.881 308.108 li
f
736.33 287.883 mo
735.23 289.783 734.43 291.633 733.905 293.458 cv
733.355 295.283 733.105 297.133 733.105 299.008 cv
733.105 300.908 733.355 302.758 733.905 304.583 cv
734.43 306.433 735.23 308.258 736.33 310.133 cv
734.38 310.133 li
733.155 308.208 732.23 306.358 731.63 304.508 cv
731.03 302.658 730.73 300.833 730.73 299.008 cv
730.73 297.208 731.03 295.383 731.63 293.533 cv
732.23 291.683 733.13 289.808 734.38 287.883 cv
736.33 287.883 li
f
743.255 298.158 mo
743.255 304.833 li
747.205 304.833 li
748.53 304.833 749.505 304.558 750.155 304.008 cv
750.78 303.458 751.105 302.633 751.105 301.483 cv
751.105 300.358 750.78 299.533 750.155 298.983 cv
749.505 298.433 748.53 298.158 747.205 298.158 cv
743.255 298.158 li
743.255 290.658 mo
743.255 296.158 li
746.905 296.158 li
748.105 296.158 748.98 295.933 749.58 295.483 cv
750.18 295.033 750.48 294.358 750.48 293.408 cv
750.48 292.508 750.18 291.808 749.58 291.358 cv
748.98 290.908 748.105 290.658 746.905 290.658 cv
743.255 290.658 li
740.78 288.633 mo
747.08 288.633 li
748.955 288.633 750.405 289.033 751.43 289.808 cv
752.43 290.608 752.955 291.708 752.955 293.133 cv
752.955 294.258 752.68 295.158 752.155 295.808 cv
751.63 296.458 750.88 296.883 749.88 297.033 cv
751.08 297.308 752.03 297.858 752.705 298.683 cv
753.355 299.508 753.705 300.533 753.705 301.758 cv
753.705 303.408 753.13 304.658 752.03 305.533 cv
750.93 306.433 749.355 306.858 747.33 306.858 cv
740.78 306.858 li
740.78 288.633 li
f
757.93 288.633 mo
760.405 288.633 li
760.405 304.783 li
769.28 304.783 li
769.28 306.858 li
757.93 306.858 li
757.93 288.633 li
f
770.63 299.008 mo
777.206 299.008 li
777.206 301.008 li
770.63 301.008 li
770.63 299.008 li
f
789.53 298.308 mo
790.055 298.508 790.58 298.883 791.08 299.458 cv
791.58 300.058 792.08 300.858 792.58 301.883 cv
795.08 306.858 li
792.43 306.858 li
790.105 302.183 li
789.505 300.983 788.905 300.158 788.355 299.758 cv
787.78 299.358 787.005 299.158 786.03 299.158 cv
783.355 299.158 li
783.355 306.858 li
780.88 306.858 li
780.88 288.633 li
786.455 288.633 li
788.53 288.633 790.08 289.083 791.105 289.933 cv
792.13 290.808 792.655 292.133 792.655 293.883 cv
792.655 295.033 792.38 296.008 791.855 296.758 cv
791.305 297.508 790.53 298.033 789.53 298.308 cv
783.355 290.658 mo
783.355 297.133 li
786.455 297.133 li
787.63 297.133 788.53 296.858 789.13 296.308 cv
789.73 295.758 790.055 294.958 790.055 293.883 cv
790.055 292.833 789.73 292.033 789.13 291.483 cv
788.53 290.933 787.63 290.658 786.455 290.658 cv
783.355 290.658 li
f
809.856 299.458 mo
809.856 300.558 li
799.531 300.558 li
799.631 302.108 800.081 303.308 800.931 304.108 cv
801.756 304.908 802.906 305.308 804.406 305.308 cv
805.256 305.308 806.106 305.208 806.906 305.008 cv
807.706 304.808 808.531 304.483 809.331 304.033 cv
809.331 306.158 li
808.531 306.508 807.706 306.783 806.856 306.933 cv
806.006 307.083 805.131 307.183 804.281 307.183 cv
802.081 307.183 800.356 306.558 799.081 305.308 cv
797.806 304.058 797.181 302.333 797.181 300.158 cv
797.181 297.933 797.781 296.158 798.981 294.833 cv
800.181 293.533 801.831 292.858 803.881 292.858 cv
805.731 292.858 807.181 293.458 808.256 294.633 cv
809.306 295.833 809.856 297.433 809.856 299.458 cv
807.606 298.808 mo
807.581 297.583 807.231 296.608 806.581 295.858 cv
805.906 295.133 805.006 294.758 803.906 294.758 cv
802.656 294.758 801.656 295.133 800.906 295.833 cv
800.156 296.533 799.706 297.533 799.606 298.808 cv
807.606 298.808 li
f
822.531 299.858 mo
822.531 298.258 822.181 296.983 821.531 296.083 cv
820.856 295.183 819.906 294.733 818.706 294.733 cv
817.506 294.733 816.556 295.183 815.881 296.083 cv
815.206 296.983 814.881 298.258 814.881 299.858 cv
814.881 301.483 815.206 302.733 815.881 303.633 cv
816.556 304.533 817.506 304.983 818.706 304.983 cv
819.906 304.983 820.856 304.533 821.531 303.633 cv
822.181 302.733 822.531 301.483 822.531 299.858 cv
824.781 305.158 mo
824.781 307.458 824.256 309.183 823.231 310.333 cv
822.181 311.458 820.606 312.033 818.481 312.033 cv
817.681 312.033 816.956 311.958 816.256 311.858 cv
815.556 311.733 814.856 311.558 814.206 311.308 cv
814.206 309.133 li
814.856 309.483 815.506 309.733 816.156 309.908 cv
816.806 310.083 817.456 310.183 818.131 310.183 cv
819.581 310.183 820.681 309.783 821.431 309.033 cv
822.156 308.258 822.531 307.108 822.531 305.558 cv
822.531 304.458 li
822.056 305.258 821.456 305.858 820.731 306.258 cv
820.006 306.658 819.156 306.858 818.156 306.858 cv
816.456 306.858 815.106 306.233 814.081 304.958 cv
813.056 303.683 812.556 301.983 812.556 299.858 cv
812.556 297.758 813.056 296.058 814.081 294.783 cv
815.106 293.508 816.456 292.858 818.156 292.858 cv
819.156 292.858 820.006 293.058 820.731 293.458 cv
821.456 293.858 822.056 294.458 822.531 295.258 cv
822.531 293.183 li
824.781 293.183 li
824.781 305.158 li
f
829.056 287.883 mo
831.006 287.883 li
832.206 289.808 833.131 291.683 833.731 293.533 cv
834.331 295.383 834.656 297.208 834.656 299.008 cv
834.656 300.833 834.331 302.658 833.731 304.508 cv
833.131 306.358 832.206 308.208 831.006 310.133 cv
829.056 310.133 li
830.131 308.258 830.931 306.433 831.481 304.583 cv
832.006 302.758 832.281 300.908 832.281 299.008 cv
832.281 297.133 832.006 295.283 831.481 293.458 cv
830.931 291.633 830.131 289.783 829.056 287.883 cv
f
2 lw
1 lj
462.881 347.311 mo
462.881 322.311 li
.847868 .481636 .0599985 .000640879 cmyk
@
467.881 347.311 mo
457.881 347.311 li
f
1 lw
467.881 347.311 mo
457.881 347.311 li
@
467.881 322.311 mo
457.881 322.311 li
f
467.881 322.311 mo
457.881 322.311 li
@
4 lw
2 lc
437.881 334.811 mo
487.881 334.811 li
@
457.881 339.811 mo
467.881 329.811 li
457.881 329.811 mo
467.881 339.811 li
f
1 lw
0 lc
457.881 339.811 mo
467.881 329.811 li
457.881 329.811 mo
467.881 339.811 li
@
517.731 327.011 mo
515.931 327.011 514.506 327.686 513.456 329.011 cv
512.406 330.361 511.881 332.161 511.881 334.461 cv
511.881 336.761 512.406 338.586 513.456 339.911 cv
514.506 341.261 515.931 341.911 517.731 341.911 cv
519.506 341.911 520.931 341.261 521.981 339.911 cv
523.031 338.586 523.556 336.761 523.556 334.461 cv
523.556 332.161 523.031 330.361 521.981 329.011 cv
520.931 327.686 519.506 327.011 517.731 327.011 cv
517.731 325.011 mo
520.281 325.011 522.306 325.886 523.856 327.586 cv
525.381 329.286 526.156 331.586 526.156 334.461 cv
526.156 337.361 525.381 339.636 523.856 341.336 cv
522.306 343.036 520.281 343.886 517.731 343.886 cv
515.156 343.886 513.106 343.036 511.581 341.336 cv
510.031 339.636 509.281 337.361 509.281 334.461 cv
509.281 331.586 510.031 329.286 511.581 327.586 cv
513.106 325.886 515.156 325.011 517.731 325.011 cv
1 /0 /CSD get_res sepcs
1 sep
f
529.681 338.161 mo
529.681 329.886 li
531.931 329.886 li
531.931 338.086 li
531.931 339.386 532.181 340.336 532.681 340.986 cv
533.181 341.636 533.931 341.961 534.956 341.961 cv
536.156 341.961 537.131 341.586 537.831 340.811 cv
538.531 340.036 538.881 338.986 538.881 337.636 cv
538.881 329.886 li
541.131 329.886 li
541.131 343.561 li
538.881 343.561 li
538.881 341.461 li
538.331 342.311 537.681 342.911 536.981 343.311 cv
536.256 343.686 535.431 343.886 534.481 343.886 cv
532.906 343.886 531.706 343.411 530.906 342.436 cv
530.081 341.486 529.681 340.061 529.681 338.161 cv
535.331 329.561 mo
535.331 329.561 li
f
553.681 331.986 mo
553.431 331.836 553.156 331.736 552.856 331.661 cv
552.556 331.611 552.231 331.561 551.881 331.561 cv
550.606 331.561 549.631 331.986 548.956 332.811 cv
548.256 333.636 547.931 334.811 547.931 336.361 cv
547.931 343.561 li
545.681 343.561 li
545.681 329.886 li
547.931 329.886 li
547.931 332.011 li
548.381 331.186 549.006 330.561 549.756 330.161 cv
550.506 329.761 551.431 329.561 552.531 329.561 cv
552.681 329.561 552.856 329.586 553.056 329.586 cv
553.231 329.611 553.431 329.636 553.681 329.686 cv
553.681 331.986 li
f
564.756 330.286 mo
564.756 332.411 li
564.106 332.111 563.456 331.861 562.781 331.686 cv
562.081 331.536 561.381 331.436 560.656 331.436 cv
559.531 331.436 558.681 331.611 558.131 331.961 cv
557.581 332.311 557.306 332.811 557.306 333.486 cv
557.306 334.011 557.506 334.411 557.906 334.711 cv
558.306 335.011 559.106 335.311 560.306 335.561 cv
561.081 335.736 li
562.681 336.086 563.806 336.586 564.481 337.186 cv
565.131 337.811 565.481 338.686 565.481 339.786 cv
565.481 341.061 564.981 342.061 563.981 342.786 cv
562.981 343.536 561.581 343.886 559.831 343.886 cv
559.081 343.886 558.331 343.811 557.531 343.686 cv
556.731 343.561 555.906 343.361 555.031 343.061 cv
555.031 340.736 li
555.856 341.186 556.681 341.511 557.481 341.711 cv
558.281 341.936 559.081 342.036 559.881 342.036 cv
560.931 342.036 561.756 341.861 562.331 341.511 cv
562.881 341.161 563.181 340.636 563.181 339.961 cv
563.181 339.361 562.956 338.886 562.556 338.561 cv
562.156 338.236 561.256 337.911 559.856 337.611 cv
559.081 337.436 li
557.681 337.136 556.656 336.686 556.056 336.086 cv
555.431 335.486 555.131 334.661 555.131 333.586 cv
555.131 332.311 555.581 331.311 556.481 330.611 cv
557.381 329.911 558.681 329.561 560.381 329.561 cv
561.206 329.561 561.981 329.636 562.731 329.761 cv
563.456 329.886 564.131 330.061 564.756 330.286 cv
f
579.18 341.511 mo
579.18 348.736 li
576.93 348.736 li
576.93 329.886 li
579.18 329.886 li
579.18 331.961 li
579.63 331.161 580.23 330.561 580.955 330.161 cv
581.68 329.761 582.555 329.561 583.555 329.561 cv
585.205 329.561 586.555 330.236 587.605 331.536 cv
588.63 332.861 589.155 334.586 589.155 336.736 cv
589.155 338.886 588.63 340.636 587.605 341.936 cv
586.555 343.236 585.205 343.886 583.555 343.886 cv
582.555 343.886 581.68 343.686 580.955 343.311 cv
580.23 342.936 579.63 342.336 579.18 341.511 cv
586.83 336.736 mo
586.83 335.086 586.48 333.811 585.805 332.861 cv
585.105 331.911 584.18 331.436 583.005 331.436 cv
581.805 331.436 580.88 331.911 580.205 332.861 cv
579.505 333.811 579.18 335.086 579.18 336.736 cv
579.18 338.386 579.505 339.686 580.205 340.636 cv
580.88 341.586 581.805 342.036 583.005 342.036 cv
584.18 342.036 585.105 341.586 585.805 340.636 cv
586.48 339.686 586.83 338.386 586.83 336.736 cv
f
599.105 336.686 mo
597.28 336.686 596.03 336.911 595.33 337.311 cv
594.63 337.736 594.28 338.436 594.28 339.436 cv
594.28 340.236 594.53 340.886 595.055 341.336 cv
595.58 341.811 596.305 342.036 597.205 342.036 cv
598.455 342.036 599.455 341.611 600.205 340.711 cv
600.955 339.836 601.33 338.661 601.33 337.186 cv
601.33 336.686 li
599.105 336.686 li
603.58 335.761 mo
603.58 343.561 li
601.33 343.561 li
601.33 341.486 li
600.805 342.336 600.155 342.936 599.405 343.311 cv
598.655 343.686 597.705 343.886 596.605 343.886 cv
595.205 343.886 594.08 343.511 593.255 342.736 cv
592.43 341.961 592.03 340.911 592.03 339.586 cv
592.03 338.061 592.53 336.911 593.58 336.111 cv
594.605 335.336 596.13 334.936 598.18 334.936 cv
601.33 334.936 li
601.33 334.711 li
601.33 333.686 600.98 332.886 600.305 332.311 cv
599.63 331.761 598.68 331.461 597.455 331.461 cv
596.655 331.461 595.905 331.561 595.155 331.761 cv
594.405 331.961 593.705 332.236 593.03 332.586 cv
593.03 330.511 li
593.83 330.211 594.63 329.961 595.405 329.811 cv
596.18 329.661 596.93 329.561 597.68 329.561 cv
599.655 329.561 601.13 330.086 602.105 331.111 cv
603.08 332.136 603.58 333.686 603.58 335.761 cv
f
616.13 331.986 mo
615.88 331.836 615.605 331.736 615.305 331.661 cv
615.005 331.611 614.68 331.561 614.33 331.561 cv
613.055 331.561 612.08 331.986 611.405 332.811 cv
610.705 333.636 610.38 334.811 610.38 336.361 cv
610.38 343.561 li
608.13 343.561 li
608.13 329.886 li
610.38 329.886 li
610.38 332.011 li
610.83 331.186 611.455 330.561 612.205 330.161 cv
612.955 329.761 613.88 329.561 614.98 329.561 cv
615.13 329.561 615.305 329.586 615.505 329.586 cv
615.68 329.611 615.88 329.636 616.13 329.686 cv
616.13 331.986 li
f
628.33 330.411 mo
628.33 332.511 li
627.68 332.161 627.055 331.911 626.405 331.736 cv
625.755 331.561 625.13 331.461 624.48 331.461 cv
623.03 331.461 621.88 331.936 621.08 332.861 cv
620.28 333.786 619.88 335.086 619.88 336.736 cv
619.88 338.411 620.28 339.711 621.08 340.636 cv
621.88 341.561 623.03 342.011 624.48 342.011 cv
625.13 342.011 625.755 341.936 626.405 341.761 cv
627.055 341.586 627.68 341.311 628.33 340.961 cv
628.33 343.036 li
627.68 343.336 627.03 343.561 626.38 343.686 cv
625.705 343.811 624.98 343.886 624.23 343.886 cv
622.18 343.886 620.53 343.261 619.33 341.961 cv
618.105 340.686 617.505 338.936 617.505 336.736 cv
617.505 334.511 618.105 332.761 619.33 331.486 cv
620.555 330.211 622.23 329.561 624.38 329.561 cv
625.08 329.561 625.755 329.636 626.405 329.786 cv
627.055 329.936 627.705 330.136 628.33 330.411 cv
f
643.93 336.161 mo
643.93 337.261 li
633.605 337.261 li
633.705 338.811 634.155 340.011 635.005 340.811 cv
635.83 341.611 636.98 342.011 638.48 342.011 cv
639.33 342.011 640.18 341.911 640.98 341.711 cv
641.78 341.511 642.605 341.186 643.405 340.736 cv
643.405 342.861 li
642.605 343.211 641.78 343.486 640.93 343.636 cv
640.08 343.786 639.205 343.886 638.355 343.886 cv
636.155 343.886 634.43 343.261 633.155 342.011 cv
631.88 340.761 631.255 339.036 631.255 336.861 cv
631.255 334.636 631.855 332.861 633.055 331.536 cv
634.255 330.236 635.905 329.561 637.955 329.561 cv
639.805 329.561 641.255 330.161 642.33 331.336 cv
643.38 332.536 643.93 334.136 643.93 336.161 cv
641.68 335.511 mo
641.655 334.286 641.305 333.311 640.655 332.561 cv
639.98 331.836 639.08 331.461 637.98 331.461 cv
636.73 331.461 635.73 331.836 634.98 332.536 cv
634.23 333.236 633.78 334.236 633.68 335.511 cv
641.68 335.511 li
f
647.605 324.561 mo
649.855 324.561 li
649.855 343.561 li
647.605 343.561 li
647.605 324.561 li
f
654.555 324.561 mo
656.805 324.561 li
656.805 343.561 li
654.555 343.561 li
654.555 324.561 li
f
667.73 336.686 mo
665.905 336.686 664.655 336.911 663.955 337.311 cv
663.255 337.736 662.905 338.436 662.905 339.436 cv
662.905 340.236 663.155 340.886 663.68 341.336 cv
664.205 341.811 664.93 342.036 665.83 342.036 cv
667.08 342.036 668.08 341.611 668.83 340.711 cv
669.58 339.836 669.955 338.661 669.955 337.186 cv
669.955 336.686 li
667.73 336.686 li
672.205 335.761 mo
672.205 343.561 li
669.955 343.561 li
669.955 341.486 li
669.43 342.336 668.78 342.936 668.03 343.311 cv
667.28 343.686 666.33 343.886 665.23 343.886 cv
663.83 343.886 662.705 343.511 661.88 342.736 cv
661.055 341.961 660.655 340.911 660.655 339.586 cv
660.655 338.061 661.155 336.911 662.205 336.111 cv
663.23 335.336 664.755 334.936 666.805 334.936 cv
669.955 334.936 li
669.955 334.711 li
669.955 333.686 669.605 332.886 668.93 332.311 cv
668.255 331.761 667.305 331.461 666.08 331.461 cv
665.28 331.461 664.53 331.561 663.78 331.761 cv
663.03 331.961 662.33 332.236 661.655 332.586 cv
661.655 330.511 li
662.455 330.211 663.255 329.961 664.03 329.811 cv
664.805 329.661 665.555 329.561 666.305 329.561 cv
668.28 329.561 669.755 330.086 670.73 331.111 cv
671.705 332.136 672.205 333.686 672.205 335.761 cv
f
679.056 326.011 mo
679.056 329.886 li
683.681 329.886 li
683.681 331.636 li
679.056 331.636 li
679.056 339.061 li
679.056 340.186 679.206 340.911 679.506 341.211 cv
679.806 341.536 680.431 341.686 681.381 341.686 cv
683.681 341.686 li
683.681 343.561 li
681.381 343.561 li
679.631 343.561 678.431 343.236 677.781 342.586 cv
677.131 341.936 676.806 340.761 676.806 339.061 cv
676.806 331.636 li
675.156 331.636 li
675.156 329.886 li
676.806 329.886 li
676.806 326.011 li
679.056 326.011 li
f
686.63 329.886 mo
688.88 329.886 li
688.88 343.561 li
686.63 343.561 li
686.63 329.886 li
686.63 324.561 mo
688.88 324.561 li
688.88 327.411 li
686.63 327.411 li
686.63 324.561 li
f
698.881 331.461 mo
697.681 331.461 696.731 331.936 696.031 332.886 cv
695.331 333.836 694.981 335.111 694.981 336.736 cv
694.981 338.386 695.306 339.661 696.006 340.611 cv
696.706 341.561 697.656 342.011 698.881 342.011 cv
700.081 342.011 701.031 341.561 701.731 340.611 cv
702.431 339.661 702.781 338.386 702.781 336.736 cv
702.781 335.136 702.431 333.836 701.731 332.886 cv
701.031 331.936 700.081 331.461 698.881 331.461 cv
698.881 329.561 mo
700.831 329.561 702.356 330.211 703.481 331.461 cv
704.581 332.736 705.156 334.486 705.156 336.736 cv
705.156 338.986 704.581 340.736 703.481 341.986 cv
702.356 343.261 700.831 343.886 698.881 343.886 cv
696.906 343.886 695.356 343.261 694.256 341.986 cv
693.156 340.736 692.606 338.986 692.606 336.736 cv
692.606 334.486 693.156 332.736 694.256 331.461 cv
695.356 330.211 696.906 329.561 698.881 329.561 cv
f
720.255 335.311 mo
720.255 343.561 li
718.005 343.561 li
718.005 335.386 li
718.005 334.086 717.731 333.136 717.231 332.486 cv
716.731 331.836 715.981 331.511 714.981 331.511 cv
713.755 331.511 712.806 331.911 712.106 332.686 cv
711.406 333.461 711.056 334.511 711.056 335.836 cv
711.056 343.561 li
708.806 343.561 li
708.806 329.886 li
711.056 329.886 li
711.056 332.011 li
711.581 331.211 712.206 330.586 712.956 330.186 cv
713.681 329.786 714.531 329.561 715.481 329.561 cv
717.031 329.561 718.231 330.061 719.031 331.036 cv
719.831 332.011 720.255 333.436 720.255 335.311 cv
f
735.255 327.361 mo
735.255 341.536 li
738.23 341.536 li
740.73 341.536 742.58 340.986 743.755 339.836 cv
744.905 338.686 745.505 336.886 745.505 334.436 cv
745.505 331.986 744.905 330.211 743.755 329.061 cv
742.58 327.936 740.73 327.361 738.23 327.361 cv
735.255 327.361 li
732.78 325.336 mo
737.855 325.336 li
741.38 325.336 743.98 326.086 745.63 327.536 cv
747.28 329.011 748.105 331.311 748.105 334.436 cv
748.105 337.586 747.255 339.886 745.605 341.361 cv
743.955 342.836 741.355 343.561 737.855 343.561 cv
732.78 343.561 li
732.78 325.336 li
f
751.931 329.886 mo
754.181 329.886 li
754.181 343.561 li
751.931 343.561 li
751.931 329.886 li
751.931 324.561 mo
754.181 324.561 li
754.181 327.411 li
751.931 327.411 li
751.931 324.561 li
f
768.731 330.411 mo
768.731 332.511 li
768.081 332.161 767.456 331.911 766.806 331.736 cv
766.156 331.561 765.531 331.461 764.88 331.461 cv
763.431 331.461 762.281 331.936 761.481 332.861 cv
760.681 333.786 760.281 335.086 760.281 336.736 cv
760.281 338.411 760.681 339.711 761.481 340.636 cv
762.281 341.561 763.431 342.011 764.88 342.011 cv
765.531 342.011 766.156 341.936 766.806 341.761 cv
767.456 341.586 768.081 341.311 768.731 340.961 cv
768.731 343.036 li
768.081 343.336 767.431 343.561 766.781 343.686 cv
766.106 343.811 765.38 343.886 764.63 343.886 cv
762.581 343.886 760.931 343.261 759.731 341.961 cv
758.505 340.686 757.906 338.936 757.906 336.736 cv
757.906 334.511 758.505 332.761 759.731 331.486 cv
760.956 330.211 762.63 329.561 764.781 329.561 cv
765.481 329.561 766.156 329.636 766.806 329.786 cv
767.456 329.936 768.106 330.136 768.731 330.411 cv
f
784.331 336.161 mo
784.331 337.261 li
774.006 337.261 li
774.106 338.811 774.556 340.011 775.406 340.811 cv
776.231 341.611 777.381 342.011 778.881 342.011 cv
779.731 342.011 780.581 341.911 781.381 341.711 cv
782.181 341.511 783.006 341.186 783.806 340.736 cv
783.806 342.861 li
783.006 343.211 782.181 343.486 781.331 343.636 cv
780.481 343.786 779.606 343.886 778.756 343.886 cv
776.556 343.886 774.831 343.261 773.556 342.011 cv
772.281 340.761 771.656 339.036 771.656 336.861 cv
771.656 334.636 772.256 332.861 773.456 331.536 cv
774.656 330.236 776.306 329.561 778.356 329.561 cv
780.206 329.561 781.656 330.161 782.731 331.336 cv
783.781 332.536 784.331 334.136 784.331 336.161 cv
782.081 335.511 mo
782.056 334.286 781.706 333.311 781.056 332.561 cv
780.381 331.836 779.481 331.461 778.381 331.461 cv
777.131 331.461 776.131 331.836 775.381 332.536 cv
774.631 333.236 774.181 334.236 774.081 335.511 cv
782.081 335.511 li
f
463.881 383.514 mo
461.881 383.514 li
461.881 374.757 li
462.527 375.403 li
462.881 375.757 li
463.881 374.757 li
463.881 383.514 li
463.881 368.272 mo
462.881 367.272 li
461.881 368.272 li
461.881 365.436 li
463.881 365.436 li
463.881 368.272 li
463.881 364.636 mo
461.881 364.636 li
461.881 359.514 li
463.881 359.514 li
463.881 364.636 li
.0798047 .829038 .658839 .00482185 cmyk
f
463.881 365.436 mo
461.881 365.436 li
461.881 364.636 li
463.881 364.636 li
463.881 365.436 li
.0914931 .839445 .678248 .00714122 cmyk
f
467.881 384.514 mo
457.881 384.514 li
457.881 384.014 li
457.881 383.514 li
461.881 383.514 li
461.881 384.014 li
463.881 384.014 li
463.881 383.514 li
467.881 383.514 li
467.881 384.514 li
.0838026 .832731 .657679 .0052491 cmyk
f
463.881 384.014 mo
461.881 384.014 li
461.881 383.514 li
463.881 383.514 li
463.881 384.014 li
.0933547 .953857 .909819 .0115663 cmyk
f
467.881 359.514 mo
463.881 359.514 li
463.881 359.014 li
461.881 359.014 li
461.881 359.514 li
457.881 359.514 li
457.881 359.014 li
457.881 358.514 li
467.881 358.514 li
467.881 359.514 li
.0838026 .832731 .657679 .0052491 cmyk
f
463.881 359.514 mo
461.881 359.514 li
461.881 359.014 li
463.881 359.014 li
463.881 359.514 li
.0933547 .953857 .909819 .0115663 cmyk
f
487.881 372.914 mo
482.401 372.914 li
482.401 370.114 li
487.881 370.114 li
487.881 372.914 li
477.921 372.914 mo
467.561 372.914 li
467.561 370.114 li
477.921 370.114 li
477.921 372.914 li
460.038 372.914 mo
452.72 372.914 li
452.72 370.114 li
460.038 370.114 li
458.638 371.514 li
460.038 372.914 li
.0798047 .829038 .658839 .00482185 cmyk
f
448.241 372.914 mo
437.881 372.914 li
437.881 370.114 li
448.241 370.114 li
448.241 372.914 li
f
461.881 373.343 mo
461.452 372.914 li
461.881 372.914 li
461.881 373.343 li
463.881 373.343 mo
463.881 369.686 li
465.709 371.514 li
463.881 373.343 li
461.881 370.114 mo
461.452 370.114 li
461.881 369.686 li
461.881 370.114 li
.0838026 .832731 .657679 .0052491 cmyk
f
462.881 374.343 mo
461.881 373.343 li
461.881 372.914 li
463.08 372.914 li
463.08 370.114 li
461.881 370.114 li
461.881 369.686 li
462.881 368.686 li
463.881 369.686 li
463.881 373.343 li
462.881 374.343 li
.0933547 .953857 .909819 .0115663 cmyk
f
461.881 372.914 mo
461.452 372.914 li
460.052 371.514 li
461.452 370.114 li
461.881 370.114 li
461.881 372.914 li
f
463.08 372.914 mo
461.881 372.914 li
461.881 370.114 li
463.08 370.114 li
463.08 372.914 li
.101442 .972717 .968963 .0153201 cmyk
f
461.881 374.757 mo
460.038 372.914 li
461.452 372.914 li
461.881 373.343 li
461.881 374.757 li
463.881 374.757 mo
463.881 373.343 li
465.709 371.514 li
463.881 369.686 li
463.881 368.272 li
467.123 371.514 li
463.881 374.757 li
.0838026 .832731 .657679 .0052491 cmyk
f
462.881 375.757 mo
462.527 375.403 li
461.881 374.757 li
461.881 373.343 li
462.881 374.343 li
463.881 373.343 li
463.881 374.757 li
462.881 375.757 li
462.527 374.696 mo
462.881 375.05 li
462.527 374.696 li
.0933547 .953857 .909819 .0115663 cmyk
f
461.452 370.114 mo
460.038 370.114 li
461.881 368.272 li
461.881 369.686 li
461.452 370.114 li
.0838026 .832731 .657679 .0052491 cmyk
f
463.881 369.686 mo
462.881 368.686 li
461.881 369.686 li
461.881 368.272 li
462.881 367.272 li
463.881 368.272 li
463.881 369.686 li
.0933547 .953857 .909819 .0115663 cmyk
f
461.452 372.914 mo
460.038 372.914 li
458.638 371.514 li
460.038 370.114 li
461.452 370.114 li
460.052 371.514 li
461.452 372.914 li
f
517.731 363.714 mo
515.931 363.714 514.506 364.389 513.456 365.714 cv
512.406 367.064 511.881 368.864 511.881 371.164 cv
511.881 373.464 512.406 375.289 513.456 376.614 cv
514.506 377.964 515.931 378.614 517.731 378.614 cv
519.506 378.614 520.931 377.964 521.981 376.614 cv
523.031 375.289 523.556 373.464 523.556 371.164 cv
523.556 368.864 523.031 367.064 521.981 365.714 cv
520.931 364.389 519.506 363.714 517.731 363.714 cv
517.731 361.714 mo
520.281 361.714 522.306 362.589 523.856 364.289 cv
525.381 365.989 526.156 368.289 526.156 371.164 cv
526.156 374.064 525.381 376.339 523.856 378.039 cv
522.306 379.739 520.281 380.589 517.731 380.589 cv
515.156 380.589 513.106 379.739 511.581 378.039 cv
510.031 376.339 509.281 374.064 509.281 371.164 cv
509.281 368.289 510.031 365.989 511.581 364.289 cv
513.106 362.589 515.156 361.714 517.731 361.714 cv
1 /0 /CSD get_res sepcs
1 sep
f
529.681 374.864 mo
529.681 366.589 li
531.931 366.589 li
531.931 374.789 li
531.931 376.089 532.181 377.039 532.681 377.689 cv
533.181 378.339 533.931 378.664 534.956 378.664 cv
536.156 378.664 537.131 378.289 537.831 377.514 cv
538.531 376.739 538.881 375.689 538.881 374.339 cv
538.881 366.589 li
541.131 366.589 li
541.131 380.264 li
538.881 380.264 li
538.881 378.164 li
538.331 379.014 537.681 379.614 536.981 380.014 cv
536.256 380.389 535.431 380.589 534.481 380.589 cv
532.906 380.589 531.706 380.114 530.906 379.139 cv
530.081 378.189 529.681 376.764 529.681 374.864 cv
535.331 366.264 mo
535.331 366.264 li
f
553.681 368.689 mo
553.431 368.539 553.156 368.439 552.856 368.364 cv
552.556 368.314 552.231 368.264 551.881 368.264 cv
550.606 368.264 549.631 368.689 548.956 369.514 cv
548.256 370.339 547.931 371.514 547.931 373.064 cv
547.931 380.264 li
545.681 380.264 li
545.681 366.589 li
547.931 366.589 li
547.931 368.714 li
548.381 367.889 549.006 367.264 549.756 366.864 cv
550.506 366.464 551.431 366.264 552.531 366.264 cv
552.681 366.264 552.856 366.289 553.056 366.289 cv
553.231 366.314 553.431 366.339 553.681 366.389 cv
553.681 368.689 li
f
564.756 366.989 mo
564.756 369.114 li
564.106 368.814 563.456 368.564 562.781 368.389 cv
562.081 368.239 561.381 368.139 560.656 368.139 cv
559.531 368.139 558.681 368.314 558.131 368.664 cv
557.581 369.014 557.306 369.514 557.306 370.189 cv
557.306 370.714 557.506 371.114 557.906 371.414 cv
558.306 371.714 559.106 372.014 560.306 372.264 cv
561.081 372.439 li
562.681 372.789 563.806 373.289 564.481 373.889 cv
565.131 374.514 565.481 375.389 565.481 376.489 cv
565.481 377.764 564.981 378.764 563.981 379.489 cv
562.981 380.239 561.581 380.589 559.831 380.589 cv
559.081 380.589 558.331 380.514 557.531 380.389 cv
556.731 380.264 555.906 380.064 555.031 379.764 cv
555.031 377.439 li
555.856 377.889 556.681 378.214 557.481 378.414 cv
558.281 378.639 559.081 378.739 559.881 378.739 cv
560.931 378.739 561.756 378.564 562.331 378.214 cv
562.881 377.864 563.181 377.339 563.181 376.664 cv
563.181 376.064 562.956 375.589 562.556 375.264 cv
562.156 374.939 561.256 374.614 559.856 374.314 cv
559.081 374.139 li
557.681 373.839 556.656 373.389 556.056 372.789 cv
555.431 372.189 555.131 371.364 555.131 370.289 cv
555.131 369.014 555.581 368.014 556.481 367.314 cv
557.381 366.614 558.681 366.264 560.381 366.264 cv
561.206 366.264 561.981 366.339 562.731 366.464 cv
563.456 366.589 564.131 366.764 564.756 366.989 cv
f
584.93 368.689 mo
584.68 368.539 584.405 368.439 584.105 368.364 cv
583.805 368.314 583.48 368.264 583.13 368.264 cv
581.855 368.264 580.88 368.689 580.205 369.514 cv
579.505 370.339 579.18 371.514 579.18 373.064 cv
579.18 380.264 li
576.93 380.264 li
576.93 366.589 li
579.18 366.589 li
579.18 368.714 li
579.63 367.889 580.255 367.264 581.005 366.864 cv
581.755 366.464 582.68 366.264 583.78 366.264 cv
583.93 366.264 584.105 366.289 584.305 366.289 cv
584.48 366.314 584.68 366.339 584.93 366.389 cv
584.93 368.689 li
f
598.98 372.864 mo
598.98 373.964 li
588.655 373.964 li
588.755 375.514 589.205 376.714 590.055 377.514 cv
590.88 378.314 592.03 378.714 593.53 378.714 cv
594.38 378.714 595.23 378.614 596.03 378.414 cv
596.83 378.214 597.655 377.889 598.455 377.439 cv
598.455 379.564 li
597.655 379.914 596.83 380.189 595.98 380.339 cv
595.13 380.489 594.255 380.589 593.405 380.589 cv
591.205 380.589 589.48 379.964 588.205 378.714 cv
586.93 377.464 586.305 375.739 586.305 373.564 cv
586.305 371.339 586.905 369.564 588.105 368.239 cv
589.305 366.939 590.955 366.264 593.005 366.264 cv
594.855 366.264 596.305 366.864 597.38 368.039 cv
598.43 369.239 598.98 370.839 598.98 372.864 cv
596.73 372.214 mo
596.705 370.989 596.355 370.014 595.705 369.264 cv
595.03 368.539 594.13 368.164 593.03 368.164 cv
591.78 368.164 590.78 368.539 590.03 369.239 cv
589.28 369.939 588.83 370.939 588.73 372.214 cv
596.73 372.214 li
f
611.655 373.264 mo
611.655 371.664 611.305 370.389 610.655 369.489 cv
609.98 368.589 609.03 368.139 607.83 368.139 cv
606.63 368.139 605.68 368.589 605.005 369.489 cv
604.33 370.389 604.005 371.664 604.005 373.264 cv
604.005 374.889 604.33 376.139 605.005 377.039 cv
605.68 377.939 606.63 378.389 607.83 378.389 cv
609.03 378.389 609.98 377.939 610.655 377.039 cv
611.305 376.139 611.655 374.889 611.655 373.264 cv
613.905 378.564 mo
613.905 380.864 613.38 382.589 612.355 383.739 cv
611.305 384.864 609.73 385.439 607.605 385.439 cv
606.805 385.439 606.08 385.364 605.38 385.264 cv
604.68 385.139 603.98 384.964 603.33 384.714 cv
603.33 382.539 li
603.98 382.889 604.63 383.139 605.28 383.314 cv
605.93 383.489 606.58 383.589 607.255 383.589 cv
608.705 383.589 609.805 383.189 610.555 382.439 cv
611.28 381.664 611.655 380.514 611.655 378.964 cv
611.655 377.864 li
611.18 378.664 610.58 379.264 609.855 379.664 cv
609.13 380.064 608.28 380.264 607.28 380.264 cv
605.58 380.264 604.23 379.639 603.205 378.364 cv
602.18 377.089 601.68 375.389 601.68 373.264 cv
601.68 371.164 602.18 369.464 603.205 368.189 cv
604.23 366.914 605.58 366.264 607.28 366.264 cv
608.28 366.264 609.13 366.464 609.855 366.864 cv
610.58 367.264 611.18 367.864 611.655 368.664 cv
611.655 366.589 li
613.905 366.589 li
613.905 378.564 li
f
618.53 366.589 mo
620.78 366.589 li
620.78 380.264 li
618.53 380.264 li
618.53 366.589 li
618.53 361.264 mo
620.78 361.264 li
620.78 364.114 li
618.53 364.114 li
618.53 361.264 li
f
634.205 366.989 mo
634.205 369.114 li
633.555 368.814 632.905 368.564 632.23 368.389 cv
631.53 368.239 630.83 368.139 630.105 368.139 cv
628.98 368.139 628.13 368.314 627.58 368.664 cv
627.03 369.014 626.755 369.514 626.755 370.189 cv
626.755 370.714 626.955 371.114 627.355 371.414 cv
627.755 371.714 628.555 372.014 629.755 372.264 cv
630.53 372.439 li
632.13 372.789 633.255 373.289 633.93 373.889 cv
634.58 374.514 634.93 375.389 634.93 376.489 cv
634.93 377.764 634.43 378.764 633.43 379.489 cv
632.43 380.239 631.03 380.589 629.28 380.589 cv
628.53 380.589 627.78 380.514 626.98 380.389 cv
626.18 380.264 625.355 380.064 624.48 379.764 cv
624.48 377.439 li
625.305 377.889 626.13 378.214 626.93 378.414 cv
627.73 378.639 628.53 378.739 629.33 378.739 cv
630.38 378.739 631.205 378.564 631.78 378.214 cv
632.33 377.864 632.63 377.339 632.63 376.664 cv
632.63 376.064 632.405 375.589 632.005 375.264 cv
631.605 374.939 630.705 374.614 629.305 374.314 cv
628.53 374.139 li
627.13 373.839 626.105 373.389 625.505 372.789 cv
624.88 372.189 624.58 371.364 624.58 370.289 cv
624.58 369.014 625.03 368.014 625.93 367.314 cv
626.83 366.614 628.13 366.264 629.83 366.264 cv
630.655 366.264 631.43 366.339 632.18 366.464 cv
632.905 366.589 633.58 366.764 634.205 366.989 cv
f
640.73 362.714 mo
640.73 366.589 li
645.355 366.589 li
645.355 368.339 li
640.73 368.339 li
640.73 375.764 li
640.73 376.889 640.88 377.614 641.18 377.914 cv
641.48 378.239 642.105 378.389 643.055 378.389 cv
645.355 378.389 li
645.355 380.264 li
643.055 380.264 li
641.305 380.264 640.105 379.939 639.455 379.289 cv
638.805 378.639 638.48 377.464 638.48 375.764 cv
638.48 368.339 li
636.83 368.339 li
636.83 366.589 li
638.48 366.589 li
638.48 362.714 li
640.73 362.714 li
f
656.23 368.689 mo
655.98 368.539 655.705 368.439 655.405 368.364 cv
655.105 368.314 654.78 368.264 654.43 368.264 cv
653.155 368.264 652.18 368.689 651.505 369.514 cv
650.805 370.339 650.48 371.514 650.48 373.064 cv
650.48 380.264 li
648.23 380.264 li
648.23 366.589 li
650.48 366.589 li
650.48 368.714 li
650.93 367.889 651.555 367.264 652.305 366.864 cv
653.055 366.464 653.98 366.264 655.08 366.264 cv
655.23 366.264 655.405 366.289 655.605 366.289 cv
655.78 366.314 655.98 366.339 656.23 366.389 cv
656.23 368.689 li
f
664.805 373.389 mo
662.98 373.389 661.73 373.614 661.03 374.014 cv
660.33 374.439 659.98 375.139 659.98 376.139 cv
659.98 376.939 660.23 377.589 660.755 378.039 cv
661.28 378.514 662.005 378.739 662.905 378.739 cv
664.155 378.739 665.155 378.314 665.905 377.414 cv
666.655 376.539 667.03 375.364 667.03 373.889 cv
667.03 373.389 li
664.805 373.389 li
669.28 372.464 mo
669.28 380.264 li
667.03 380.264 li
667.03 378.189 li
666.505 379.039 665.855 379.639 665.105 380.014 cv
664.355 380.389 663.405 380.589 662.305 380.589 cv
660.905 380.589 659.78 380.214 658.955 379.439 cv
658.13 378.664 657.73 377.614 657.73 376.289 cv
657.73 374.764 658.23 373.614 659.28 372.814 cv
660.305 372.039 661.83 371.639 663.88 371.639 cv
667.03 371.639 li
667.03 371.414 li
667.03 370.389 666.68 369.589 666.005 369.014 cv
665.33 368.464 664.38 368.164 663.155 368.164 cv
662.355 368.164 661.605 368.264 660.855 368.464 cv
660.105 368.664 659.405 368.939 658.73 369.289 cv
658.73 367.214 li
659.53 366.914 660.33 366.664 661.105 366.514 cv
661.88 366.364 662.63 366.264 663.38 366.264 cv
665.355 366.264 666.83 366.789 667.805 367.814 cv
668.78 368.839 669.28 370.389 669.28 372.464 cv
f
676.13 362.714 mo
676.13 366.589 li
680.755 366.589 li
680.755 368.339 li
676.13 368.339 li
676.13 375.764 li
676.13 376.889 676.28 377.614 676.58 377.914 cv
676.88 378.239 677.505 378.389 678.455 378.389 cv
680.755 378.389 li
680.755 380.264 li
678.455 380.264 li
676.705 380.264 675.505 379.939 674.855 379.289 cv
674.205 378.639 673.88 377.464 673.88 375.764 cv
673.88 368.339 li
672.23 368.339 li
672.23 366.589 li
673.88 366.589 li
673.88 362.714 li
676.13 362.714 li
f
683.705 366.589 mo
685.955 366.589 li
685.955 380.264 li
683.705 380.264 li
683.705 366.589 li
683.705 361.264 mo
685.955 361.264 li
685.955 364.114 li
683.705 364.114 li
683.705 361.264 li
f
695.955 368.164 mo
694.755 368.164 693.805 368.639 693.105 369.589 cv
692.405 370.539 692.055 371.814 692.055 373.439 cv
692.055 375.089 692.38 376.364 693.08 377.314 cv
693.78 378.264 694.73 378.714 695.955 378.714 cv
697.155 378.714 698.105 378.264 698.805 377.314 cv
699.505 376.364 699.855 375.089 699.855 373.439 cv
699.855 371.839 699.505 370.539 698.805 369.589 cv
698.105 368.639 697.155 368.164 695.955 368.164 cv
695.955 366.264 mo
697.905 366.264 699.43 366.914 700.555 368.164 cv
701.655 369.439 702.23 371.189 702.23 373.439 cv
702.23 375.689 701.655 377.439 700.555 378.689 cv
699.43 379.964 697.905 380.589 695.955 380.589 cv
693.98 380.589 692.43 379.964 691.33 378.689 cv
690.23 377.439 689.68 375.689 689.68 373.439 cv
689.68 371.189 690.23 369.439 691.33 368.164 cv
692.43 366.914 693.98 366.264 695.955 366.264 cv
f
717.33 372.014 mo
717.33 380.264 li
715.08 380.264 li
715.08 372.089 li
715.08 370.789 714.805 369.839 714.305 369.189 cv
713.805 368.539 713.055 368.214 712.055 368.214 cv
710.83 368.214 709.88 368.614 709.18 369.389 cv
708.48 370.164 708.13 371.214 708.13 372.539 cv
708.13 380.264 li
705.88 380.264 li
705.88 366.589 li
708.13 366.589 li
708.13 368.714 li
708.655 367.914 709.28 367.289 710.03 366.889 cv
710.755 366.489 711.605 366.264 712.555 366.264 cv
714.105 366.264 715.305 366.764 716.105 367.739 cv
716.905 368.714 717.33 370.139 717.33 372.014 cv
f
732.33 364.064 mo
732.33 378.239 li
735.305 378.239 li
737.805 378.239 739.655 377.689 740.83 376.539 cv
741.98 375.389 742.58 373.589 742.58 371.139 cv
742.58 368.689 741.98 366.914 740.83 365.764 cv
739.655 364.639 737.805 364.064 735.305 364.064 cv
732.33 364.064 li
729.855 362.039 mo
734.93 362.039 li
738.455 362.039 741.055 362.789 742.705 364.239 cv
744.355 365.714 745.18 368.014 745.18 371.139 cv
745.18 374.289 744.33 376.589 742.68 378.064 cv
741.03 379.539 738.43 380.264 734.93 380.264 cv
729.855 380.264 li
729.855 362.039 li
f
749.005 366.589 mo
751.255 366.589 li
751.255 380.264 li
749.005 380.264 li
749.005 366.589 li
749.005 361.264 mo
751.255 361.264 li
751.255 364.114 li
749.005 364.114 li
749.005 361.264 li
f
765.805 367.114 mo
765.805 369.214 li
765.155 368.864 764.53 368.614 763.88 368.439 cv
763.23 368.264 762.605 368.164 761.955 368.164 cv
760.505 368.164 759.355 368.639 758.555 369.564 cv
757.755 370.489 757.355 371.789 757.355 373.439 cv
757.355 375.114 757.755 376.414 758.555 377.339 cv
759.355 378.264 760.505 378.714 761.955 378.714 cv
762.605 378.714 763.23 378.639 763.88 378.464 cv
764.53 378.289 765.155 378.014 765.805 377.664 cv
765.805 379.739 li
765.155 380.039 764.505 380.264 763.855 380.389 cv
763.18 380.514 762.455 380.589 761.705 380.589 cv
759.655 380.589 758.005 379.964 756.805 378.664 cv
755.58 377.389 754.98 375.639 754.98 373.439 cv
754.98 371.214 755.58 369.464 756.805 368.189 cv
758.03 366.914 759.705 366.264 761.855 366.264 cv
762.555 366.264 763.23 366.339 763.88 366.489 cv
764.53 366.639 765.18 366.839 765.805 367.114 cv
f
781.405 372.864 mo
781.405 373.964 li
771.08 373.964 li
771.18 375.514 771.63 376.714 772.48 377.514 cv
773.305 378.314 774.455 378.714 775.955 378.714 cv
776.805 378.714 777.655 378.614 778.455 378.414 cv
779.255 378.214 780.08 377.889 780.88 377.439 cv
780.88 379.564 li
780.08 379.914 779.255 380.189 778.405 380.339 cv
777.555 380.489 776.68 380.589 775.83 380.589 cv
773.63 380.589 771.905 379.964 770.63 378.714 cv
769.355 377.464 768.73 375.739 768.73 373.564 cv
768.73 371.339 769.33 369.564 770.53 368.239 cv
771.73 366.939 773.38 366.264 775.43 366.264 cv
777.28 366.264 778.73 366.864 779.805 368.039 cv
780.855 369.239 781.405 370.839 781.405 372.864 cv
779.155 372.214 mo
779.13 370.989 778.78 370.014 778.13 369.264 cv
777.455 368.539 776.555 368.164 775.455 368.164 cv
774.205 368.164 773.205 368.539 772.455 369.239 cv
771.705 369.939 771.255 370.939 771.155 372.214 cv
779.155 372.214 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
