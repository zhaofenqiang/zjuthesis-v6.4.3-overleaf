%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: flowchart_of_MRI_process_pipeline.pdf
%%Creator: Adobe Acrobat 20.9.0
%%For: fenqiang
%%CreationDate: 2021/3/21, 16:15:37
%%BoundingBox: -129 128 369 497
%%HiResBoundingBox: -128.3720 128.3721 368.0671 496.4392
%%CropBox: -128.3720 128.3721 368.0671 496.4392
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1100 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164374, 2020/03/05-20:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2021-03-21T16:15:20-04:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2021-03-21T16:15:33-04:00"
   xmp:MetadataDate="2021-03-21T16:15:33-04:00"
   pdf:Producer="Acrobat Distiller 20.0 (Windows)"
   xmpMM:DocumentID="uuid:da1d9360-73cd-4197-bca3-990071db10c3"
   xmpMM:InstanceID="uuid:97853957-287a-4005-aea7-777d34d49772">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>fenqiang</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - figures.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -496.439 translate
pgsv
[0 1 -1 0 368.067 0 ]ct
gsave
np
gsave
0 0 mo
0 496.439 li
368.067 496.439 li
368.067 0 li
cp
clp
gsave
407.994 591.103 mo
-65.5863 591.103 li
-65.5863 -250.757 li
407.994 -250.757 li
cp
eclp
-65.5863 591.103 mo
407.994 591.103 li
407.994 -250.767 li
-65.5863 -250.767 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
1.973 lw
0 lc
0 lj
8 ml
[7.8926 5.9194 ] 0 dsh
false sadj
36.6537 418.723 mo
31.2537 418.723 26.8737 414.343 26.8737 408.943 cv
26.8737 298.783 li
26.8737 293.383 31.2537 289.003 36.6537 289.003 cv
204.174 289.003 li
209.574 289.003 213.954 293.383 213.954 298.783 cv
213.954 408.943 li
213.954 414.343 209.574 418.723 204.174 418.723 cv
cp
false sop
.362768 .0159915 .574731 0 cmyk
@
42.1137 411.163 mo
39.4137 411.163 37.2537 409.003 37.2537 406.363 cv
37.2537 301.423 li
37.2537 298.723 39.4137 296.563 42.1137 296.563 cv
61.4337 296.563 li
64.0737 296.563 66.2937 298.723 66.2937 301.423 cv
66.2937 406.363 li
66.2937 409.003 64.0737 411.163 61.4337 411.163 cv
ef
.877 lw
[] 0 dsh
42.1137 411.163 mo
39.4137 411.163 37.2537 409.003 37.2537 406.363 cv
37.2537 301.423 li
37.2537 298.723 39.4137 296.563 42.1137 296.563 cv
61.4337 296.563 li
64.0737 296.563 66.2937 298.723 66.2937 301.423 cv
66.2937 406.363 li
66.2937 409.003 64.0737 411.163 61.4337 411.163 cv
cp
.719539 .300053 1 .150149 cmyk
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (OABXXE+FangSong-GBK-EUC-H)
%%Title: (OABXXE+FangSong-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /OABXXE+FangSong-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -164 1004 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28562 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300013909A50A2AB7EE3C36B6EFE4BFA05B0B1D6F8
CE08BF0CAB16ED4> |
3380 <001C60D8A8C9B5EE310342C95926CBD4BE0CE839AE9A6483C38B28FCBF
7BD3B517093D70F6C05F3EE25727C4F389C6C7FBDBCB2D6F498C5BF5E89309B5
E5AA4C89ACDBE815E858B448F8630659F0ABFB3F365C8412F0E7357924A7ABAB
3CDB30F43C02A9F5E00F2A40FA452F6DD86E6BFA4E9EE6AA7C6A48D9DA24D876
B1D1671F65E80FDC33EBAC5FBA8DF354F8F46B740D7FC0D2FE692D7AA19EBF93
D1418D484FB0C1C3C1143B5AA09EAABE451ED09CBEB630A2DDC256FFA4D6B6E1
1240BB38D7422FCAF588F6672CC10B28E69AD5D4C4B89615B8943236A039CEE5
D359CF0B54A1914809B4E78418BB1094454909C4093167A2BA7EB74C1BECE518
6549DEA3220D185B2CAFB0E2B9A81C760C66823AA7EE0EB5A28DF227FFCD740E
D5A1CB68D0BCD11A08D2F846A0E0EA77939D64DD764CF7F692E523FD55E6DFD6
C4447242C3E05F826906> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /OABXXE+FangSong-GBK-EUC-H-Identity-H /Identity-H 0 [/OABXXE+FangSong-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 393.643 mo
(\0154)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 393.643 mo
(\0154) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
1797 <001C60D8A8C9B5EE31027CA20B1C34005DE0B840FC54903C1C5667043E
CBD05BD56307B54393EC64C9E271D604768E5421A1DB0FF2EF21E844CBC17592
698C160069C21A28E3B78399EBE6A4BACD313D1BA211BF2EF3288AC0821C6DB6
850CD60C45CE43D783390ED4066B21A115ABF64399D603DD51D2C275CA763677
A537B293E23151D3381B30810F8A81C3E4B3B095A66786E3DF02A122D229ABA5
613BF95236C2D5A5B52455125D8AE96D04ED6EC4C13DF8F0277D218E669E4313
59FBB382135C3D40168FF263A75E19D1B95276743EF014E64082FE658014A851
E0B45FB033DE3F31EE712FC5F5B7D839D047BE02CF3BADE8F1BE71EEB9029BC4
EF762BD9346460E3F80D615374B13B5DF3806C27F735E20D718D39DBE67A5926
312BCE4AEA55E4E4B6BD1E1E8ECFDD0B958EF846BBC5F996BA08E7306F571F22
700FCFE90EFAFA40C9DCAD2D595FEF09808362FB89B19B0E5BD2FBF795DD49ED
1EA70E4CBE5463482F50FB653BCD1C276658B6778A168DB30C8C1BF2F99290A5
D665F5D7A039CDA85606CEC48D22DFDAE7B4C1A972BC392D0267DD5170B5C64D
16D72CCCA1F12C3571B375A36D632050A18BD508928745E487727144EF918132
165C71B3E1088FA0DC29D6D77BF261> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 377.756 mo
(\007\005)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 377.756 mo
(\007\005) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
20154 <001C60D8A8C9B5EE310282C8EE79348B5ADD8ED7976B78307BF6E04E4
FDD5B9B7671CA3057A660C8B74BD65759462F5B236EDD636A44616E490ABA3B6
75885B09C14CCDAA34DFCF2AA923744639146D8DE55A9E9EDAC509A04F543E73
D009B8A2AE8B3DC05A052BA3EE43861FAF46C0CFAC973642AB403D85FEA8B605
D204E4F9AAFCCA1244AC0ABCF2BF8DAA93F07DE83B79504FC406712666F24C79
DD91C678F4E95389A7DE5497075F5290DC6A3ECBE0863750F8628E3E80850E5D
AD9E4BC7B295C03B4223731950520A91EF5A7D1FDCD553B1B6C35C6C42FF1B78
F3F603FA41AA2EF108E1AD6ED230968F734473813A7479CB4BFBB85356631004
813A32E04D216BE6468221BA6EDBE7198C0FEECC34ABD13A186A353ADAA474BD
30E8AF632D8F98BA4009BBF40382A83FC5FB5F9EF48A063F5364126C8A615769
10F1067FCF558ADABBC8F89A3063EDEA395A4749D403A804C89BDB8DF3DE2B74
786F3359BB88FFCDF0A6EF53A3C00394E6834728E036D316C4582CF1374F881F
F2BADE23C> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 361.869 mo
(N\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 361.869 mo
(N\272) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
3898 <001C60D8A8C9B5EE31038DE3129DE51D0A69F1CEAF13EF9720B5AF2576
848019B65215183D42833082E38BCD6AE84E1E220345C74A23DF7E6BBCA5EA82
A3931753F8868DE7B52117698E741BB9D17FB9696BAA33D2525A804EA95F639D
76AEBBDEBCCFC5FB9ACD0BF5F654A9212357B8F5BC09E8D01204773C129F7112
D8492471708C509ED0B2A0AA4EA84ED16DDBFAB2105FCB999442949A4F208CED
B9AAB81EDD141C9983456204DD91A8A30B80521829B4D3B65DECA83E1328D100
DFE1144B017AD45AB670B8BF3F7987376DFF6473CE5627AF0954C773ACD9B40B
00B2BF3615D87145581D4490BF97784C75433411DADDC71725F629E3AA628B22
6EBC6A69B9D14E0B4676928C9D4B5E891A7E33E130174CD96267> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 345.981 mo
(\017:)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 345.981 mo
(\017:) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
10812 <001C60D8A8C9B5EE31025026F709CD4AD73CFC9E8AC1964BBE0B7E84E
CDB4619A1FC9A8E47EA9944669CE1D2BCAA00BC9E7528F6E93242E65FF6CAE98
9DEF81ECFBAAF452618689B2D3DE66519026961C7A9460FDDE26625FF5B51946
3ED541A55BEFD6507968FF00E777A1903A6DAFEB8D0D0FA04504E749A11FA869
07C86875A8A0F5BB783A785D9FA0EB5118EB1B7EBE48814B82EB0DC6BB5E5595
644FE222FCE873B41D34988E5A6C4764C7C45AC0CF2261D50BABB988D5D7ABEE
7F97234E0CE8DFFB8046A891C4BD4E9BA047FD2880B0FF0CEBAA03D6EA233AB5
3FD89C8852D5801272A05EC514E471754EB806CFDA94C79341DF1B0DA0B3BC0A
520A97601EDBB3FCBBC10C7CF90F39DAB4617FE73A1269D32FAE9A7ACA50278E
BACD3B0F1A2B11DDE0366C628C50F693C0785368CD9C87389936F0253CF0E8E3
9F120EB8D14D2F60E93561E71F7BA2098B67E41EBB36AC8029886516D8CB3A2B
1F01DEDD8> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 330.094 mo
(*<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
58.5537 330.094 mo
(*<) false chp
@
%ADOBeginSubsetFont: LAAAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /LAAAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32176f5876000000cc000000606376
74201d6402d70000012c000010846670676d6d591b53000011b000000a59
676c796601b031ac0000c6b80000301468656164ec6c40fe00001c0c0000
003668686561134d1a6400001c4400000024686d74785c319ec200001c68
000049326c6f63610363dfb80000659c000049386d617870191508b50000
aed4000000206e616d6564b8361d0000aef40000083070726570b3329291
0000b72400000f9367646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002effc000785b0000000900000000544d432000400020
fffc058cfe460133072101bb400001ffffff00000394054c000000200015
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
03d703f10470000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000160016001700180018001a001b00210029002a
002a002c002d002e002f003200340036003700380039003a003b003c003d
003e004200460046004a004c004d004f004f00530053005500570059005c
005c005d005d005e005f0061006400650067006800690069006b006e006f
00710076007600770077007d007e007f008000810082008600870087008a
008d008e0096009600970097009c00a000a200a300a600ac00b300b300b6
00b800b900be00bf00c100c200c400c500c600c700ca00ca00cb00cc00cc
00ce00d100d200d300d700da00db00dc00de00df00e000e000e300e64057
8574737271706f6e6d6c6b6a6968676665625d55544f4e403f3e3d3c3b3a
393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c
1b1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d
2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121
592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112b
b01723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920
b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae459
59182d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212110592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b802b023701020b802b04520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2c014b53234b515ab00225b00425b0062549
23451869525a58b00225b00225b00525462345696048592121212d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab9035803588a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2c2320b000508a8a64b10003255458b0401bb10103255458
b037438b59b04f2b5923b0622b2321235865592d2cb13a000c215460432d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a37403a403b403e023f021bb101
02435458b237403aba0100003b0100b33e013f011bb18002435258b23740
3ab80180b13b401bb901000002435258b237403aba0180003b01401bb901
800002435258b237403ab80200b13b401bb237403aba0100003b01005959
59b9400000808855b94000020063b8040088555a58b33e003f011bb33e00
3f0159595942424242422d2cb0024354584b53234b515a58381b2121591b
21212121592d2c012d2cb0022563b0206066b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b03543525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b03543525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cb12501885058b94000020063b8040088545cb0134b
525b1bb001592d0000000001000000070000f6cb86f85f0f3cf508190800
00000000a2e31dc200000000d684d860fb74fd8c105e0851000000090001
000100000000000100000721fe4500571000fb74f9d2105e000100000000
00000000000000000000124c0639011c00000000020000000200000002aa
00e403440085040000250400006c06aa00480639004b0171005102aa0054
02aa002e04000091048300250200006e02aa005302000091023900030400
004a040000f00400002c040000530400002004000062040000580400004c
0400007c04000051023900b00239008e048300250483002504830025038d
005c075e006105c70010055600220556004a05c7002304e3002a04730021
05c7004805c7002302aa0033031d002a05c7002204e30029071d002205c7
ffe505c700480473002205c70048055600230473008004e3003e05c7000b
05c70012078d001b05c7000f05c7001304e3001a02aa00a80239000302aa
004b03c100250400ffef02aa0076038d00490400fffb038d004604000044
038d004c02aa004f0400003d0400000d0239003c0239ff63040000110239
003d063900110400000c040000450400fff90400004402aa000d031d0064
02390014040000020400001105c7000d0400001b0400000c038d002903d7
011b019a00a103d700b10454001405c7001005c7000e0556004a04e3002a
05c7ffe505c7004805c7000b038d0049038d0049038d0049038d0049038d
0049038d0049038d0046038d004c038d004c038d004c038d004c0239003c
0239003c0239000d023900020400000c0400004504000045040000450400
004504000045040000020400000204000002040000020400006503330062
040000810400003d0400009c02cd007003a0fff204000023061400450614
004507d7001e02aa00ec02aa003904640019071dffe805c7004905b40035
04640008046400180464001804000002049c008603f4004005b4002b0696
002e0464003e023100000235fffa027b001d062500470556004904000027
038d005902aa00e40483002404640053040000020464001e04e5001a0400
004004000040080000e605c7000e05c7000e05c70048071d004b05c70043
0400ffee0800ffed038d0043038d004302aa00b902aa00c10464001703f4
002f0400000c05c700130156feab0400ffe902aa007702aa007304730019
047300170400008b0200009102aa00cb038d00430800004105c7000e04e3
002a05c7001004e3002a04e3002a02aa003302aa003202aa003202aa0032
05c7004805c7004805c7004805c7000b05c7000b05c7000b0239003c02aa
003c02aa001602aa001702aa003702aa00e902aa009602aa00bb02aa004e
02aa001d02aa003c04e300160239001e0473007e031d006404e3001a038d
0029019a00a105c700230400004405c700130400000c047300240400fff9
04830025048300a502660088026600140266002c06000086060000860600
002a0400002105c700480400003d02aa003304730080031d00640556004a
038d00460556004a038d0046040000260400ffef02aa00ec05c70010038d
004905c70010038d004905c70023052c004405c7002304e3002a038d004c
04e3002a038d004c04e300290239003d04e300290340003c04e3002902c0
003d05c7ffe50400000c05c7ffe50400000c05c700480400004505560023
02aa000d0556002302aa000d04730080031d006404e3003e0239001404e3
003e036b001305c7000b0400000205c7000b0400000204e3001a038d0029
04e3001a038d002904a0002505c7004c05d900470431005703c50046035c
0047045000460337000c049e00450400ffef049500e40285000207c0002c
0800004f040000990800004f040000990800004f040000980400009807d5
016a05c700c00483002604cd00990483002604d5022204d5010505abffe9
05ab027e05ab027e05abffe905ab027e05abffe905ab027e05abffe905ab
ffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab0066
05abffea05d5ffff04d500920800000007eb013007eb012007eb013007eb
012004d500b204d5008004d5002a082b0198086b01b807550010060000f4
0600006f0440003a0540003704c0003f04150040040000250600005505ab
0033046b003c04d5000301c00089035500a206ab003403d5006404d50092
02d6008302d6008304d500b202d6007005c70010038d00490556004a038d
00460556004a038d004604e3002a038d004c04e3002a038d004c04e3002a
038d004c05c700480400003d05c700480400003d05c700480400003d05c7
00230400000d05c700230400000d02aa00160239ffde02aa00170239ffdf
02aa00330239fffe02aa00330239003c031d002a0239ff6305c700220400
00110400001104e300290239003d05c7ffe50400000c059d002603f5000c
05c700480400004505c70048040000450556002302aa000d04730080031d
006404e3003b0239001005c7000b0400000205c7000b0400000205c7000b
0400000205c7000b04000002078d001b05c7000d05c700130400000c0239
001605c7000f038d0049071dffe80556004905c7004904000027023900b2
078d001b05c7000d078d001b05c7000d078d001b05c7000d05c700130400
000c02aa00b802aaffdb0400003d04cd005a060000860600002a06000031
0600002502aa00c302aa00bb02aa00ec02aaffea05c70010058dff5c0677
ff5c034aff5c05c7ffb60687ff5c05f2ffb30227ffb105c7001005560022
0525003204e3002a04e3001a05c7002302aa003305c7002205cd001c071d
002205c7ffe50525004f05c7004805c700250473002204a8002004e3003e
05c7001305c7000f05e7001805f2003c02aa003205c7001304310057035c
0047042f000b0227002503f6fffa0412006e0389000003500046042f000b
03d50051022700250408001503e10019044a0074039effd3039100460400
004503fe0059032b004603f6fffa038d00180502001c0544004b02270000
03f6fffa0400004503f6fffa0544004b04e3002a0604003704a000250548
004b0473008002aa003302aa0032031d002a06fa000d06fa002705ee0036
0556002505aa001a05c7002505c70010049800240556002204a000250575
001a04e3002a072b00120402002b05c7002505c7002505560025056d0012
071d002205c7002305c7004805c70025047300220556004a04e3003e05aa
001a0652004c05c7000f05c700250533fffa081200390812003905a60036
06fa0025049800240548003b083900260556ffee038d00490412004e03c7
00300348001f0412001a038d004c05870017032900180448002e0448002e
03e3002e03fe000c0510002e0448002e040000450448002e0400fff9038d
0046037f000c0400000c052f00570400001b0448002e0406001e0629002e
0629002e0423000c0560002d03a6002e036f001b05fa002d03aeffff038d
004c03dd00110348001f036f0046031d00640239003c023900020239ff63
05d1000c05c9002d0400000d03e3002e0400000c0448002e039a002502cf
001f0800004107a20010040a000d00000000000000000000000000000000
00000000000000000000000000000000000000000000ffad000000000000
01020000ffce02d900560000ff3b025400e0000002af0000ff6b023900b0
03da005f03a4003302af0021035a004303c5004e023b0043024a004e03d0
005803ce004302220043039e0043037600330374000f040f006403e2004e
023200430270002103cd005f03a2004303a200430386005803dc004303ae
003d03ca006903c0004304e200430400002104750043045d004304440043
01ac006b02f9006b06360096023b0043039e0043039e00430374ff590374
ff5903a2003304e2004304e2004304e2004304e2004303da005f03da005f
03da005f03a4003302af0021035a004303c5004e023b00430279000c03ce
004302220043039e0043037600330374000f03e2004e0270002103cd005f
03a200430386005803ae003d03ca006903c0004304e2004304000021023b
004303a4003303760033038600580404000f0000ffdc0000ff250000ffdc
0000fe51028d00ab028d00a002da0043034d007901a8ffba000000460000
00460000004600000046000000480000004600000046000000460435017c
0435012e043500b7043500810435012c043500be043500af043500810435
009a043500db04350085028d00c0043500b3060001000600010002420036
060001000435009e04350098043500cb0600010006000100060001000600
010006000100000000460600010006000100060001000600010006000100
060001000600010006000100051bffba06000100060001000600010005b5
003a05b5003a01f4ffba01f4ffba06000100060001000600010006000100
0481003604350036043dffba043dffba03e9004a03e9004a067f00140776
00140327ffba041effba067f0014077600140327ffba041effba051b0032
04b500240300fff706000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010000000030000000460000004600000040000000460600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000400001b08000000060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100028dffcd028d002f0600010004f70013034d0079
01a8001301d6ffd701a8005601d60010037500320375003201a8002d01d6
0013051b003204b5002401f4ffba01f4ffba01a8009301d6001305b5003a
05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036
043dffba043dffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba02b3005f02b3005f02b3005f02b3005f03e9004a
03e9004a03e9004a03e9004a0692003e0692003e043fffba043fffba0692
003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba
08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a00360435ffba
0327ffba045a002a039a00360435ffba0327ffba064f0027064f00270224
ffba021affba04a7004604a700460224ffba021affba04cf002d04cf002d
0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba02420036
0300fff7039affba0327ffba0375003203750032051b003204b50024051b
003204b5002401f4ffba01f4ffba045a003104ce0041045a002604ce0030
045a005304ce0041045a005304ce00410600010006000100000000460000
004606000100060001000600010000000046000000460600010006000100
000000480000004606000100060001000600010000000046000000460000
004600000046000000400000003006000100000000460000004606000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d00ca028d00c7028d00c606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000100ffba0800ffba1000
ffba05c70048043b00450635000b045600020000fdcc0000fc140000fd13
0000fe420000fce00000fdd40000fe620000fe2b0000fdb70000fc980000
fd880000fc080000fcfe0000feff0000ff030000fe9e041a00a206000088
060000140000fe700000fdd40000fdf60000fd770000fe620000fdbb0000
fbd80000fbd80000fb740000fcfe0000fc8c0000fc460000fd270000fcb4
0000fca80000fcae0000fc440000fe140000fe700000fd910000fc710000
fdc30000fe470000fe620000fcc30000fde10000fd870000fd4b0000fd97
0000fd4b0000fc8a0000fc620000fc090000fbd70239003c05c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004905c70010038d004905c7
0010038d004905c70010038d004905c70010038d004905c70010038d0049
04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d
004c04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a
038d004c02aa00330239003c02aa00330239003c05c700480400004505c7
00480400004505c700480400004505c700480400004505c7004804000045
05c700480400004505c700480400004505c70048043b004505c70048043b
004505c70048043b004505c70048043b004505c70048043b004505c7000b
0400000205c7000b040000020635000b045600020635000b045600020635
000b045600020635000b045600020635000b0456000205c700130400000c
05c700130400000c05c700130400000c05c70010038d004902aa00330239
000605c700480400004505c7000b0400000205c7000b0400000205c7000b
0400000205c7000b0400000205c7000b040000020000ff090000ff090000
ff090000ff0904a000230348001f072b0012058700170556002503e3002e
0556002503e3002e05c700230448002e05c700130400000205c700130400
000205c7000f0400001b0533fffa0406001e053300250400000d05c7002b
038d004c05c700480400004505b5003a01f4ffba0224ffba021affba04a7
004601f4009e01f4001001f4001b01f4001001f4006b01f4fff90227ffce
0000000f01a8fff502aa00a402aa00a40000001301a80056000000560000
ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff501a80093
01d6001303750032037500320375003203750032051b003204b5002405b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043d
ffba043dffba0481003604350036043dffba043dffba0481003604350036
043dffba043dffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba02b30032
02b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3003202b3
005f02b3005f02b3005f02b3005f02b3005f02b3005f02b3003802b30038
02b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a0692003e0692003e043fffba043fffba0692
003e0692003e043fffba043fffba0692003e0692003e043fffba043fffba
08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5
ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba064f0027
064f0027064f00270224ffba021affba064f0027064f00270224ffba021a
ffba064f0027064f00270224ffba021affba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba04a7004604a7004604a7
004604a70046093e0032093e00320740ffba0740ffba067f001407760014
0327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf002d04cf
002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba067f0014
077600140327ffba041effba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba040d0047040d004701a8ffba01a8
ffba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba
01a8ffba040d0047040d004701a8ffba01a8ffba043500450435004501f4
ffba01f4ffba043500450435004504350045043500450435004504350045
01f4ffba01f4ffba04350045043500450481003604350036043dffba043d
ffba024200360300fff7031a001a031a001a031a001a0375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032037500320375003203750032051bffba
04b5ffba051b003204b5002401f4ffba01f4ffba0375003203750032051b
003204b5002401f4ffba01f4ffba051b003204b50024067f0045067f0045
067f0045067f004501a800280000fe290000fea20000fef30000ff1d0000
ff120000ff920000fe7e08fc003408ad00320000ff880000ffaf0000ff3f
0000ff640000fe7e0000ff36018d000002f6fffd0000fe820000ff1004cd
00320000ff580000ff580000ff640692003e0692003e043fffba043fffba
08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435ffba0327
ffba034d007902b400230242003601f4ffba0290ffba01f4002f01f4003b
01f4001201f400b101f4006d067f001407760014022200430000fee202bc
000004440043045afff504cefff5045a005304ce0041045a005304ce0041
045a005304ce0041045a005304ce0041045a005304ce0041045a005304ce
004104350071043500ad045a000f04ce000f0400fffb0614000004980024
0400009604980024040000000556004a0556004a038d004605c700230685
0000049800440400004403c5004604e3002f040200550473ff6d05c70048
05c700120629000d0207fffe02aa002305c70022040000110239002d03e1
00190688002305c7ff7a0400000c05c700480766004a0588004505330000
0400fff9047300240473006e031d004804a8002002c000040239001404e3
00000239001404e3003e05f2003c05c7000b063f00440400000c04e3001a
038d00290450002b0450003f038d0046038d00500400002c0400002a038c
0034036000140400fff9019a00a1023f00a101fe000a02aa00e40aaa0023
09540023078d004408000029071c00290472003d08e4ffe50800ffe50639
000c038d004c05c70010038d00490000ff0905c70010038d0049071dffe8
0556004905c700480400000005c700480400003d05c700220400001105c7
00480400004505c70048040000450450002b038d00210239ff630aaa0023
09540023078d004405c700480400003d07990023047b002205c7ffe50400
000c05c70010038d004905c70010038d004904e3002a038d004c04e3002a
038d004c02aaffd30239ffa102aa00330239fffe05c700480400004505c7
0048040000450556002302aa000d0556002302aa000d05c7000b04000002
05c7000b0400000204730080031d006404e3003e023900140481004b0329
005405c700230400000d0533002504d400480400004504e3001a038d0029
05c70010038d004904e3002a038d004c05c70048040000450000feec05c7
00480400004505c700480400004505c700480400004505c700130400000c
038d0004042f0044042ffff704000096038d0043038d0046040000440400
0044038d003a0504004c035c0047035c004004b40040038b004502aaff30
040000440400004403a0004504000011038d00000400000d0400001b0400
001b0239002d0227002502390036023900280239003d0239003d049f003d
0639000906390009063900110400ff300400000c03fa000c04000045050a
00450544004b046d004502aafff302aafff302aafff302aa000c02aa000d
02aa001702aafff303e7003603e70036031d006402aaff3002aaff30037d
ff9402aaffe30239001402390014040000020464006603c2000204000011
05c7000d0400000c03f10004038d002903f70029038d0021038d003c038d
005d038d0046038d005d038d004605c7004803c70030038b004503a00045
0448002e0239ff7f0400fff40370003604000044038d005d038d0046066b
004406c2004406d300440485001403ae001405310014064d004f0487003d
047a003d041d001403d9003c0292001e02920026013effd201bd001e01bd
000501bd00050259001e036d00040260000401c0008902ec008902aa00b9
02aa00c102aa00b802aa00f702aa00f701fc001e01fc001e048300250483
0025048300530483005302aa012102aa00ec02aa007602aa012102aa001d
02aa007602aa00ec023900b6023900b602aa00f702aa00f702aa00a602aa
00a602aa00a602aa001d02aaffef030e002d025800040154001e01b3001e
0250000401fc001e031000960310009603100096031000960310009602aa
006202aa006202aa003c02aa0017038d0043045700960457009604570096
045700960457004304570043045700430457004304570043031000430457
002f0457002f0457002f0457002f0457002f0310002f0457002504570025
0457002504570025045700250310002f0457001a0457001a0457001a0457
001a0457001a0310001a0457004204570042045700420457004204570042
031000420457009604570096045700960457009604570042045700420457
00420457004204570042031000420457002f0457002f0457002f0457002f
0457002f0310002f0457002f0457002f0457002f0457002f0457002f0310
002f04570026045700260457002604570026045700260310002604570042
045700420457004204570042045700420310004204570096045700960457
009604570096045700420457004204570042045700420457004203100042
045700260457002604570026045700260457002603100026045700230457
0023045700230457002304570023031000230457002f0457002f0457002f
0457002f0457002f0310002f0457004b0457004b0457004b0457004b0457
004b0310004b045700960457009604570096045700960457004204570042
045700420457004204570042031000420457001a0457001a0457001a0457
001a0457001a0310001a0457002404570024045700240457002404570024
031000240457002f0457002f0457002f0457002f0457002f0310002f0457
004e0457004e0457004e0457004e0457004e0310004e0457009604570096
04570096045700960000fee60000febf0000fdee0000fee00000ff940000
fee60000ff440000fee30000fee50000ffce0000ff660000fee30000fee0
0000fee00000ff880000ff880000ff88000000000000ff5b0000ff5d0000
ff440000ff5f0000fe870000ffec0000ffa40000ff510000ff510000ff51
0000fec10000fe8a000000000000fee60000ff440000ff860000ff650000
ff580000ffce0000fe870000febb0000fee50000fee60000fee00000fee0
0000fec10000febf0000fdee0000fec10000fec10000febf0000fdee0000
fe160000feb50000ffa40000fe870000ff440000feba0000ff230000ff9a
0000fdee0000feb7000000000000fec20000ff880000fe980000ff820000
fe870000fde40000ff660000ff440000fec20000fec20000fec20000ff03
0000ff520000fd1f0000ffb70000ffcb0000ff530000ff070000ff150000
ff770000fef90000fecf0000ff190000fede0000fed40000fe2a0000ff35
0000ff5b0000fed90000fedc02aa00ec02aa007602aa00da0412005103f6
000005c70013071f000005c700130436004505440000047b000a05c70048
040000450556006e035c001d0473002103930017049b0014039c001405da
000a046e000006a000230639001104ed0046042b0045054a001e038d001d
04560046045600460540004504a60014059800480412004e03cd001e0316
0014047b000a0412004e038d00460239ff6305c70048033d0046033d0028
04e3002a05c70025038d004c0448002e0961004805110023055e00140458
001e07be0027056b002d05c7000004b800000843002306ac002d072b0012
0587001709ab0023077b002d040200090329000005e700120502001c05c7
0048040000450682003a04b600390682003a04b6003908c30048070a0045
061a002a0487004509b40048065600460000fe3709610048051100230556
004a038d004602ac001e0000fea60000febc0000ff860000ff860000fc2b
0000fc4c05c700250448002e0498002403c3002e047300220400fff9050d
0025041f001f0402002b032900180556002503e3001f064900360496000c
06ce002304fc002e084200250650002e0556004b038d00460556004a038d
004604e3003e037f000c0660003604d3000c0533fffa0406001e0707000a
045f000a0707000a045f000a02aa0033072b00120587001705560025041f
002e056d001203fe000c05c700230448002e05c700230448002e0533fffa
0406001e071d00220510002e044800dc05c70010038d004905c70010038d
0049071dffe80556004904e3002a038d004c05c7002b038d004c072b0012
058700170402002b032900180402002b038d002105c700250448002e05c7
00250448002e05c700480400004505c70048040000450548003b036f001b
05aa001a0400000c05aa001a0400000c05aa001a0400000c0533fffa0406
001e06fa00250560002d0498004404000044066e0044062a0044066b0066
05a5005404970066039f0054074100120604000c07990023064d002e05c7
004803a000450591003e04d0000c0000ff430000ff300000ff6d0000ffad
0000ff460000ff560000ff730000fed70000fe5c000000630000ff460000
ff56000000500000fef90000fe4f0000ff3e0000ff560000ff7c0000ff69
0000ff560000fef90000ff780000ff560000ff3e0000ff430000ff690000
ff7c000000500000fddd0000ff750000ffad0000ff090000ff090000fee2
0000fee20000ff8f0000ff210000ff0905c70010038d0049055600220400
fffb055600220400fffb055600220400fffb0556004a038d004605c70023
0400004405c700230400004405c700230400004405c700230400004405c7
00230400004404e3002a038d004c04e3002a038d004c04e3002a038d004c
04e3002a038d004c04e3002a038d004c0473002102aa004f05c700480400
003d05c700230400000d05c700230400000d05c700230400000d05c70023
0400000d05c700230400000d02aa001b0239ffea02aa00330239000205c7
00220400001105c700220400001105c700220400001104e300290239003d
04e300290239ffe904e300290239ffe704e300290239000f071d00220639
0011071d002206390011071d00220639001105c7ffe50400000c05c7ffe5
0400000c05c7ffe50400000c05c7ffe50400000c05c700480400004505c7
00480400004505c700480400004505c7004804000045047300220400fff9
047300220400fff90556002302aa000d0556002302aa000d0556002302aa
000d0556002302aa000d04730080031d006404730080031d006404730080
031d006404730080031d006004730080031d006404e3003e0239001404e3
003e0239001404e3003e0239fff504e3003e0239001405c7000b04000002
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
000205c700120400001105c7001204000011078d001b05c7000d078d001b
05c7000d05c7000f0400001b05c7000f0400001b05c700130400000c04e3
001a038d002904e3001a038d002904e3001a038d00290400000d0239ffff
05c7000d0400000c038d0049023900160431005704310057043100570431
00570431005704310057043100570431005705c7001005c7001006540000
0654000006540000065400000654000006540000035c0047035c0047035c
0047035c0047035c0047035c004705fc000005fc0000073c0000073c0000
073c0000073c0000042f000b042f000b042f000b042f000b042f000b042f
000b042f000b042f000b06e0000006e00000082000000820000008200000
08200000082000000820000002270025022700250227ffaf0227ffaf0227
ffff0227ffff0227ffd30227ffd303c3000003c300000503000005030000
050300000503000005030000050300000400004504000045040000450400
00450400004504000045065400000654000007f8000007f8000007300000
0730000003f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6
fffa03f6fffa06e00000082a0000082a0000082a00000544004b0544004b
0544004b0544004b0544004b0544004b0544004b0544004b067f0000067f
000007fb000007fb0000076f0000076f0000076f0000076f000004310057
04310057035c0047035c0047042f000b042f000b02270025022700250400
00450400004503f6fffa03f6fffa0544004b0544004b0431005704310057
04310057043100570431005704310057043100570431005705c7001005c7
0010065400000654000006540000065400000654000006540000042f000b
042f000b042f000b042f000b042f000b042f000b042f000b042f000b06e0
000006e00000082000000820000008200000082000000820000008200000
0544004b0544004b0544004b0544004b0544004b0544004b0544004b0544
004b067f0000067f000007fb000007fb0000076f0000076f0000076f0000
076f00000431005704310057043100570431005704310057043100570431
005705c7001005c7001005c7001005c7001005c7001002aa00db02aa00d8
02aa00db02aa001602aa0016042f000b042f000b042f000b042f000b042f
000b05fc00000613000006e1000006f7000005c7002302aa002702aa0027
02aa00160227fff10227ffd10227fff30227fff30227ffd00227ffd002aa
003302aa001603c4000003da000002aa002702aa002702aa001603f6fffa
03f6fffa03f6fffa03f6fffa03fe005903fe005903f6fffa03f6fffa05c7
001305c700130709000007330000058c000002aaffea02aaffea02aa0076
0544004b0544004b0544004b0544004b0544004b06cd0000062f000006e4
00000632000005f2003c02aa00ec02aa00db04ef00460556004a0556004a
0639001105c7ffe508d00023078d001b05c7002204e3003e080000290400
003004c100660000ffcb0000ffcb0000ffb70000ffb70239002d0239ff63
0400000f04730022040000440239003d0400000c0289001404ff001e04ed
001e02aa009202aa009202aa00d102aa00d102aa009702aa007602aa004e
02aa004e02aa0015023900b002aa00a902aa00a902aa00a902aa00a9032e
001e032e001e02aa003a0000ff7b0000ffa00000fee00000ff230000ff7b
0000ff7b0000feb20000ffa00000ffcb0000ffcb0000ffcb047300240400
fff904050005052900050556004903b8002d03d300450432002d0432002d
038e002d032900180239003c025f00190451002d038f00230510002e0448
002e0400004503d3002d04550045044d00450455002105c7003e037e0045
040000450400004503a6002e03aeffff03aeffff037f000c044c002d040a
002d053d002d0409002d0400001105c7000d038d002903290018032e0045
044f000f0348001f040000110448002e03a6002e043a000f03fe000c0360
0000044e00000318001e0318001e0370001e02f6001e02f6001e0376001e
0386001e0199001e01f9001e03aa001e02f8001e0452001e03b3001e0387
001e0358001e02b0001e02a7001e0347001e02e6001e03a0001e046e0000
0230001e0230001e0283001e031f001e027a001e027d001e020d001e020d
001e01ef001e01ef001e0268001e014f001e0286001e03e9001e0241001e
024e001e020c001e024e001e024e001e027d001e0188001e029f001e0272
001e03e9001e025a0005028d00050242001e021f0005022b001e02ad001e
02420005014f001e01d6001e029f001e025a00050242001e021f0005025e
001e02ad001e02420005077d00460a660046038300460a2f00460541ffba
01e9003c045a00110000ff0d0000ff350000fece0000feb70000fec90000
ffcf0000ff4f0000ff9e0000feca02b3005f02b3005f03e9004a03e9004a
039affba0327ffba039affba0327ffba0506005f0486004304f1004e04a2
003304a0000f053b006404ec0043052c0021048300250000000000000000
000000000400ffee038d00430355000701a8ffba01a8ffba01a8ffba01a8
ffba0658001309c500470400000008000000040000000800000002ab0000
02000000015500000400000002000000019a000000ab0000000000000556
004a071d00220510002e0616000206310044062e004405c700100556004a
0400008104e3002904e3003e031d0064038d00290445005d000001020000
ff420000fea40000ff3a0000ffcb03fe000a055600470556004a05560047
04a000250348001f0000ff430000ffae0000ffae0270005800000000021a
ffba0250001e0000ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a
0000fe9c05b5003a05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
003202b3003202b3005f02b3005f03e9004a03e9004a0692003e0692003e
043fffba043fffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba02b4002302b400230327ffba0327
ffba02b4002302b400230327ffba0327ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba043500450435004501f4
ffba01f4ffba040d0047040d004701a8ffba01a8ffba03e9004a03e9004a
03e9004a03e9004a0692003e0692003e043fffba043fffba0400ffa80400
004402aa0014063900110400000c0400ffae02aaffbc02aaffbc031d001e
0239ffbd038d00290400003d0296001e03c50041062100140239002c0227
00250400fff9044c002d046400190400fffb0400004402aa004f04c6003d
040000110239003d063900110400000c0400fff902aa000d031d00640365
ff30040000110400001b038d0029038d0049042f004404000044038d004c
035c0047035c0040038d004c0239003c038d00430384000a04000002038d
002102830005020c001e020c001e024d001e01ef001e01ab001e01abffa6
0221001e0292001e014f00150175001e0151001e0151001a018b0000014f
001e014f001e022a001e0395001e03e9001e029fffa4029f001e0293001e
024e001e0291001e01b3001e01b9ff920188001e029f001f0289001e029a
001e0253001e025a00050231001e0231001e026e001e0220001e0228001e
0000fe930000fe930000ff730000febc023900b00230001e020d001e024e
001e02520005020d001e05c7004805c700100473003c0556004a02aa0053
043100570431005704310057043100570431005704310057043100570431
00570227ffcd0227ffd10227ffd10227ffd10227ffcd0227fff10227ffcd
0227fff103f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6
fffa03f6fffa0227ffd10227ffd10227fff10227fff103f6fffa03f6fffa
03f6fffa03f6fffa045a005304ce004a032e00130556002205c7000b05cd
001c04e3002a038d004c031d002a0239ff63059e004a0400004405560023
02aa000d05c700130400000c038d0043038d0046038d00430239003d04a0
00230348001f05c7000f0400001b05c7000f0400001b0402005503290042
056d001203fe000c0000fec60000fed40000fec60000fed40000fe5f0000
fe5f0000ff350000ff7b0000feb2070e000503550045038d004304e30029
0239002d04e3000a0473002205560023038d00490239000e05c700230400
000d05c700220400001104e3001a038d002903c60041054600230409002e
049e00450000ff3b0000ff510000ff080000fef90000fea40000fea40239
003c059d002605c7ffe5059d00260000fee00000ff590000feeb0000ff0f
0000fee60000ff090000feed0000fef50000ff0e0000feed0000fdcc05c7
004804000044078d001b05c7000d05b500230000fe9205c9004804c60011
07fc001b0697000d023900b002f300260171005101710051040000990400
009902aa00e402aa00e402aa00e402aa003c000000460000003b00000031
0000005600000044000000560000004a0000004904e300370400006503e1
004202db006e03c200420381003203d20024038a00340400005803e70043
03d7006a040000510439006702c100500400002c03b8004e0400002003e1
00620400005803b800220400007c040000510239003c04d5002906c70029
06a800290466002306a600290422000a03ca00160447004904a4001a0394
0035035f001604b3004904a4001802150027028f001c0474002703d10027
051a002204a400130480004903a8000a043d0027041e001602f4004d03d7
002f04840008040e000a0653001a043d001c0412000a043d00370572000a
0615004903d100250480004903aa000a04af0025048800180422000a0422
000a0422000a0422000a0422000a0422000a044700490394003503940035
03940035039400350215002702150027021500060215ffee04a400130480
004904800049048000490480004904800049048400080484000804840008
048400080412000a0422000a0422000a0422000a04470049044700490447
00490447004904a4001a04af002503940035039400350394003503940035
0394003504b3004904b3004904b3004904b3004904a4001804a400180215
ffcb0215ffcc0215ffec021500270215002704a40027028f001c04740027
03d1002703d1002703d1002703d1002704a4001304a4001304a40013047a
0018048000490480004904800049041e0016041e0016041e001602f4004d
02f4004d02f4004d02f4004d02f4004d03d7002f03d7002f03d7002f03d7
002f0484000804840008048400080484000804840008048400080653001a
0653001a0653001a0653001a0412000a0412000a0412000a043d0037043d
0037043d00370422000a0572000a048000490422000a03ca0016035f0016
03cd001303940035043d003704a40018043d002702150027047400270451
0018051a002204a4001303ef003b0480004904a4001803a8000a03940018
03d7002f0412000a04760027043d001c04ab0018048600270422000a0394
003504a400180215002704800049048600270412000a0215ffee0412000a
0394003504ab002f035f0016042a004902f4004d021500270215ffee028f
001c05c1000a05d2001804b5002f04590027045e001e04a400180422000a
03b4001803ca0016035f00160444000c0394003505bf000a032c002704a4
001804a40018045900270440000a051a002204a400180480004904a40018
03a8000a0447004903d7002f045e001e04760027043d001c04a400180433
000006800018068000180480002f0590001803b40018042a003c06600018
041e0000035f0016025600170256007902560012025600370256000c0256
003b02560021025600230256003702560021025600170256007902560012
025600370256000c0256003b0256002102560023025600370256002104a4
00470807003e04f7001304ed009d04ed009d060b001a04d5008505e30085
02260099022600890226002c0226001e02260063022600300226001b0226
001d0226001d022600290226001e022600260226001d0226000802260028
0c9600460e0c00460000ffba0ed200460000ff5b0000ff910000ffb70000
ff9b0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0692003e0692003e043fffba043fffba03e9004a03e9004a0481
003604350036043dffba043dffba01a8ffc301d6ff5f01a8ffe901d6ff85
051b003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba01f4
ffba051b003204b5002401f4ffba01f4ffba037500320375003203750032
03750032067f0045067f0045067f0045067f00450481003604350036043d
ffba043dffba0692003e0692003e043fffba043fffba0692003e0692003e
043fffba043fffba04cf002d04cf002d0327ffba0327ffba04b4ffe00500
ffe00496ffe804e4ffe8075c003205da0032070e0032051300390bdefbda
0000fe2c0000fffc0000006b000000730000006b051b003204b5002401f4
ffba01f4ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba051b003204b5002401f4ffba01f4ffba051b003204b5
002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba01a8fff5
046a0023034f000b04e3004e037f002405c700250457002505480022038d
005c0a6600440400004a0400000b083e001205b7000c068d00220584fff9
0780ffee05a9ffff055600220451002d07a10012061e000c07f800230665
002e05c700250448002e053300250400000d02aa004702aa004f03c50046
06d700330437003d0454004803f90045053500240464ffec071d002205c7
001705c9002b0492004c02aafffe04000045038e002d013effd204000011
0473008004e3001a0239003c095800690a3dffb80bb600000a3000320ed2
004401a8ffba01a8ffba01a8ffba01d6000201a8003201a8004601a8ffba
01a8001a0251003a01a8002901a8004601a8ffba01a8004801a8ffba01a8
002901a8ffba01a8004601a8ffba01a8006e01a8ffba01f4009e01f40010
01f4001b01f4001001f4fff9022e008d01f4006b0199004602bf003202bf
003204000019060a00230591002305f9004b0616000a0594002305a70097
0518004105bc0023072900230617005505610041045900410775004105d5
005a05c100230499ffd305cf008205f8000a05c10083067f00230586006b
05c100060587007405c000230593007806c9fff605b300830675002305c0
0023061e000a052f0082056100230586005b047d0041063f005a06800000
05e8006e064f00670199002d01fe00730154ffeb00f7ffd701a8ffd001f0
ffd2047500240638001403ff00140455003c047c003c042b000f0416003c
0375000c0413000f0524000f046f0050041d000f01dd000f063c000f0431
0046041d000f0428001404160050043f003c043c0083044000140203ff52
041e005a0321002a0440003c02460005062f000f039200540447003c0418
00140418001e063900140413000f040d003c031b003c063700140427000a
0429005a0585004d0532000f023900b002f40010077a0045077a00450616
000a085e0014086b0014085d00140836001e0a7c001402ea001302ea0013
0427fff70427fff7051b0032051b0032051b0032051b0032051b0032051b
0032051b0032051b0032048000240480002403e5ffba0480002404800024
03e5ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043d
ffba043dffba04a7ffba04a7ffba04a7ffba04a7ffba064f0027064f0027
0224ffba021affba04a7004604a700460224ffba021affba040d0047040d
004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba051b0032
04b5002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba03b7
004a03b7004a0375003203750032036b0046036b00460000ff1e0000ff48
0000ff1e0000fee70000ff4f0000fef90000ffb50000ff520000ff470000
ffb50000ff520000ff470000ff010000fea60000ff010000ff230000ff24
0000ff570000ff570000ff920000ff920000ff920000ff920000ff2f0000
fed70000ff340000ff31045a005304ce004a0000ffae02af0021035a0043
03c5004e040000210000ffad0000fefe028d00ab028d00a00444003c043d
003c0444003c043d003c0444003c043d003c0445003c0444003c043d003c
04a70046028d00ab0327002202300014017a002e0000ff75040000220658
001308000000000000000000ff4d05b5003a05b5003a01f4ffba01f4ffba
015e009302b3005f02b3005f08c9003e08c9003e06c5ffba06c5ffba067f
0014077600140327ffba041effba0242003a0193003a03e9004a03e9004a
0000ffce031d002a05bbff630468ff630b2f001a082f001a0553001a0406
001e056d001203fe000c0576004a05ba004a049900170538006402aa0053
02aa005302cd007002aa00e6055400e60200009108000000080000000a99
004101c0002d0355005303550003027f00330800015707a7001407a70014
029c00000783009102aa005302aa00a802aa004b06d0005c0565005c055b
00e403e7004303a0fffd03a0007003a0004d040000910239008e07a70014
04000091040000670454001407a700140400006203fe00910473000304ec
0091051d00a9023000a907100091051d00a9023000a901c7000000000000
080000000800000008000000080000000800000008000000080000000800
00000612009f045a002a039a00360435ffba0327ffba04cf002d04cf002d
0327ffba0327ffba0000ff530266001301550024026600110266003b0266
002902660029026600410266002902b5001702b5001702b5001601990032
0199001c0266001302660088026600140266002c026600110266003b0266
002902660029026600410266002902b5001702b5001702b5001601990032
0199001c026600080266000a0155002503bc000a026600070266fffc01de
003c0155000c06ab0034067c00340556004c0831006204e3005407050034
040200560556003d074e00620414ffcd073f002f07e7005e05c700270400
00270400002705810010046d003505aa00620639003d05c7ffe705e50045
05ec00620473002705c7004c076a0091065c005e05560027055600270556
0027074100480994001e05c7001404e30017038d002105f2003c05960039
0227002405c7002205c70010076a00d7052b006d0314003f04ec009a0581
00480473005408ec004a033f004c04bd0075047a003f034d0029041f0052
029d002a07530048096c00220464003e0389000004a0002505c7002505b4
002b0639008304730044047300440556000b05c7ffc304000027038d0040
023900580239fea0051500a90639003e0637003c086a0032060000860600
0086081d008606000086060000140600002c06000011060000860600003b
03b7008602aa0033052c003307ad00330869003305c70012086100120ae2
00120d630012086c003305c7000f0862000f0ae3000f04e300290556004a
05c70023071d00220239003c0432003c062b003c05ea003c040000110617
0011081000110a0900110621003c0400001b0612001b080b001b0239003d
038d004604000044063900110900004e05c700230900004e0556004705dc
004a0582003205c700230900004e0600001302aa00a802aa00a802aa00a8
02aa00a802aa00a802aa00a8036e004a036e004a035c004a035c004a035c
004a037e004a037e004a037e004a06b500320000fc000000fc000000fbff
01e000640400000004e8003204e8000004830025038d00520400006102aa
003904540014037f004a037f004a045400140454001402aa00a802aa004b
02aa00a802aa004b02aa00a802aa004b05f4004605f40046041500540415
002e04ec009104ec0091051d00a9051d00a9038d005202aa00f102d60070
02aa00ec02000068020000910200006e0239008104000065040001820400
00650400009c0800ffed0800ffed02000023023900b0023900830556004a
02aa005302000068038d003a04000055040000aa000000460207006401bb
006e0207006401bb006e05c700230400000d05e7003e04cf001404020055
04020055037b0020037b00200435002004350020035f001602f4004d094b
001005870049090c001006020049088d001005a900490764001004f20049
0764001004f200490764001004f200490556004a038d004605c700220400
001105c700220400001105c700220400001105a3002902df003d04e30029
0239003d06b3000a04aa000a06310048047800450a13004806ba00450473
00220400fff904f5000a04dc000a062c000a0610000a05c7004804000044
06d9004804e500440558003203e900320518002c045e004205c700120400
0011078d001b05c7000d0453005004080050047300240400fff904730024
0400fff9045e003d0364003d032e0050032e005004590014045900140400
00510400005102560021056c00440378003d07a40011056a000c032a000d
055800160521001403b5002805c70019040000440389002302aa000d03c5
004403c5004403c5004404e300290239003d061600260471000c03890023
02aa000d050f004a0372005005c7002303a4001405c7ffe50400000c0556
ffc6038dffd6038d00460400000d05f600140526003c0473ff6d02aa004f
0571005a04330050059a005a0413005005cd003c0453000f05c7ffce0400
001405c7000a0400000e05c7ffe50400000c0556002302aafff604730044
031d0050066600000402002b05c900480583000c05c7002204e3003e031d
fff205c7000e055600220412006e073900500544004b05ec00500386001e
03c9001e063900110473002e04730022071d003202aa0033094f00120431
ffed05740049033d005f038dffed048f001402aa004f040000440286000f
029e0016021e0014063900110400000c0400000c033f0032033f00320400
006405ce004305c7004805c7004806ba004506ba004503e3005a041e0016
028f000d03e8000d030f0014044d0014034d001e04ec001e02aaff300400
0002040000020639000c0639001104420014038d0018038d0018036dff7b
0442001b0400fedc0442fedc0400fe7c0374000c02aa00370292001e01b2
001401b20030029f000105a3001b0588002d05c7006106640002042f0029
048600270556002204e3003e05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a0315ffba0315ffba
03e9004a03e9004a051b003204b5002401f4ffba01f4ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04350045
0435004501f4ffba01f4ffba0000feb10000ff080000ff3e0000fe1c0000
fe8a0000ff320000ff330000ff100000ff100000fd840000fc860000fc83
0000fd650000fe310000fdb70000fef90000fe6703de00e1087400130013
000000>
<000000000000009600000096000000960000009600000096000000960000
009600000096000000960000009600000096000000960000009600000096
000000960000009600000096000000960000011800000118000002160000
041400000624000006240000062400000624000006240000062400000624
000006240000062400000624000006240000062400000624000006240000
06240000062400000624000007d6000007d6000007d6000007d6000007d6
0000091c0000091c0000091c0000091c00000bb200000bb200000cee0000
0cee00000cee00000fd800000fd80000115a0000115a0000115a0000115a
0000115a0000115a0000115a0000115a0000115a0000115a0000115a0000
115a0000115a00001596000015960000159600001596000019ae000019ae
00001eac00001eac00002188000021880000218800002188000026880000
26880000268800002688000026880000268800002b8200002b8200002b82
00002b820000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
000030140000301400003014000030140000301400003014000030140000
301400003014000030140000301400003014000030140000301400003014
00003014000030140000301400003014000030140000301400010000124d
02b5003c00d100070002001000400086000005e904eb000500020000000e
00ae0000000300000000021a000000000003000000070076021a00010000
00000000010d029000010000000000030018039d00010000000000040018
03b50001000000000006001803cd0001000000000007003b03e500030001
04090000021e042000030001040900010030063e0003000104090002000e
066e00030001040900030030067c0003000104090004003006ac00030001
04090006003006dc00030001040900070076070c00a90020003200300031
003700200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e0020000d000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00540069006d006500730020
004e0065007700200052006f006d0061006e002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002ea9203230313720546865204d6f6e
6f7479706520436f72706f726174696f6e2e20416c6c2052696768747320
52657365727665642e200d0d486562726577204f70656e54797065204c61
796f7574206c6f67696320636f7079726967687420a92032303033202620
323030372c2052616c70682048616e636f636b2026204a6f686e20487564
736f6e2e2054686973206c61796f7574206c6f67696320666f7220426962
6c6963616c20486562726577206973206f70656e20736f7572636520736f
66747761726520756e64657220746865204d4954204c6963656e73653b20
73656520656d626564646564206c6963656e736520646573637269707469
6f6e20666f722064657461696c732e454647414f502b54696d65734e6577
526f6d616e50534d54454647414f502b54696d65734e6577526f6d616e50
534d54454647414f502b54696d65734e6577526f6d616e50534d5454696d
6573204e657720526f6d616e20697320612074726164656d61726b206f66
20546865204d6f6e6f7479706520436f72706f726174696f6e2e00a90020
003200300031003700200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e0020000d000a000d000a0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e0045
004600470041004f0050002b00540069006d00650073004e006500770052
006f006d0061006e00500053004d00540052006500670075006c00610072
0045004600470041004f0050002b00540069006d00650073004e00650077
0052006f006d0061006e00500053004d00540045004600470041004f0050
002b00540069006d00650073004e006500770052006f006d0061006e0050
0053004d00540045004600470041004f0050002b00540069006d00650073
004e006500770052006f006d0061006e00500053004d005400540069006d
006500730020004e0065007700200052006f006d0061006e002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e002e410a005403ef02ad
001d001f03ee03ed003c001f03edb2061d1fb803ecb3032a1f3f411503e4
006003e9009f03e500df03e50004001003e4001003e5003f03e5007003e4
00ff03e40005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932
b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003
deb2424232b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef
03de000203de03df0028001fffc003dfb3282e32f0410d03df0001037e00
0f0101001f00a003dd00b003dd0002004003dab32426329fbf03cc000103
ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b603b500
64001fffc003b5b30e1132004173038d000100c0038d00d0038d00e0038d
00f0038d0004006f03a7007f03a7008f03a700af03a70004000f03a7001f
03a7002f03a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5
006f03a5008f03a50004005403aa0001006b03aa000103a8036a0022001f
038c03940015001f038b03930015001f03a40393001a001f03a20394001e
001f03a10393001e001f039f0394001e001f039b0394001a001f039a0393
001e001f039903940016001f039803940016001f03970393001b001f0396
0394001b001f03950393001b001f03760375001a001f03740375001a001f
03a00373b21e1f10411e0393002003930030039300030020039400300394
0040039400030000039400010383036c001e001f03b1036c0032001f036d
036c0032001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0
037d00c0037d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0
412d037c00b0037c00c0037c00d0037c0004003003730040037300020000
03730010037300200373000300e0037300f00373000200b0037300c00373
00d003730003008403730090037300a0037300030377036a0029001f0389
036ab2281f40b80367b33940323fbb0366000100400366b3191d328fbb03
66000100400366b3090a3240b80366b3090e3240b80366b3090f323fbb03
65000100400365b3090c3240b80365b31a1d3240b80365b3090e326b410e
0363007b036300020014036300240363003403630044036300040363b224
2f1fba034e006d0800400e1f7f027f037f047f050430440112bf03320050
0800001f0012032d003c0800b61f5f3c013785a041850362000100000362
001003620070036200900362000400f0035f00010020035e0020035f0030
035f0040035e00040000035e0000035f0010035f00d0035e00e0035f0005
0010030f0020030f0030030f00d0030f00e0030f00050000030f0010030f
0050030f0060030f0070030f00d0030f00060000030f0010030f0020030f
0030030f00e0030f00f0030f0006030f00270000030e0030030e000200e0
030e00f0030e0002030e004a00e0030d00f0030d0002030d002700d002fc
0001001002fc002002fc005002fc000300d002fc00e002fc0002000002fc
001002fc002002fc003002fc005002fc006002fc000600e002fc00f002fc
0002002002fc003002fc004002fc000302fc402c27c02901b02901a02901
902901403c3f413240223f4132121212858f4caf4cbf4ccf4c045f4c6f4c
7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f
413b02af0001005f02af009f02af00df02af0003001f02af002f02af003f
02af006f02af000402af02af001f02ad002f02ad003f02ad004f02ad005f
02ad000500df02ad0001000f02ad001f02ad003f02ad005f02ad009f02ad
0005005f02ad00df02ad0002000f02ad001f02ad003f02ad0003004002ac
b23a334f414d02ac005f02ac009f02ac0003002f02ac003f02ac0002000f
02ac003f02ac00af02ac000300b002ac00e002ac0002004f02ac005f02ac
00a002ac0003001f02ac002f02ac003f02ac0003000f02ac0001000f035a
0001000f035a001f035a003f035a005f035a0070035a000500cf035700df
03570002000f0357001f03570070035700af03570004035a035a03570357
02ad02ad02ac02ac032c400d31151f001616000000121108104110020c00
4a000d01a8004a000d0198004a000d0189004a000d013f004a000d012440
0e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d01940041000d0121
400b410db4410d4f410d29410d411002170021000d02150021000d020600
21000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d
9d210d71210d3d210d4110021c001f000d0214001f000d020b001f000d01
96001f000d014a001f000d0126400b1f0dc61f0d571f0d371f0d410d019e
0141000d00420141000d001e0141000d001b0141000d01f2b40f440f0009
bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c411fb801fe
b23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b2
24e41f411501f401490401001f01f301490401001f01f1014900ab001f01
f001490067001f01a6003c0125001f01a4b23c811f411501a3010f019a00
1f01a200220801001f01a100500401001f019f0149019a001f019d014900
67001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b22ce4
1fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f41
11016700240201001f0163002502ab001f014c010f019a001f0148014900
6c001f0147b22c891fb80145b22c9e1fb80144b22c791fb80143b223311f
b80127b23c811fbc012300500101001f011fb223e41f4115011d0023019a
001f011c00230801001f011b00250801001f010e010f0401001f010d0022
0401001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e
1fe3bc01490156001f00e20149b2ab1fd1b901490401b21fcf2cb80125b6
1fce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41f
b0b901490201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d
1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c
3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38
b80149b3ab1f3124b80401b21f3025b802abb61f2a24e41f2623b80156b4
1f35555537ba023500070175402c0774076207560751073b0733072d0720
071d071c071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b534201b0124b004b
5442b0372b4bb807ff52b0382b4bb008505b58b101018e59b0382bb00288
b801005458b801ffb101018e851bb0124358b90001012f858d1bb9000101
7c858d5959014bb0c063004b6220b0f65323b8010a515ab0052342180016
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
2b2b181d42b0964b5358b235aaaa1d4259b0324b5358b235ffff1d42594b
b04753205c58b90271026f4544b90270026f45445958b9017a0271455258
b90271017a4459594bb04753205c58b9002202704544b9003c0270454459
58b901b30022455258b9002201b34459594bb04c53205c58b90149002245
44b1222245445958b901c20149455258b9014901c24459594bb06753205c
58b9002402714544b90050027145445958b9021e0024455258b90024021e
4459594bb8020153205c58b9010f00224544b1222245445958b90c00010f
455258b9010f0c004459594bb01c53205c58b125254544b12c2545445958
b13725455258b125374459594bb0ab53205c58b125254544b12325454459
58b901590025455258b9002501594459594bb8010153205c58b125254544
b1282545445958b902080025455258b9002502084459592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc64
63456523456023456560234560b08b766818b080622020b164dc45652345
20b003266062636820b003266165b0dc236544b064234420b16163456523
4520b003266062636820b003266165b063236544b0612344b10063455458
b163406544b26140614523614459b3a67f434b4565234560234565602345
60b089766818b080622020b1437f4565234520b003266062636820b00326
6165b07f236544b043234420b1a64b4565234520b003266062636820b003
266165b04b236544b0a62344b1004b455458b14b406544b2a640a6452361
44594b5242014b5058b108004259435c58b108004259b3020b0a12435860
1b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c23
42b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f
2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011234200
2b001845694445694445694445694473737374737373737475752b737374
7475184569447373742b4bb021534bb046515a58b03cb03c45b040604459
012b2b2b2b75752b5840365f235f255f285fa5046f236f256f286fa5044f
234f254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f25
1f281fa5047575757575755943584010bf3ccf3c026f3c7f3c8f3c9f3caf
3c0575755943584012bf22cf22025f226f227f228f229f22af2206757559
435c58b6403c9f22ef220375592b2b017474747445447373747475754544
7345447374454473747573737373732b5840246009700980090310092009
300940095009056f037f038f03031f032f033f034f035f0305b8ffc0b207
3a33b8ffc04046063a33900ba00bb00bc00bd00b05b006c006d006e006f0
060520063006400650066006700680069006a006099006900702600b700b
800b03100b200b300b400b500b051f070100757575737575752b2b757575
751b40100706441f0b0a441f0302441f0908441f2b2b2b2b592b752b4358
41220063032d00010003032d0013032d0023032d0033032d0053032d0005
00c3032d00d3032d00e3032d00f3032d00040083032d0093032d00a3032d
00b3032d0004032d032d4518694474747575592b4358b900180332b33035
3238b80332b361663238b80332b3535a3238b80332b3454e3238b80332b3
3c413218b80332b23f330a410f0332000100ba033200ca033200da033200
ea033200fa03320005033203324518694474752b2b2b2b2b2b597300732b
012b7575002b2b2b74002b2b2b732b74012b002b2b017373737474732b2b
00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b00017375007373004569440073730173742b2b2b2b2b732b00732b752b
2b732b2b2b2b2b2b2b2b2b73742b002b2b2b2b0000>
[12309 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> LAAAAA+TimesNewRomanPSMT AddT42Char 
2 150 18 <00010003ffe4023e058e00030063b0852b5840090005cb1f6736000101b8
0327400d02031402020303000002010b00b8011f40142003300360037003
a003e0030603bb01ad02cb04b8016fb1df182b10f6edf45ded003f3c3f3c
87052e2b7d10c431302b1bb3020b030000183f3f30315901012301023efe
155001eb058efa5605aa>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 280 20 <000100f0000003060568001600b2b0852b58401440186018a018e0180400
1840180276008600020e411301690141000901a000220003016901410008
01a00023000001f8000f016900160141000001f2400e010f0f0209020105
09080c020300ba01f70003014940120e0e0f401135300f7f0f900fa00f04
0f1917ba022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c1112
3901113900f5edfc01f52b2b3130005d01715d1bb4010507090ab803e2b2
6c090c00183f2b323f30315913253311141616171521353e023511342726
26232207f0014a21133c5cfe026038160a07251a254204c7a1fb8772381e
022525021d317a02dc942a201e1f>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 534 21 <0001002c000003ab0568001e0195b0852b58408207180b3917181c3d3418
401c3d3419401c3d340f1e161629073c074907a9070640205b045a085b17
5a186b08741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020
f904f9171515011d0419051b15191619171d180709170b180b1d34194719
89178f200718190202171a190c19060d031902050618171615140713040d
b8016840090940140c3f80090109b80333400c10051a8f19019f19af1902
19ba03330003018db301020c1eb8018d400d0006e24f135f136f137f1304
13b801074013400001001a002040208020036020a020022019bb01f90003
000d014040145f026f027f028f02bf02cf02df02ef020802191fba018e01
0100182b4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d
713c3ffd71b10602435458b78f0901bf09cf0902005d71592be411121739
11123901111239390210b10602435458b47d198d1902005d590e3c871005
7dc40ec431300171725d005d012b2b2b002b1bb70d0d101e1e021009b808
1ab46c10050219b8081ab26c020c00183f2b3f2b12392f11392f30315901
032135000035342623220607233636333216151407060702072132363637
03ab5ffce0016101209e6e649f262519cf9ba5dd304aa6f93e01626c5746
1a0105fefb2501420198a981a67571b9c6d4906767a2b5fef03810312d00
>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 2332 48 <00010022000006f2054c00300204b0852b5840e80f18010e0008170e190d
280f290f2a043007123d013d2f59186f0168186d2f791897019a2fcb18da
18e801eb180d0d18010a1706304630033618363047180316302718263003
061805301717032b00291826303b003a173918351935303f324f3268007a
007618791974308a008918853099009730a900a630a032b032cc17c918c0
32dc17d918d032ed17ea18ea19e032f600fa17f7302548014917462f5a01
5917562f6a177819c618c530d618d630e518e5300e0f1f1b092122201f1b
1a21222e1f1b282122021f1b082123101f1b162123211f1b272123171818
220001140018190001191818b802c9403e302f14301817302f182f012f18
0316171a1919170209080800003030272808305b000002192f2e22202021
a021b021c021d021e02106219e403201320102b802c9400d100f200f1102
550f9e3161dc182b4e10f42b3c4dfd3c4d105df65d3c4dfd3c3c11392ffe
003f3c3c103c103c103c3f3c103c103c173901113987082e2b057d10c487
082e182b057d10c4182b2b2b2b2b2b3130015d5d7171717100715d435c58
401b2f10140c3f0110140c3f0110103918181139181012390008183917b8
ffd0b5173917301439012b2b2b002b2b2b002b2b59015d005d1b400c0118
2f03091916020008191cb803e240096c190206252903090ab803e2b36c28
090800183f332b17323f2b3f3f1112173930315921011114171633331521
353332373635113427262623352101012115232207061511141716333315
2135333237363511010346fdf41b255030fe2830562416140e4b53018001
ec01e401802f5724161c25502ffdc030572316fdf50475fc767d1f2a2525
34207203765a281d2725fbdb042525342072fc8a7d1f2a2525342072038a
fb8b>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 3310 53 <0002002300000568054c00280034024db0852b5840b224180f0f0255250c
0f0f0255872201128526c523c52d034924a72d02181f172e662403090109
252625470058016f026f247b017b02731f7320762278258a018720982dab
01ab25b726bc2dff2415062084018c2484279a24a501a402a624af2dbf2d
d830ef2dff2d0d120016011a0212281a301a313a2e3a306624692f0a2a08
021c1c01151f1b0f21220025281b00081f1b0e2123161f1b1c212340022c
2524242202011402020124ac022002072a29a507b8ffc040170f0f025507
100750076007039007a0070207001bac1c34b80191400f32281d1d1c020f
0e0e010100081221b8ffc0b2583521b8ffc040454f350021af21024f21a0
210221b510360140367036d036033634080613130255080c0f0f0255080c
0d0d0255082216150c10100255150c0f0f0255151a0d0d0255159e3561b9
011900182b4e10f42b2b2b3c4dfd2b2b2b3c105d72f45d712b2b4358b900
2f032de91bb9002f032ded59003f3c103c103c3f3c10eded10ed12395d72
2f2bfd3c103c191a10ed870e2e182b7d10c40112391a182b2b10ed0110c0
2b8710057dc43130184379401c2d311e231f252d232f3301311e2f33012e
222c330023243020323301002b103c2b012b2b2b81810172715d0072715d
435c58b90025ffe0b20c3901b8fff0b2143928b8ffe0b614390210193928
b8fff0b5103930100f39002b012b2b2b2b002b59015d2b2b1bb2242c04b8
07e940096c2c2c0f1c01081c34b807fcb26c1c32b807eeb26c1c1bb803e2
b66c1c02280c0f10b803e2b26c0f0800183f2b32323f2b2b2b3f1112392f
2b3230315921210106232226271114171633331521353332373635113427
262323352132161615140607011616170132163332363534262322070568
fe96fe3533200d1e101c264c35fdbb335625151c274d3301eed8cd8fa3ab
0118608a6ffc3d131c09c2c59f833a63027a020101fe76801f2c2525381f
74036c801f2c253fa9757db826fe7b86580c029401a8827f9f13>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 4056 55 <0001003e000004b0054c001f011eb0852b58403a5a015a025a1d5a1e6b01
6b026b1d6b1e082f213f214f219805971ba805a61b0702011d1e161f1b10
2122091f1b0f2123071823001f02100f0821b802c0401309012b0040170e
3f120f001f005000af000400b80228401a08090613130255090c0f0f0255
090c0d0d0255092217161f2b1eb8ffc0400e170e3f12001e101e5f1ea01e
041eba02280016ffec400b10100255161a0d0d025516b802c0b320645d18
2b10f62b2bf45d4358b9001effc0b20b351eb8ffc0b20b0f342b2b592be4
103cfd2b2b2b3cf45d4358400900400b3500400b0f342b2b592be410e600
3f3c3f3cfd3c2b2b0110c910c93130015d005d1bb6021e1e10081f18b807
f4b56c1f020d1011b803e2b26c100800183f2b323f2b3212392f33303159
011323262726262323111417163333152135333237363511232207060607
231304a10f260b131f6754bf1b264f2ffdc130562416a35f28344a072610
054cfec254243a37fbf47d1f2a2525342072040c0e136c5c013e>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 4442 68 <00020049ffed038903af0032003d038bb0852b58b1020243545840203f40
0d0d02553f4013130255151b072e25080b0b0255250c0d0d025525000c33
b8fff0400b1212025533161313025533b8ffdeb41010025533b8fff44015
0f0f0255330c0d0d02553339070c0d0d0255072d2eb8ffc0402009120255
2e33001e04292c30340c40090b02550c401d1d02550c40111202550cb8ff
d4401e091202550c0c047f180118401112025518401d1d02551810251e07
3c2c04002fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd01
2f2bcd2f2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a3302
1253360112201f39803fa809b60a03122b127d007d3386008b0b8b35061d
12163a103f803f04091c4c054c06452045224c3a403f891d080a0e072000
2249014b0a490b49354b37433a493d570b670b8509840a840b0f54168316
021f3f5f3f0260083300343c2e292d34bb011b000c000cffc0b609390c28
0b390cb8ffc0401a3a35100c500c02400c500c600c03200c500c600c760c
040c3c18b8ffd840290b394f185f186f18032f187f1802187e1f10011025
1e07303c403c023c2c04702d802d022d35292c30b803464011040b2ec02d
012d602500330d0c0c343433b8fffcb41010065533bb016700240025ffc0
401a0e3900251f2580259025044025f0250280250125101010065525bb02
4300070015ffc0b21f3915b80167401e1b2f393107400e39200750078007
03100701f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b
10fd2b5d71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed71
3fed72fd5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed
11123911123939313043794047353b1c23051337383638020609080a0802
06212220220206350b392000111d131c0012130f1f0d1c0122233b05391c
00380834200135340b121c101c010e22101c013a063c1c002b2b2b3c103c
2b012b103c2b103c2b2b2a2a2a818181017201710071017172005d4358b2
3f12015d59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b6
0e3937200e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391c
b8fff0401a0b390a280b3937280b390a280a3937280a390a280939372809
39002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59005d591bb51818041e0c34b8
07e8b56c0c0c301e10b807e8b46c1e073029b8080db46c300b043cb80809
b26c040b00183f2b3f2b3f2b12392f2b1112392f30315925060706232226
353437363637353426232207061517140623222635343633321716171615
1114161633323736371506232226271106070606151416333202478d2436
3d5f7b1e29cbec57533f2526022f26252fb09f7a4e3b1c120a170f100c15
3c7066313a01972c4f4456384c846d1119826a433144785624896622222c
3a2e32342d5690291f422b85fec9833b14070d3c38964493015d3c192c60
39485f00>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 5526 72 <0002004cffe4035303b00014001d03b4b0852b58b1020243545840280816
1415000c0f100255000e0c0f1002550e0c0d0d02550e1530400001200030
0002000010000200b8ffc0b41314025500b8ffc040111111025500000b1b
251107000710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ff
d6b41314025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed
12392f2b2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d
158000a000b0000320003000400003000010000200000b1b2511070807b8
ffc040241010065510072007b00703000760078007a00704079204a204b2
040304310b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655
000c0f0f0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd
2b2bc01112392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31
301b4019125f185d1960006014d6030519201c3917201c3916401c391fb8
ffc0400a434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e34
1b06190958135e165f175a185b1a07010309060709080c0515490689028c
06870c8a10851da302ab18b513d402d90fda10f402f30313126007600870
0780078909c107c80ff007080401070d84020309baffe00006ffe0404a36
09460247094f1f5402540962027202891389199913a409a40ab808b509b0
0ac702e702e00cf40a1408d007010007d007027107010007100720079007
a007b00706077d041400301615b8ffc040131239125f157f159f15df1504
15151bd3040104b8ffd0b2143904b8ffe8b2133904b8ffd8404812390431
0b0b5c1b011b25110707cc0816281b390f16016f167f168f160316f41414
800801300890080230088f08df08031008400860087008b008e0080608aa
0e15040089000200b8032c4012300e400e500e03000e100e200e03f00e01
0eb8ffc04009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d
715d713c10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15
015d592b3cfd3c10f45d5d7172393130015d00383800715d014358b40600
010202715971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c40
2d390d402d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ff
c0b21b3908b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2
093908b8ffc0400e093915101939192011390d201139002b2b012b002b2b
2b2b2b2b2b2b2b2b2b2b5959591bb507070b111500b807e5b56c15150b11
1bb807ebb46c11070b04b8081fb26c0b0b00183f2b3f2b12392f2b111239
2f3031591306171633323637170606232202353412333216152521262726
26232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701a805101963
365383023bcc747463781489e10101d9eb0107cbaa3a582438408100>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 6574 74 <0003003dfe4603db03af003b0049005903fdb0852b584082121650972699
3603002d105b02762a765302002a062e06528b20043f374f5b6f37752670
5b8f048f05831784188f358a3e83458f4b864f95179518994fb804b905b4
17b418c934c94bc05bd05be05bf05b1b1a201533103514361f5b05a7084a
363f1b00160336214a1b0019431211100f0e0d0c0b0a0909131314090880
25011225b8ffdeb41214025525b8ffc0b3140c3f25b8ffc0400b120b3f9f
25af25bf250325b8019eb5582b80210121b8ffde400d12140255129f21af
21bf210321b8ffc0b3140c3f21b8ffc0b3120b3f21b8019e4018904a014a
40140c3f4a40120b3f4a2c121202554a50140114b8010840136f08017f08
0108401114025508350699430143b80331400c194a0a2f19015019801902
19bd02d200060009034d003c0331400a0607195101512c2c0f4dbe033000
30001e03300039004d0330401f1030016f308f309f300330180f10025530
0c101006553035392e0380540154b8ffdeb40d0f025554b8ffcab4101402
5554b8ffdeb41010065554b8fff0400a0d0f065554251f280128b8ffc040
16171a348f28014f287028c028d02804280e1010065528b8fff4b40f0f02
5528b8ffee4012101002552875205b305b405ba05bd05b055bb8ffc0401c
0b0c345b0e8f96460146101010065546312016010f167016cf160316b8ff
f2401110100255160c11110255160c1010065516b802bd4013993f013f31
3003500302500301000310030203b8ffc0b3191d3403b8ffc0b30b0c3403
b8fff4b41313025503b8fff4b70f10025503695a5bba01780021010ab189
182b2bf62b2b2b2b5d7172ed72fd2b2b2b5d71ed2b72e4102b71f62b2b2b
5d712b72ed2b2b2b2b7110e4f42b2b5d72ed10ed10ed003fed723ffde610
ed5d713f10ed7210f42b5d5ded72102b2b2b5ded2b2b5d4358b4cf21df21
025d592b72f4ed5d2b2b2b4358b4cf25df25025d5972103c103c11121739
11123939111239011112393912393931304379407a4b573a4524351c1d17
1801052625323133313431030641264f262e252a265625541c011c3b1e1c
004b354d200042013f20003d053f1c00502d4d1c00522b5420014418461c
015527571c0156571d3a1b1c011c1b3b004c314a20014b4a353640024320
0001003e043c1c014e2f511c0053295120004517431c00002b2b2b2b103c
2b103c103c2b103c103c2b103c2b012b2b2b2b2b2b2b2b2b2b2b2b2a2b81
818181818101725d00715d01710072435c58400a2e10120b3f351012392e
b8fff0b11239002b2b2b591bb10814b807f640256c7f08016f08015f0801
4f08013f08012f08011f08010f08011203080640364a2c001b1943b807df
b56c19194a063cb807dfb56c0607512c0f00183f333f2b12392f2b393912
39391a10cd5f5e5d5d5d5d5d5d5d5d2b3031590126263534363332173332
161716151407060623231615140623222706061514161716171617161615
140706232227263534373637363726263534360122061514171633323635
342726010606151417163332363534272627260135545acda08360c22b0e
030605030f2b7738c4a544472c1f21301c70ce3d5d6f6a9cfbc1854b0b11
35075f342b3901154a644434504c624533fef82f303a64bdb4ab33349ae1
014e29935988c440050609171a0a0506487080b614263914112007040305
090d70527163925732361818254209631f311f235e0287767a9e5742727a
9f5a42fc8133582530243e7f483416160406>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 7852 76 <0002003c00000207058e000b0022026fb0852b58b10202435458b90024ff
c0401d0d0d0255120d080d0d02550d21181010025521180f0f0255211318
0309b8ffeeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8
ffceb610100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ff
e0b40f0f025518b8ffd6b5101002551820b803e240174f216f217f210321
226f00010060060106400f0f025506b8ffc0b71313025506220613002f3f
d62b2b5dcd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102b
c43130012b1bb10602435458400d20121010065521121010065506b8ffc0
b44b4b065506b8ffc0b44141065506b8ffc04019373706554006010006a0
060260060106000020212207130309b8fff6401c10100655090924230d02
101006550d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6
b40f0f065518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b11
12392f2bcd002f3fddcd3fcd5d71722b2b2b3130012b2b1b401990240160
2470249024a024f024052024502402402450240224b8ffc0b332323424b8
ffc0b3383a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a
3418291e134a220d291e124a2321271941201e21440c190c139006010639
0000220c0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b
0c0c0d190d2418402b3918b8ffc0401a363a349018015018016018701890
18a018f0180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72
003f3c3f3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d71
5d017259591bb900060831b74000002207111314b803e2b26c130a00183f
2b323f3f1aed303159013216151406232226353436131114161633152135
323636351134272626232207272501292a3b3b2a2a3c3b7e193141fe4343
2e1b09071e1a1c280e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c2424
1a3c550161952c20190f2470>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 8584 80 <000100110000063003af00570408b0852b58b10202435458401759401212
025559400d0d02551711080d0d025511554c30b8fff4b40f0f025530b8ff
eab41010025530b8fff4400f13130255302b080d0d02552b313746b8fff4
b40f0f025546b8ffeab41010025546b8fff440211313025546414741080d
0d025541040f0f025541060c0c0255414c14121202554cb8fff4b40f0f02
554cb8fff6b40d0d02554cb8ffeab4101002554cb8fffa40190c0c02554c
0a131302554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f025537
100d0d025537b8ffd4400b10100255371c1212025537b8ffea401f0c0c02
5537020d0d02553702131302553711040f0f025511060c0c02551120b8ff
e8400b0f0f025520300d0d025520b8ffc2400b10100255202a1212025520
b8ffda400b0c0c025520020d0d025520b8fffc400b131302552016192f32
4548b803e24020475455400c0c02552f55014f556f557f55035556064731
18252c0b073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0
012f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b
cd2b2b2bc410c42b2b2b10c4102bc42b2b2b10c6102bc431302b2b1bb106
02435458403c252c0b3c2c050b0705075455560718314711021010065511
200410100655202b060f0f06552b02101006552b3741060f0f0655410210
100655414c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8
b40f0f065537b8fff2b70d0d06553737584cb8ffeeb40f0f06554cb8fff0
b4101006554cb8fff8b70d0d06554c4c59581112392f2b2b2b11392f2b2b
2b11392f2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f10ed10ed
313001b00d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a181918
181838383838383838591b401c3407d059ef16038059011159600d5d362b
0d01905901200820291e18b802fcb42237291e31b802fc400b224c291e47
4a2211291e17b8030eb4232b291e30b8030db42341291e46b8030d403e23
55274d41541e55440829374d4039292808000725475657073c2c05252c0c
0a0b07060405074746313018170a5917171a101124213020017020b02002
20b80135400f37292e2b24383037017037b0370237b8013540164d574124
4c4c1f4d504d02804d904d02004d104d024db8ffc0b61416344d605859b8
025ab321a67f18b80164852b2b4ef42b5d71723c4d10fd3c10f471723cfd
e410f471723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed
3f3c111217390111123900f5edfc01f52b2b2b2b2b2b3130437940142224
0c0f0d252326240c211c010e0f220e251c012b01103c2b2b2b8181017200
5d2b01715d59591b400a560745322f1916054748b803e2b76c3118470a25
053cb8080ab36c0b050700183f332b323f33332b17323f30315901363736
363332161736363332161716151114171616331521353332373637363511
342726232206070717111416163315213532363736351134272623220706
071114161633152135323636351134272626232207272533015064122d68
33567c15678e4b497121160d0a363dfe3c133b21170a041b2756356b4c02
02153a46fe314c390b05212c4f3635532d19314bfe3b3f321a09071e1a1c
270f01142b02ec640f262a645f784b4b553a7cfe765620161f2424171023
1150018a702e4035480b2bfe4b5e2e1f242424241152018a7031401d2c37
fe155a361b24241b3b55015e972c21190f247000>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 9864 86 <00010064ffe402d503af0031046ab0852b58b10202435458402733401313
025533400b0b02550201181010025501180f0f0255010f1b1a08270c0b0b
025527210fb8ffe0b4101002550fb8fff440320f0f02550f310708270f21
04122b05017905016c050105252f0101012a0719771e01631e011e25201a
01601a701a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f01
2f2b2bcd2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f27
08042a161e122e05022a3107601a701a021a19124b05016b057b05020525
2a07441e01641e741e021e25120b01210fb8fff2401a0d0d06550f0f3332
1a080e0d0d06550827120d0d0655272733321112392f2bcd2bc41112392f
2bcdc4003fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b
4029092c192c0212122e400b392c280b391814590c5a269b109424050a07
0a280a29603370338033060f33b8012040870d5d36cb0dcb0ec424c425d7
23d624d92ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f0380
15801a801b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c
031614121c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f
335f337829782c860ea823af33e803e61c0c2908311e00bd021e011f012f
010201b8012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a
021ab8012bb219bd16b8011a4022121224230d0b040f2724230d0b04051e
01c7002e2f2a31000005252a071a7e191918b803464014162f1e25120b02
cc12010112cf21df21ef210321b80314400b700f01600f700f900f030fb8
01364019271a192e1f0801082c9f270160277027802703202730270227ba
012000320120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2
ff21015d59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c
10e410ed1112173901111217394358400a242323240d0b140d0d0b870e2e
2b0e7d10c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4ed
b10602435458b42e20090d34002b5931304379401c28291f20101106071f
11211c010629081c0020101e1c000728051c01002b2b012b2b8181818101
5d43584009fb07f610f611fb28045d5901720071005d435840199f019f02
9f039f0b9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b
2b4358400b2f232f248b2c9b249b2c055d59435c58401128201939092819
3901400a3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c40
0a392c4009390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b21939
24b8ffe8b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b2
12391ab8ffc0400f123901401239024012392c20123924b8fff0400f0f39
2c180f3903100d392e400d3923b8fff040120d390c100d392c200d392c18
11392c181139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b012b2b59005d59591b400d02022e1a1a162e3107190a2a05
b807e6b46c2a07121eb807e6b26c120b00183f2b3f2b3f3f1112392f1139
2f3031590111232626232206151417161717161514062322272623220723
11331616333236353426242726353436333217163332363702902126775c
4656201f5f92cbbd75546c2115170d21211c9e62455761fede2d2d9b7b36
4d331110120c03affec8936a4a2d3828292e4763a27d991e0a1a01478c8e
5139455e903a39577198170f0e18>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 11138 90 <0001000dffe405b40394002c03fdb0852b58b10202435458b626211e110e
022cb803e2400e00092618080428251f060f060006003f3f3f2f2f173910
fdd0d0d0d0c0012f31301bb10602435458b90026ffe840440d0d0655181c
0d0d0655081c0d0d06551810101006550810101006550818260904002821
1e110e02792c012c00752501250b752801280b1f060f0600062c2c2d2121
2e2d1112392f11392f003f3f3f3f5d3f5d10dd5dd0d0d0d0c01112173931
302b2b2b2b2b1bb1122eb8ffc0401c3f351627201020112527202e5f2e69
09702ee925e928f825f8280c2eb8ffc0b213352eb8ffc040c81b1f34212e
2e2964361d19191f1b23102e040a261d262c2639265517a717a718a72608
0b25372437274f004c014d074908472446274d284d298807801080118d25
88288829802e9a109417a718a725bb10b925b928bf2ec825c828d925d928
d02e1f000504070615041709250727092806293517431043115005520756
185229890b8f1088188919892388258826802e17870986178726030d0959
01771077110409090826262725250a0107021e011017111e102023211e20
00292c1e000f0a0e1e0f1f191e1e1fb8ff86b308282720b8ff7d40401825
242008070809072429281429292826272625273008091408080918151819
15240a25140a0a25232424301819141818192926231918170a0908070a00
2821bb01ec0020001e01ecb31f010f11bb01ec0010000e01ec400a0f0f10
101f1f20200002bb01ec0001002c01ecb301000618bb016a0025000801a6
400f28402725252424280b20fc0f650a01b801b1b4c000652923b8010840
15401b2f501901a01901bd19cf19df19031992242f18b8011bb7200f2501
10250125b8ffc0b30b0c3425bb0110002600150167400c400a2f5f260140
2680260226b801ecb4097d272f08ba011b0008011b400a200028018028f0
280228b8ffc0b50b0c3428a007b80167401b502901802901002910292029
4029b029c029d0290729602dab89182b10f65d7172edf42b5d71191aedfd
e4f4ed5d7118f41aed1910f42b5d711afde4f45d717218e41aed10f41aed
10f4ed003f3c103c103c1a10ed10ed3f3ced10ed103c103c103c103c10ed
10ed103c10ed10ed1112173987052e2b0e7d10c4870e2e182b087d10c487
052e182b087d10c4870e2e182b087d10c42b2b180010ed0110c00010ed01
10c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00710083c
083c3130015d5d71015d005d01722b2b2b015d2b435c58b52610140c3f24
b8fff0b3140c3f13b8ffe0b21d3917b8ffe0b21d3917b8ffe0b2143917b8
fff0b2173925b8fff0b2153917b8fff0b11539012b2b2b2b2b2b2b2b5959
591b400d0818260328020e111e2105002cb803e2b76c1f0f000625280b00
183f333f33332b1732121739303159132115060615141713132726272627
352115060706151417131336353426273521150607012303012301262627
0d0180352111c4c5341827163c01b4481e1408d0c114273901215729fece
29e5fef525feda1d383c039425041e1c1f2cfdf101ad873c170e03252503
1710231415fdf201fb3620131e0225250d69fceb0249fdb7030249330d00
>LAAAAA+TimesNewRomanPSMT AddT42Char 
2 0 0 <0002011c0000051c050000030007006cb0852b58b10201bb02be00060007
02bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c31301bb10004b807d7b36c000107b807d7b16c0100182f2b2f
2b3031592111211125211121011c0400fc2003c0fc400500fb002004c000
>LAAAAA+TimesNewRomanPSMT AddT42Char 
LAAAAA+TimesNewRomanPSMT /CharStrings get begin
/space 3 def
/slash 18 def
/one 20 def
/two 21 def
/M 48 def
/R 53 def
/T 55 def
/a 68 def
/e 72 def
/g 74 def
/i 76 def
/m 80 def
/s 86 def
/w 90 def
end
LAAAAA+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 77 /M put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 115 /s put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/OABXXF+TimesNewRomanPSMT /LAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut
/OABXXF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash /.notdef /one /two 26{/.notdef}rp 
/M 4{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp 
/e /.notdef /g /.notdef /i 3{/.notdef}rp /m 5{/.notdef}rp 
/s 3{/.notdef}rp /w 136{/.notdef}rp]
OABXXF+TimesNewRomanPSMT nf
OABXXF+TimesNewRomanPSMT*1 [0 -15.78 -15.78 0 0 0 ]msf
14.5133 423.643 mo
(T1w/T2w MR images)
[-9.65408 -7.90262 -11.4058 -4.39948 -9.65408 -7.90262 -11.4058 -3.83926 -14.0412 -10.538 -3.96078 -4.39948 
-12.2895 -7.01895 -7.90262 -7.01895 0 ]ysh
18.8337 352.543 mo
27.1737 352.543 li
27.1737 355.183 li
18.8337 355.183 li
cp
25.8537 349.903 mo
33.7137 353.863 li
25.8537 357.823 li
.75021 .679683 .670222 .90164 cmyk
f
89.0337 411.163 mo
86.3337 411.163 84.1737 409.003 84.1737 406.363 cv
84.1737 301.423 li
84.1737 298.723 86.3337 296.563 89.0337 296.563 cv
108.354 296.563 li
110.994 296.563 113.154 298.723 113.154 301.423 cv
113.154 406.363 li
113.154 409.003 110.994 411.163 108.354 411.163 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
89.0337 411.163 mo
86.3337 411.163 84.1737 409.003 84.1737 406.363 cv
84.1737 301.423 li
84.1737 298.723 86.3337 296.563 89.0337 296.563 cv
108.354 296.563 li
110.994 296.563 113.154 298.723 113.154 301.423 cv
113.154 406.363 li
113.154 409.003 110.994 411.163 108.354 411.163 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
13562 <001C60D8A8C9B5EE31039871DA9D37AFD0C436D42E1FEDE3BC7751A8A
7045B57E4CBC5B199CDCDB5747B44C6C667A59ED915D38293375FB5767416451
A95753268BED879F16C790B230C48F598EFEC9B5FC284179117463EF115E5CC6
D7050F94F3C515FA820BF0A3D7AC3EADA9138B8B1518C8485B5459EE3FF9818F
7EE46811CE62BBE024342FDEC65C98066CFDBB7360581946D836BFD1801A19C3
20C2CA08FA28AB7B55949B339E3533B38D04373ACDD32C6A08FF6063255D403A
294858451E2B78F34A66696307AB2954030E0FFE4CB0F8C120B108F427F1F7D2
32608FD6F859B55C82AFAF3DDBAE844600C1BA77628E1FDF2567DB2FE044A38F
2FBB5F4BF0CF527066BD5FC5D2CF6275FD8F11E6BE47EE3F01E1E538FECA5642
76B> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 385.663 mo
(4\372)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 385.663 mo
(4\372) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
13565 <001C60D8A8C9B5EE3102A95A18D6AE637260C84CE02426C7DB00BB07D
724654E675DBE7CD47242F1B2B5CE13E3C365E5FA020264CB1F8E0B25B4D3EA2
80C39A597F58F08177556B33DA3996CFBEB090A1111E73CF96C69A5E7511186F
436513957459DBDED04D98D7FB81AEE997157C3239E058F16E005A815BB38139
6CB55E58A6CE6A26500DD109EE31CB536D45F1550AD087A5B8551F38A64ADF51
CC944A7EE40580B29D44AD6E6211EE17EEF8BDFC2BB954002475C13241078BE3
1539E04622A18502AFF14C2DC76CCC76060B49287D1FAC64E9F51FD8ABF63964
E62DCE475F4E8A83C76692EB844634BECE3065874361868DD69F61241EC05693
96F88C89DDBB7ED7BCC07AA6DA728FF90E758DEA75A6CF411B365EAB22367DE6
D9E4CF54A73921DAA8E5D77DCDC21E672BD652084286CC5ED75AE3FBA63D309> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 369.784 mo
(4\375)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 369.784 mo
(4\375) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
2108 <001C60D8A8C9B5EE31028240AD019EE3B9052BD67B9AE395856860A1D5
C5C3BDC6F104EEEC67EBF790CB9EA2BABAE849D125CFEB06364049C70D8215AE
D5600D9EEE41CBEBA51115AA2F271FE2983E5B107F7F8B0921EFBB30DDA0CB32
B3375D3A5424E64A09CDBFF80EF3528387015716326C9D67958AB86C2A38ADA0
B907BC3266FC91AFB7BCE08A62A1EAA49F01CE7A86BD200A856585762AE56B0B
5B99EDF87681B028B79B1B0944CF1FFFD6AC55E8FCE8D662515AE6B579CC139A
1846B2EEF7C6855265043A8A838836D964299D83429CE7EB01015C6C0A1E7EE4
90F41480FB66004E8DB0E88149AA167E1A1707DB2097A5C3> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 353.905 mo
(\010<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 353.905 mo
(\010<) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
2216 <001C60D8A8C9B5EE3102FB3BEC60F91800F516C6CA111C8383515CA8A7
8CEDEC4197166D445E1A6D80B37BEA0BA4F94A4EB655160885868BA84C5E0A32
1557CF28A96A8251155207A2D6A4E077B5D8B5F8AF02978C5A96C55A8D348F54
C7904C16917FD6F702EF3FDE11DBA52D5C6D43DF0D8350D53CF18B522AF69792
E76404708815CBE1E5CD18A03A1895E08437BBCC46681EE71DED74D6D8E080A5
A2FAB7EB3D18A84F9C28B38698861D2C9D243A8E558AF12DEACA1F38BF1FC332
D654361D4F924F489DF3FC8151631DFA923744E893D38D32F29CADC0DE97DB87
3FEE0E9C449687692C0DBD11CA7D0CDC4DC0A1708A837971BD16EFE60E6A980C
30E97A0E92204A94E7D4F30950530EE84A5006BD5017B13343D41BBE1E884E18
FB7281176C147260D4BB19AF49D9A971479A481DBFDD1249FF2177B67A682A23
66A1FEB10F3B3DE1B6313A29AADB6E8B2B54B269216FFB2496E9D203E9E3978A
0CF61D1211B8B1BEF653D387090BAF4710EBC8D6D21A9B5C8F5E487A8A85B222
1BCDDC4F9A677667077E665EAC5AFA73002DBE5D10E5C956E5829C13BA507B69
0F4EA08322CD8E8DC75798AA> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 338.025 mo
(\010\250)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.474 338.025 mo
(\010\250) false chp
@
68.3937 352.543 mo
76.7337 352.543 li
76.7337 355.183 li
68.3937 355.183 li
cp
75.4137 349.903 mo
83.2737 353.863 li
75.4137 357.823 li
.75021 .679683 .670222 .90164 cmyk
f
135.954 411.163 mo
133.254 411.163 131.094 409.003 131.094 406.363 cv
131.094 301.423 li
131.094 298.723 133.254 296.563 135.954 296.563 cv
155.274 296.563 li
157.914 296.563 160.074 298.723 160.074 301.423 cv
160.074 406.363 li
160.074 409.003 157.914 411.163 155.274 411.163 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
135.954 411.163 mo
133.254 411.163 131.094 409.003 131.094 406.363 cv
131.094 301.423 li
131.094 298.723 133.254 296.563 135.954 296.563 cv
155.274 296.563 li
157.914 296.563 160.074 298.723 160.074 301.423 cv
160.074 406.363 li
160.074 409.003 157.914 411.163 155.274 411.163 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 385.663 mo
(\0154)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 385.663 mo
(\0154) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 369.784 mo
(\007\005)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 369.784 mo
(\007\005) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
18307 <001C60D8A8C9B5EE310D1A0E0CDE63F74BC77DD2A9A7A921793D26488
007E1E3C6B3F20C02FEDEBDFD4C1B56FC1ABCC9DAB838012C182A4459183346E
3E9F03EF06DFDBC0449DDC02F89A8D5EAEB1B5F4DC407FAF22DD7DA2AF79F75C
DF542688838FAEF41DF68902229C09CC37C5EAF65AB7EC0C006C4F0881FEA9E8
FB569CEBC6866593AC5CCE152D7D872F60724CC5E3F7633CD1910B5E8471BBBC
407AC7EC787B826557DF75E7BFDAE4B1424561E57E97ED436D47EFCE59410DC0
7323F3C18063AF4C6079D53E2F38473B10728E46C0B7866EDCAD6BDE3C9D301A
01D58C1526E1D084E9732262FA4DF19B9DE33D30FA26C75A9B8A959780842DE8
C60BD2AD6BBA36708A17159BC9E82EC9C69BC4C923E3126E80F49C0755366D73
14D38BFC70C14D038D2413B7A0503E6B1C91907C03E69D4C6D3580A500516C72
728F1397EE7CD75F42B27F02D072E07ECF1D2763FC8D916032785011436EF6DC
4DC5ED353659713EAFDC4BF6D081B4A3F321A6806ABBD0CD50CA3B8EC8BB4C29
7373E7CDE0D9E7D42BAF71DD74C7F3EC7E3B9BE1DCB1F13A9466BDDFCB3571DD
7F176551999ACF73DFAFDD358636B279E68EA> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 353.905 mo
(G\203)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 353.905 mo
(G\203) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
2044 <001C60D8A8C9B5EE3103BF039822C40127326F85BF153A3B2B1BD8DC25
C1730693E3B2630EFDA82F86A2234415F88F7B3566D39C5AB8795BA6E334BD9F
FFE5B915E0B54D377F1DBC2BCDCB40D91C3449DC5F46C12325E918F97D0A2BAE
9E6B3BE33B654BE63EF4E658D27487040B28CBD1804FA5E5C483A72617DDF017
BDE139E714575F6758EA17A1DA6344B88D892045A1CCFF23FF25E83F5A63C0C8
AA35C46EBE68B01E6A8B42FFA27C8B2BF64326F89A0197A23CF4EC68497540DE
15EE3F91045D1CDD5F69C3CFB51A0A72D376E7537E1669BC44CC31977E3CB4D2
8C19C10D350B11387CC39A384FBDC9B3343182B49C195EAD12943A92D69CCBEC
1489B7327ADEF1104072F04B62DB9AB3FA0D2328FB26FADF633B982533FDF4D6
FF37126C64ED9C2A74CF50C1C6008231EE9675F07F5CFBB676DA56A4972C99C7
4F4E177B8A25F15D21B6F22032AD8B2C7DF1BAEBCE49A0CE630697FE4DC620A6
6437> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 338.025 mo
(\007\374)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.334 338.025 mo
(\007\374) false chp
@
116.034 352.543 mo
124.374 352.543 li
124.374 355.183 li
116.034 355.183 li
cp
123.054 349.903 mo
130.914 353.863 li
123.054 357.823 li
.75021 .679683 .670222 .90164 cmyk
f
182.814 411.163 mo
180.174 411.163 178.014 409.003 178.014 406.363 cv
178.014 301.423 li
178.014 298.723 180.174 296.563 182.814 296.563 cv
202.194 296.563 li
204.834 296.563 206.994 298.723 206.994 301.423 cv
206.994 406.363 li
206.994 409.003 204.834 411.163 202.194 411.163 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
182.814 411.163 mo
180.174 411.163 178.014 409.003 178.014 406.363 cv
178.014 301.423 li
178.014 298.723 180.174 296.563 182.814 296.563 cv
202.194 296.563 li
204.834 296.563 206.994 298.723 206.994 301.423 cv
206.994 406.363 li
206.994 409.003 204.834 411.163 202.194 411.163 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OABXXF+TimesNewRomanPSMT gcheck setglobal} if
2 2006 44 <0001003300000278054c001f00e6b0852b58406f21401010025521400d0d
025521402835192161116436081f1b022122181f1b122122191f1b012123
091f1b1121231211020201081819021313025519080f0f025519040d0d02
5519220970088008e00803ff0801300850086008035f08c008d008030804
0f0f0255081a0d0d025508b8fff8b41313025508b8fffe401d1010025508
612070218021e0210330215021602103c021d0210261dc182b4e5d717210
f42b2b2b2b5d7171723c4dfd2b2b2b3c003f3c3f3c2b2b2b2b31302b2b2b
2b1bb2141110b803e2b56c11021f0203b803e2b26c020800183f2b323f2b
323031592515213533323736351134272627262323352115232207061511
1417161716330278fdbb305426180d0a1f2c30300245315326190d0a202b
3025252531207a036c6721191218252531207afc946721191218>OABXXF+TimesNewRomanPSMT AddT42Char 
2 2994 50 <00020048ffe10578056b000c001b00d2b0852b5840319712a807a90aa910
0477017907870188070443080d28000315280609183c1f032f0302000310
032003300340030503491db8ffc0401a3f35201d401d021d113c10092009
020f091f090209491c6463182b4e10f45d724ded4d10712bf65d724ded00
3fed3fed313043794032011b0f250b261a2613260e0c112d001b01182d01
1407112d001605182d01100a0d2d0119020d2d011208152d001704152d00
2b2b2b2b012b2b2b2b2b2b2b2b81015d5d1bb1000db807edb46c00030615
b807ebb26c060900183f2b3f2b3031590120001110002120001110373617
220706111017163332121110272602ed01080183fe7afeebfee8fe83dcbf
f7b66e898e6db3bff9896e056bfe6ffed4fecbfe68018e013c0143ccb149
87a8febcfeb4b388012a0141015cab88>OABXXF+TimesNewRomanPSMT AddT42Char 
OABXXF+TimesNewRomanPSMT /CharStrings get begin
/I 44 def
/O 50 def
end
OABXXF+TimesNewRomanPSMT /Encoding get
dup 73 /I put
dup 79 /O put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OABXXF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash /.notdef /one /two 22{/.notdef}rp 
/I 3{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /.notdef 
/T 12{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef 
/i 3{/.notdef}rp /m 5{/.notdef}rp /s 3{/.notdef}rp /w 136{/.notdef}rp]
OABXXF+TimesNewRomanPSMT nf
OABXXF+TimesNewRomanPSMT*1 [0 -15.78 -15.78 0 0 0 ]msf
198.414 383.383 mo
(ROI)
[-10.5143 -11.3821 0 ]ysh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
198.414 356.204 mo
(\010<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
198.414 356.204 mo
(\010<) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
2416 <001C60D8A8C9B5EE310356A99F004383EE56A2304FD79A917055ED21C1
8BA60B04FF8F2FC75F5C0F60BC9324E6844A9835C0D9862779E13D6B584B15D8
78B613264CAB475DA3E35ADA2C8B3A18EEA41F32C9EFB3AAF11DF7DBEE109EC2
EB789280B1CA58FB8B816A44ED2DF930413839A0C9409B4785BDE04BF61A1612
AA6132274A3A67A43C3975A2EA009F16B5F2EC64FC23D12605EFD1E4986F20F9
B81F6552181AF782D42F6D466264805F8207D9598D58BE17> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
198.414 340.304 mo
(\011p)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
198.414 340.304 mo
(\011p) false chp
@
163.674 352.543 mo
172.014 352.543 li
172.014 355.183 li
163.674 355.183 li
cp
170.694 349.903 mo
178.554 353.863 li
170.694 357.823 li
.75021 .679683 .670222 .90164 cmyk
f
206.994 352.543 mo
221.034 352.543 li
221.034 419.443 li
219.714 418.123 li
225.894 418.123 li
225.894 420.763 li
218.394 420.763 li
218.394 353.863 li
219.714 355.183 li
206.994 355.183 li
cp
224.574 415.483 mo
232.434 419.443 li
224.574 423.403 li
f
239.934 476.743 mo
235.794 476.743 232.434 473.443 232.434 469.303 cv
232.434 369.583 li
232.434 365.503 235.794 362.143 239.934 362.143 cv
269.754 362.143 li
273.834 362.143 277.194 365.503 277.194 369.583 cv
277.194 469.303 li
277.194 473.443 273.834 476.743 269.754 476.743 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
239.934 476.743 mo
235.794 476.743 232.434 473.443 232.434 469.303 cv
232.434 369.583 li
232.434 365.503 235.794 362.143 239.934 362.143 cv
269.754 362.143 li
273.834 362.143 277.194 365.503 277.194 369.583 cv
277.194 469.303 li
277.194 473.443 273.834 476.743 269.754 476.743 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OABXXF+TimesNewRomanPSMT gcheck setglobal} if
2 1044 22 <00010053ffe8035605680032017fb0852b58b9000affe0b20c3909b8ffc0
403c0c394109450a460b4b2204cf09012929382940346034cf34e034f70a
0700340141097f237a2eaa24b924ba2ec92edf23df25db2eea22e9250c49
0829b8018cb328281000b802e4b3d0300130b80334b5030510160116b801
9fb51d402b2f341db80143b3100d2928bb01680014000902e3400b502080
20029020a0200220b80333b3b00c010cb80190400b502d802d02902da02d
022db80333b55f077f070207b802e5400a403401a034c034023400b8013e
b74013bf1302131933ba011e01e800182b4e10f45d4de4105d71f65ded5d
71f45ded5d71e410f43c003fed2bed723fed5ded12392fed313043794036
2e2f1e260a0f04062221232124212521040605250e26260a2062012f042d
62011e0f206201210b2762010a092e063062011f0d1d62002b2b103c2b01
2b2b2b2b2b2a81818181005d01715d7200712b2b1bb309032829b803e2b5
6c2828100330b80813b46c0305101db807f5b26c100d00183f2b3f2b1239
2f2b12393031591336363332171615140716161514070621222635343633
321716161716333236353427262726262323353e02353426232207683ab1
84a35742ba7d807092feeb89632f21191a117817252a6697231a1f2b964e
204f9f4881609b68044a89956a4f5a949e31b67bb081a844271d2c08053f
060b9e6c4f4b381d28411e0a5e844f677fa6>OABXXF+TimesNewRomanPSMT AddT42Char 
2 1572 39 <0002002300000579054c001600210144b0852b5840590b1b0b1d86109510
d5100576107614871098139915c91bc91dd41008181112141d1e03071501
871a881e022808061f1b002122071f1b0d21231721191f280e0e0d021928
161600081c3c4f1201001210122012301240120512b8ffdeb60d0d025512
4923b8ffc0403e3f354023012023017023a023e023032321170613130255
170c0f0f0255170c0d0d0255172207060c10100255060c0f0f0255061a0d
0d0255069e226163182b4e10f42b2b2b3c4dfd2b2b2b3c4d105d71722bf6
2b5d724ded003f3c10ed3f3c10ed1139392b2b31304379401c1a1e0f1510
2514261e0f1c56011a151c56011d111f56011b131956002b2b012b2b2b2b
8181005d7101725d711bb10d21b80802b26c0d1fb807eeb26c0d0cb803e2
b46c0d020017b807fdb26c0019b807ecb26c0001b803e2b26c000800183f
2b2b2b3f2b2b2b3031593335333237363511342726232335212004121510
070621271633320011100023220723335624161c274d3302280130013dc1
acc1fe75db7f56e80132fecef05a7325372173036c7f202c258afebed3fe
e5bed4621c01460117011901441d>OABXXF+TimesNewRomanPSMT AddT42Char 
OABXXF+TimesNewRomanPSMT /CharStrings get begin
/three 22 def
/D 39 def
end
OABXXF+TimesNewRomanPSMT /Encoding get
dup 51 /three put
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OABXXF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash /.notdef /one /two /three 
16{/.notdef}rp /D 4{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 
2{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
/.notdef /g /.notdef /i 3{/.notdef}rp /m 5{/.notdef}rp /s 
3{/.notdef}rp /w 136{/.notdef}rp]
OABXXF+TimesNewRomanPSMT nf
OABXXF+TimesNewRomanPSMT*1 [0 -15.78 -15.78 0 0 0 ]msf
251.274 467.263 mo
(3D MR)
[-7.89157 -11.3947 -3.89923 -14.0301 0 ]ysh
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
13577 <001C60D8A8C9B5EE3102B97D6685849AD8E0FDC0AFCCB893D5DF87963
8A820FC96BF779665B8622803589B5A44E1FB1DEDED81E40B8CDB1C533EF9944
DF885B2418D16FE377BA9BCE88E3F1D29C843679ECC319262F7BA4B65712684B
CA344C871FBD30E1527BF64259337D3E262095932D3A61F66233C15C087AC912
C043F0D4F98795CC6E65A810D6B8E4985BEFF0389FF5A29EE92071A5F6FD05C2
E5E7381D899272B8A13D6F5E6EAF0F3C959F08FEEC072772F5E86F00B98D2D6C
D8EDD048CFA0A55B4DA536F7824EBFFD2D9A7F2185E17F4E9B7587AF742F7D86
9B293BC3FA65BC5C065C906435FBB43A0001F0AF91CE68C68D107ADFD6897895
AEBF25CE0E41F5855C62B741E84BD3F7C8EC4A7A766515422BA4B2F225BE04D7
B18B7EE4C70FF18A3119EF771B7E1FAA297D3E27E738D7490621883271B2F08E
26C3C0C8229F69E0D48F2910960CC0D20226BAD6EB541C56E77D9731FDE2FF5B
F> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 419.504 mo
(5\011)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 419.504 mo
(5\011) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
7610 <001C60D8A8C9B5EE310333EF851F568C99AFC9115D46BC56FC06132F4C
624842BD0925BDA1EFA28AF4D2AF5BAA5EAAF5BE54B4B2FB202C7CB9F82AF333
88BB55F58D2EA6A2B9B65CA56EA53F4702B0282123E9EA879063F95F8B019D7C
82753CD985858512BCAE0E9D908C28009E49EAEFF1899A2BF891B79A0FDFF167
E0CF63C02194DC9E72D2F07F48AD5127E6980807AB13C9C42444308BACC8B172
BE29DD91D64A5794C4900D184E57442E82B63F28F4924D126A671C6011C7D00A
B54ECB48C633D7EF0D052D96CA743B0D7C30CA5EFF2C86ECE5699410B99E8EFD
07FB548601CFBE7B8676270ED91BEC84E3CF44A0CA212BC7B7DB87AFE679E381
44AF771E647FCAD4CB68A5A2C81D56FBC7EE7EA320E9FCEF8C811A94DC12DCB4
8986A93D4E448B0B989FAA246C15E04AA82872D5A5C8FF1D5EDAFB2EA047E0AB
B588FF72CC515DFCB9F863D753CA07D8F944580604643153C93E58C15AC94E69
B079CE02F2FA> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 403.604 mo
(\035\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 403.604 mo
(\035\272) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 387.704 mo
(\0154)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
251.274 387.704 mo
(\0154) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 459.284 mo
(\007\005)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 459.284 mo
(\007\005) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
8279 <001C60D8A8C9B5EE3102DB039D76059FD4F14CE597E226BD7CB2EE59B9
12DF06BA8300E83AA6FFAF27FFDD5AF37270899031FFDA1C3AB1F6355CE83BC1
8E22C8D84D9E20E50679A19E8A4479A9EFF3234C97BDBD0C18E93A66139FA2E4
ACB7B5F35D3C9A149C801FEEC3B0C92DDA7E4972A03746B5B304E527F05BC7D9
FFB55E5C260F0D03FA39687BE43E2AFD10928060C47F51A665649DBDAB5C233F
0E3C051D1E9B7F9DC0CDF54485A799D68EA73FF320BE8F698D17B822CCB6550B
6C53C3BDDD377E46E91336B6EF4357E594F3597C071E962B46EBE76A27039B5A
BB4221D3542E614DFA8A8660A0DC1EAE61769143349968FC4977F57245AD5E4F
72758C4A3DB05D6DBF52BB0669E5AFECB965F6949894B1FBA4427FE710F0F9FF
5E6E4003C4958C3116633256576D4C834E45864DBA1B9225BB645C8B5D9C4BAA
8E3A8CB23A4FE87C845951E85E441C6C6673046722451502E814FDE0E3BF6B5A
271AD95DE951DE969A4B5B33E91DA85AFA6FA2DE62BE259BEC2FB1EE6E307868
6C1491A070DD393AF12437A89E1AE7E18B189396BF49A0AA43128EF9AB67F345
0CEA1E39A6771E84B42A306AC0B518D5C77592240F771D3280AA00EE8FABF8A3
0E5975965D9DDDB4B7940F222D9D21532531B69AD59762E754AEAC50B37F4BD8
39B66B84950A7C1F2CBA64A13143BC275A73AFB3A210> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 443.396 mo
( W)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 443.396 mo
( W) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
7605 <001C60D8A8C9B5EE310D127B380AAF88CA4DB9ED83FDCAE9AF9316CB51
EF8DEE967D226B2A533AAD0E65C3A3FC599294376BFD047409A257F629EBF313
C8DFCB2D1E86321DB3F01E2A694F5A92C74E524272B8E2F177313E502D1CACDF
F8EF3E92E8C83716FD8B8E2462356769AF088D63DB993DB8E707181317EDBBB2
BF40435DE7BE115E7486B4CB023581D9624E13785AB4D7F6F5FAE4A0CC31F2B6
1304BD478357F3E8A4152E5E32A09C4D2E4EFA810C7DD73F74587730D4AE810D
C2E2B0BF0132D91436C6A6EDABA6E1357BA44E7D4876BE54ABE2611FDD8A59B6
89B33E27221389B0E2D58CB10DDF9AB7BFF59332FD541FE6F86C03851AD2AE63
B21B6BD74B91D31046357B472500449B210D514F044DDFF2A00BA3AC91F64EF4
1BEAB87FB1659C81612EF8B46DD979B45E9B719348361A6C03E3D80001AD9D30
7A33C8335784197350E74958B4B9882DAF3141A18C7C667C1E464D1A0121B8DA
B480101CCADCF196348A0F2381E938DC9D1F0A1A3D87C67FB0ACC7C4E0> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 427.509 mo
(\035\265)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 427.509 mo
(\035\265) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 411.621 mo
(\035\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 411.621 mo
(\035\272) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
5424 <001C60D8A8C9B5EE3102F6572E46CCF9F433FC7A2C209A0700E97A6A5F
592D1BCA24FAA60BE6E51699A9B9A812484CD139F2493B38D4D4726A895099E9
AC28C75211A7C668821BB3857ADDF71A2DDC3F93108AC92CFDA0848DE6B6D21C
4EBF1022FF1F57F423BB4C212CCD20E3AD58B0C1FE0B84AE37CBD58812455B0A
C049EE7033D145BB853C034659BE7659E2EE4380D0F328DC48DAFEC8CDB17385
FDA5014CB1F11D5C4408C8E8FCB61C0657B8599A3A7FD53D49207E80C55649B8
B6AABF0E21A44A0C03F920DAEC86F3D70A5ED0D1DB27D3DB27466CAFEEFFD602
33B7B7D56123D373EF4F2F44F5B5BBA5404B700DB23A6A14D456562784E83CF1
462DE48FA44FD8A9AC0FFA20A73AF3ED9EB7F075153DCBE85A589920CD47CA7E
7BAC1FE63DF80E87F3C4B83A00CD965F791A468C2B04610B26F90636070C82B1
D88B6F027BC974EF78A2ADCF4531779845B8E875A48BD27A7FA7BD13018AAB71
EDA98CD707F857EED680AAB5C34BC4246014BA4FCE266D7B995116FCC6AF1F1C
2AE43C92ED595404C5579942C785C457EAD0D4254132181A18EF438455BEB733
30FC1B5EB39649B039BE6BBA8D4C12800800155DA4> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 395.734 mo
(\0250)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.233 395.734 mo
(\0250) false chp
@
239.934 341.563 mo
235.794 341.563 232.434 338.263 232.434 334.123 cv
232.434 234.463 li
232.434 230.323 235.794 226.963 239.934 226.963 cv
269.754 226.963 li
273.834 226.963 277.194 230.323 277.194 234.463 cv
277.194 334.123 li
277.194 338.263 273.834 341.563 269.754 341.563 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
239.934 341.563 mo
235.794 341.563 232.434 338.263 232.434 334.123 cv
232.434 234.463 li
232.434 230.323 235.794 226.963 239.934 226.963 cv
269.754 226.963 li
273.834 226.963 277.194 230.323 277.194 234.463 cv
277.194 334.123 li
277.194 338.263 273.834 341.563 269.754 341.563 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
3632 <001C60D8A8C9B5EE310226F8CA92655631C4E63CD5BE57C8AF150A3A1F
12E142EE8518DCBA9D235A497FDE1C1695CFDC9B41127BF483C9879D743F2226
0C78B681C266CBE70FE2B3AF7DCE97BE5D4599878B9EEA20E0B144E21B447C6F
1C115BE72731924BE33E4D2E980622FD0202AB5112D2CA3B1240F1E183F7CE52
20974109CAB18576F5D5F4524FB5B5839A29EAEC13AD48B0ED8198CA5B800D5E
1ACBE71039EB0B8EE9D9D0358158FF8A86134FFFAB2C794BE3E9BE6968BF6B8D
161DB1B90DC6B864FC2DB61447DC97E9D731FC1027CDCCDCF9DFE679BAA3B91E
0C6CE67F93F82A9BDD03855CBBCFCDE4E8133709DC0E2A7A38AE6CD5FCF489C1
CADED0FC3F56AE6741D253B0E889393ACBD6A94D76FACB53217A781D0FB1E790
4969587632318180AECF12DEBCA82B1933F7525EAC7A3FD61A7A45113B2C2586
AB5C669B96A7F2A112FC32634EE7A00ABF168FADD59CD102177FA65ECA909615
747B9B4A3F0EC7B09121A24A399FA03CBE6D55D7280BEA9EB5> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 332.023 mo
(\0160)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 332.023 mo
(\0160) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
1220 <001C60D8A8C9B5EE310DC6795B1F7C7832B43F37EC8E1AE1C9BB75B857
F8DC28AF1D0EB12AA9CCBCC22D86CE453AC7BB05C445859DE8193260171C4722
D2423F9463130A1835F108DF89C780B452545295F9CC57CCD0023C5E459716B7
C1A5671912AE608960D52DCB5F3CB617242B9E9AD3736C630F79C8F3BCAF333A
432316B7A48B7269A0> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 316.133 mo
(\004\304)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 316.133 mo
(\004\304) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
14151 <001C60D8A8C9B5EE310DFFAB14A2B0ABDAC952F49AE2FBD61CBCEB5B6
24D9FCCC9B8E426012E13CF5F3407E33B30F68E0CA8C15E8766A90161848558F
CE3370D53446728107D77A20A964E268121CD62C37A4CCAFCA89B148A511A587
61C09892471C5545E182A19830CF786D1CC4D2BF03D24D2D6B55FE0EF3628371
D5119E43988E272CAB6A7A58D4EDB8069B7EEB33E7377B332E290C31AA12DB0B
71F1EDDA57A0FBE7AFF5A69320C263C28EA028C1D416D5C275CE549488A2FF67
07481B6A0E20EA284EFBBBFECFD4C8481372247BA43008189B02974DEEAF3513
BAA0BFB49510E040CE9E623A3D1395074710D93622C0ED4FABEF7C284551AC5E
AEDB461863043E5A817839EA33D2E67E73D3960E6C3026020E4D267751FD32C6
713B4781B2229EDB1130975D6545C8183B62095CBC716869A73E8D291F0A4EDF
6B5B832E0DFD4BDEFB4F6F88440F72C104BF52A72208D28C1E3300C39CE6D5C5
FD90F5B7E2C17F0109E22D9691DA9924DBFDFD049EF5C49CD056D3361C779EA6
E46E125BD249298D86E0B58E13E31A6B3CEF80C063C5271D8AED38580DDAEC18
830ECDE9A47D36FF3EB15C1C65642913046DF6FC3F8616E708404> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 300.242 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 300.242 mo
(7G) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
1417 <001C60D8A8C9B5EE31034A545B367A2C1A2343B25FE9D9DF8C85C0DC03
9D70E19C66F0979B4ADB76C50EDD8815CC2141F18DCFBE89E8E03584B406F1FD
26F1316085F6766445AD8B7134EAF50DAE864CB5B8CB0AEE52F02DEF18288BB6
F1FFEE3D537995943531D2E210B6100B5C7C2B723580D33A47ACD387959142C0
2C0EB78A14A5BF97BE881932D9EF181FAE58FCE3FB8633DACB42E13B7960D26D
D32339DCC9980967B6FAABCE6155393004872270F29A397B1DF8AF19DDEB866F
9F00D27E00A4E12BE5BB50958D336D8A657345252FC5471793A2FAF79922D002
02E309F4C60016B29D4471BFC0DB259D7B852A011BC5E61563CFF7C50743575D
F82B4BF5DA0F7403EE47BA17D643CB675FFBE465FE3E19E7B40C> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 284.352 mo
(\005\211)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 284.352 mo
(\005\211) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
12325 <001C60D8A8C9B5EE310286933B04B67E344B17AC06DBDEB932C952ED9
FFDA563F306F529CEB4AA5C6A3792B44776B1AB48F230CEF9D6638A4E966282B
FC215AC6B9063BB81F9E1F607F6436FA991B06CA486506E16C9125FAAE6D15D5
3DD9EB3E021F8E4A375A9C5B11B8EECDCA55F5A98E8701EBCB78416662A9DCE1
04223D1777484E0E6BE1BE5EA04840DF8F0A717654B669A7A67C8BADFC2D2C40
0B21649F0C70CE4D2EA53EA7CD1CEFFE59EFC989A4F1891AF7E6E7843D3D04FD
9072EA6EA2C845763ECA37E7F36E4A9014BCB14B7AAC2DAE97DC3C7D7E44BFB9
11516729717919BD2F955671CC513E38EA90AED183334B4978ED04FB6E5B9402
F3EBD3E62CD0C15E63FBA2358CB52250A25F30B32010A37B45A22DAE208B4EAC
9844AFDA501DEA54F7997D766767C4E5266014B092006906E81236BD78694C5A
3> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 268.461 mo
(0%)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 268.461 mo
(0%) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
11450 <001C60D8A8C9B5EE310D43CD13A9AFDBA006DF167E2AB6E37270B1C2B
CFA7D04397376A733BF9AA577463128BC4410BABED0D991E95E2DF92EB7AED4B
17FDA05A98B0ADFA89BDBF62D08F08A83CF30C1B9F0E68DF1C233F3C279E195C
6B52281CAFC9034D772623A93E59F5434CE64EC9609FD0CBE7EF887EA7BFBE97
91EDFB8EF5ECF1C80FB4D7AAE31478DDAE536AECF2839C1EB917858B4371D284
12782E031F41BF608CDC30CEBC9275E10A4391271BFFF0AD6E91D42BAD49DC19
AA4EE6E37C54A2C6DC1A03725FFDB71C0ECAA2EAF35D5B7F63E5E5BE59BDC73E
AF61A53DE39286DCC0A74A64D98A475AACB5CADD90A13411B72B4830C9AEBDCF
BFCAE3F05BE03546AC15F6D13FC2B2BD9B46D7CE575322CB7B0585A0734B373E
8F1F9BA38F9A7B4023E65236F76546C97182D3F6940C37C6A6101555CFE9A172
4957B2B7F8A4D1DB8E55CD53CEE59542B> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 252.571 mo
(,\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
252.114 252.571 mo
(,\272) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
4756 <001C60D8A8C9B5EE3103D3EC901E038D96F7A80F3EC35556A6D351EF85
4B7602F329DA36B7127D3BB781AFB703D65CF63E37E0575A4925238EE92493F1
EBB5A8109A3F5FEF0DEC66DD2A522504CBAB72CE7C457E8A4598A92CC2DEB9E7
DAB92D6EA950CDA5F050449714E7FC4B97E6DFCF062284CB880DBFD2A785F9F1
C14031BD8CE5F71980ACEDEABECE9CF1B98B1BB72DBCF489F090161C8184BB99
057EB4E79F9F55BFCF3D85F1B3E0D5C377DA2E08B7F268E91D58AC388CB013A6
EC13EEA31B35AB844DA10A3FC665EEDADB5B56EF4F6FB0B2792407C2CBB7E4E8
7F9106EED71FB3E61DF28C8DEF4CE0F69C7602A61636DD6AC06BDADB54709025
7B8B7DCC8B4D4DDB639499D4FAD8C46D4E10E575BA1737E17F27DE13107C676E
D57268E25B11166FE8E15D99D53F4B71220A6DA543AE09F960BBA90EAA7087BD
DBEBB6FE1B2E3BF2FD658E9EDC879EABD56023E726992C478982E182B9CB48C8
070005592FEB3A735DFA3B72ECAFD8C6E7358DF15151A4CFCC8871EC0C79E9C2
C0CE65BE7D> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 316.124 mo
(\022\224)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 316.124 mo
(\022\224) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
5725 <001C60D8A8C9B5EE310254E186AE73F51F677FCFF9797A04A02E078D67
DED6F7F6FD5F8ADB71550A7F9BD1685546C32ECDC3A91CEBCAB31D57D7EA9652
04F45B39DDAC5DA912E1628C4332B78F54EFBD4D037B827188147FBB3D02ED6C
C5AEB09B23D136CE2E049276459F73FEAC29F0D5ECD2B995FDA153FBC62B9090
6FC0C8C920A76FB6E1A3E46B95E66DD13320A4D507DB964A1DD20048636380E3
DA9E656F3BF7AE37AA30E9D8F9F51D9948F89B07549E3F68D21C3DE4DDF61EB4
74E749406415AD17E2C45FC8DFACB891D41AC763516C6322E95FF67E41CFD783
6F6A0CD090FB0277D86811144565242099B08F8FA9C964EE98454F0FAEE6C8AD
2AC95821753F57AEE792D440DC8D93FA4087E266BC4F6AC33276AE8DAE430749
D14E4CB34E6D23D0A738DA95B004910C0999173B39BF6215BE409610> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 300.244 mo
(\026])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 300.244 mo
(\026]) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
5340 <001C60D8A8C9B5EE3103FE30498D5C116F60A94AC2498A30F1F08CB496
1E3BD2F3EF0B41FB7488B5BB04442A4D90D81847BE3B0480503E5FB7D450D796
DD823948977185F9B76DB2801916962051EC38BC2EF7D2982BABE4F9987C22D3
ED86B3D488C64920D817415E3BF304638D84F76F235CF56E6318212F9EB89940
8BE9FA8D2B1E3BCE63C363D5902E570906CD8FE40EB5A4EF486DB5E08EB4261F
EACA2A3804B6C02EA4D02938596A9B81E1E3C00C0BC231F37175E920EFC3D7A1
6D880C0DB1649DB3210C3D057CD8172E95A178350F65B99D835AE1D7EEAF7B0F
CD637E249400415E5FA966241C1180854B080DA3F3F9D24E72701BCADDA5366C
E64DD34B9344F3C4C7E88D8BF4EC70E236D07A96E2627A25675CD704813E0028
58C6D348B81A449C6B3D417D1DE6D9DA1A23BF5B80C0A5714F0B3593E6B46739
81A60F94A7A8D5956E89B6094C6F9BCEDD8561E08DC9C550E37AAD920A209A4F
50A6FD5FD6AE21BE86EFBCD859B6683A6AABD342878125D3E76504B35D87E055
56AF2DB5E5452744F2B99FBAEDBFC5> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 284.365 mo
(\024\334)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 284.365 mo
(\024\334) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
18437 <001C60D8A8C9B5EE310DDF2681415A81BCDD8B7B1F9428C2F6D80BCC8
223B05E8158503FB3253DD5CE96B13A72C5DC449FDEEC55B4A2DFCAEB4B45FE6
31A89C42388837C48EE4056470EFB260235C88C55B790263519BBEA96F39E29A
393E12D2EEB216E00E222F2A270ACB41400BCE622539B51CCC51E2E899D91547
63076DBBEC2DA33A6AB1E85DCE4D4733AE6D7182FCFFB3334E891AB875BEA19A
4B3EB167C436EF9FBADFA844E2A1268F8E39C8EAE66396AB94247E6C51B69522
343C98C22DC6755AB75445F3A5B618164BF2578E81592D31EC3B57F1349495B0
C98DE3B6D5B9449D4A9E9C3C94C4324D5CF03467DB909FBEF8FC329A0164288E
47C64CA55FE7E6E1D350140981D416389E3546D534DD2DEC8A3648A0BC8ADADE
FD8CDB818743F16B539239C1F780280476FCF1C066AA238438281C650E52358D
E3B56383F2D88C4A96ADD4F30D22B7BB31DE3009540D024F1221B62E03D33F63
B557CF924B64CC59F629479484F7CB9DBF95C32115124C3A1C52E70B4F6F6D6E
6C103> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 268.485 mo
(H\005)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
270.234 268.485 mo
(H\005) false chp
@
206.994 355.183 mo
221.034 355.183 li
221.034 284.263 li
219.714 285.583 li
225.894 285.583 li
225.894 282.943 li
218.394 282.943 li
218.394 353.863 li
219.714 352.543 li
206.994 352.543 li
cp
224.574 288.223 mo
232.434 284.263 li
224.574 280.303 li
.75021 .679683 .670222 .90164 cmyk
f
1.973 lw
8 ml
[7.8926 5.9194 ] 0 dsh
83.6337 211.183 mo
78.2337 211.183 73.8537 206.803 73.8537 201.403 cv
73.8537 91.243 li
73.8537 85.844 78.2337 81.464 83.6337 81.464 cv
251.154 81.464 li
256.554 81.464 260.934 85.844 260.934 91.243 cv
260.934 201.403 li
260.934 206.803 256.554 211.183 251.154 211.183 cv
cp
.00228885 .260288 1 0 cmyk
@
89.0937 201.403 mo
86.3937 201.403 84.2337 199.243 84.2337 196.603 cv
84.2337 91.663 li
84.2337 88.963 86.3937 86.803 89.0937 86.803 cv
108.414 86.803 li
111.054 86.803 113.214 88.963 113.214 91.663 cv
113.214 196.603 li
113.214 199.243 111.054 201.403 108.414 201.403 cv
ef
.877 lw
[] 0 dsh
89.0937 201.403 mo
86.3937 201.403 84.2337 199.243 84.2337 196.603 cv
84.2337 91.663 li
84.2337 88.963 86.3937 86.803 89.0937 86.803 cv
108.414 86.803 li
111.054 86.803 113.214 88.963 113.214 91.663 cv
113.214 196.603 li
113.214 199.243 111.054 201.403 108.414 201.403 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
6409 <001C60D8A8C9B5EE31034A5BF4AEBA6D046A438247538ACC4C9D8E764F
7940D479FD50DE404F9D1CBE4136BC623F61E2492A6B604B11DEE079AAB4CCAC
18EF5A95F1252DE84CA141837E0E30BF33FEBD17E9BA1F9BFC64762CDB9A539F
6296E691161C7AE517889ECCAF026E2EAF2E8228778FFA5F1B7F6DA433EB1B30
703D02AFC7EA093F8F1D712E5318064F9012BD54B87D27FD27A2722E89D8B8A8
8B433D81796A9C0099C2CB0FD4D5504E75B7C6E03BCB402AA4174A380F7B2BDB
A324E1B0286E18E6F49B621C92836FEE5FBA052938505A57431F00B9639276A4
FB8E2BE78C0C29A3FF3274E95BD0CD36EF8A3E9FAF5D567182D349DC9A8C81B0
2E18BFE05243CDE14F9228E11579291C6FE9DFFE856D29725583E5C30A7A3278
C59DF07E955E2B1B39B4> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 175.964 mo
(\031\011)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 175.964 mo
(\031\011) false chp
.316 lw
1 ml
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
6279 <001C60D8A8C9B5EE3102A1C853DF135015B97C01542D18FD25C85EF363
4CE896C8B4F29B231E4CF309732E96ECD81CE6BA0C3F393B91094B36E51725E8
3B5B5E25264E39FB507852D43359F03A4C5C58668126AD819F7CB18E3C1A4D11
666054D1F925C0C682B649E4E8F2EBB637821C135142A9A79A2906A7036FE2D1
B7E61EEBFC890174C68155F74B8C6F663CE75AD688A18586F5D90E0692139D37
09828AEE200E0C223FDCC61899F78C91181BCE353FBAA1C07C0F2B32377E1212
1BB2662E139F56E37D85EF15384B2B8EB44BAB87B270A3792FC9DBD89728> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 160.084 mo
(\030\207)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 160.084 mo
(\030\207) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
7767 <001C60D8A8C9B5EE310DC2960D6D490553FDE5E5F6B26E3C164E190267
05BB12153830C812415D39DBB4D8EF7725EAA4A683FC3B9F3089EB72CB9B4517
E304E3B3139EEC7F150093AAAB69E6037B61753DDA391B69EF0F51B2494CB952
05121019BFFA049DA6C69D671A360FF8E2E8652C1BECCC1B62A3B65AD5885203
978C809EB33AD703965136B369766E1E1E786774516BADA1154057AF718D734A
263FAA5A137CEC73C7097AF25ACF4696D551E791D291B9E15A9E5119075B3C1D
155947311750AF5C0A826DAB54F350886007A6AA94DBC99448580742BEFAB9C7
6F096B6CBE13EDFED4279BE0C8E2178592409BC701F6F5BC2FCE19F2A48752B3
626C0E3EAD6F159289B3E6F8062EAE95E8A1AEA290A03ABF0309703A877C79F3
1B96EEA868F4EFA20579F03DC35577993A7E0FB5D2E8DACDE690979EBD5E63A7
6CD0123AA80411E1A01D0D07113A09A07CA0038B56F9B3D38E9888E9B8E928CC
EFC0C6232C1081840CEC68EFBAFA3E4C5B88833924CDAA205E470A7668BA3550
77E9845D4FD64D6D86308CE8A9044DD30F0499D2E4> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 144.205 mo
(\036W)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 144.205 mo
(\036W) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
8601 <001C60D8A8C9B5EE3102B1A06FF2DD6183D23AEF4E7266AF45B19F239C
9A54088E1C16383E1A27E2E7E6E87B8ACF1EEE847444E5297FC265E007210691
25E73C64FEF4B0F8A18B6DFA4C3B2988398010D5C4C9453D65D32105DEC9270A
D18272E41490D5DB314D50965A486226C32C779E6ED7745134B7D9A34C0B8070
89DF2B277858B47FB59AC889536BF92DAAD4E4BC91F42BFCFD24000EFA5BFEE5
63495699E5B6F09739A1C98F16A4E7BFC49DA2C45CB0> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 128.325 mo
(!\231)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
105.534 128.325 mo
(!\231) false chp
@
136.014 201.403 mo
133.314 201.403 131.154 199.243 131.154 196.603 cv
131.154 91.663 li
131.154 88.963 133.314 86.803 136.014 86.803 cv
155.334 86.803 li
157.974 86.803 160.134 88.963 160.134 91.663 cv
160.134 196.603 li
160.134 199.243 157.974 201.403 155.334 201.403 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
136.014 201.403 mo
133.314 201.403 131.154 199.243 131.154 196.603 cv
131.154 91.663 li
131.154 88.963 133.314 86.803 136.014 86.803 cv
155.334 86.803 li
157.974 86.803 160.134 88.963 160.134 91.663 cv
160.134 196.603 li
160.134 199.243 157.974 201.403 155.334 201.403 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
3933 <001C60D8A8C9B5EE310398C56DB9D21A4B79F20E5BF746DF14FE7AB30C
D9F66DDE5B335684729601F0D01112E24D7DC5A793753B614F2DDA55A0E9AB32
243DD1FFF87DA40619F4B512C861C99A9FFD8F25D6BBCB2F8C46B76410DF2933
5312A41528E9B0BFEB2BC96472385AAF5322EE7F9617621B5432EE14F0045FE3
94DDBABFED66716FF2820AF267629592BADD22E5EC5B8BFA64CAE49AA36CCE7B
0895EDF8EC53B6DA913C> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 191.863 mo
(\017])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 191.863 mo
(\017]) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 175.973 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 175.973 mo
(7G) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
11492 <001C60D8A8C9B5EE3102FB3BFFD2EEC38D02E072CF35306F343D844D8
82BBF04770918A2BB0050051EEA94BCB798B3456F5E96A992AA228FC7BD5B65E
65C5018A43C7617944906C6F737E989CB1A9ABF21C8994D84EA8178C81432B65
C7CB9BF477542250E584225DA7342FA0CCF087F8F2F422DE120290A334FE7E47
6819A3B9D5C4A3AB1E5BBBC75DADF34D6C04517A7CD20E6F8F871048C811F9DA
A586DA328B69C59569BF7DD963289323C6352553D7CC732633903A49F72445A5
628B0B84D33CD6B763950C019930E76ED275A1C41846BCFB3269C99A81449B96
5958EE7D9CB9FA8D5519A2F77F7A15FA48A9C8AC30C35727518E43DBABABA751
38BEDEA88F11B> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 160.082 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 160.082 mo
(,\344) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
4728 <001C60D8A8C9B5EE310394B674E180B0CA33B8147B5A8CC3B56C4C34C9
B0C1EA5FBED4B3C09EFC4F80231ED8939D28325DF24FCE47287CD5BF7429850E
4E0EE51D0D34AAB01A127AC5699B6450010AC5A7BC92C4390152C7C13A0C28F4
3C4C15F14AA1B22FF73094C452792AAAE8B966BBBEC4E4C58F48C8DD8F06BD79
E59A7F997A8835E0532D3E50001F280E30F1F6E6936F541546E91E013D222620
90995402143CA5CC14F96F5F5B3DCEE56CF180D95BD777875E5EFE53A871CA22
805496C736E6FC904C9159DBBDD653B0DC841ADE83437A084AD35FA97AEBFFFC
198EB8EAB804B8F22D5F94BD472D11E5A7BFA0C1CC8F30AF2E40CD58E8F679A2
7CE188611B97D1> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 144.192 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 144.192 mo
(\022x) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
18435 <001C60D8A8C9B5EE310DB270A3A07FA57311041B5357837E7F04A62CA
A99F1FC3CAD68E90E87E69C678A9BC7BD8E081646FECA996651B82465F8148F7
6C70526420D1F6BCCC6F91590BE0998CA563E635AF2AFFBADE4FCC3EC752FFAF
6B78563EFB7D79258F75B9A7B92B67A751CB111013DC0A43F169BC9690F91694
ECCD1C7FAAB5D531B7BA7D5CDF76B33B58F86B72B4807791C804BCF25CFE7405
98888E6956B7C5217DE3A98A8617C6CB940F97EF2E3C8E3DF91893093BD2EAE7
4C02E5F99CD113AEFF71FB19F3804BBB6E81986589AE5E8AFFD0A13E50D29BE6
7E6CEF308AC3F1C0B488F29C1B8EF8A71B480650BCB78E307A3510CF5804BC78
155B69F72772AEB17D23E3B95A5EA3C70648284CF2BDDDCDBDF112982230E00B
F729E116BD7B9EBD007E83DED5548A8CE715AD717BE1625C4597EAE310A53112
6A183B217A711379CD1EC> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 128.301 mo
(H\003)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 128.301 mo
(H\003) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 112.411 mo
(\0250)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
152.394 112.411 mo
(\0250) false chp
@
115.374 144.883 mo
123.714 144.883 li
123.714 147.463 li
115.374 147.463 li
cp
122.394 142.243 mo
130.254 146.143 li
122.394 150.103 li
.75021 .679683 .670222 .90164 cmyk
f
182.934 201.403 mo
180.234 201.403 178.074 199.243 178.074 196.603 cv
178.074 91.663 li
178.074 88.963 180.234 86.803 182.934 86.803 cv
202.254 86.803 li
204.894 86.803 207.054 88.963 207.054 91.663 cv
207.054 196.603 li
207.054 199.243 204.894 201.403 202.254 201.403 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
182.934 201.403 mo
180.234 201.403 178.074 199.243 178.074 196.603 cv
178.074 91.663 li
178.074 88.963 180.234 86.803 182.934 86.803 cv
202.254 86.803 li
204.894 86.803 207.054 88.963 207.054 91.663 cv
207.054 196.603 li
207.054 199.243 204.894 201.403 202.254 201.403 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 191.863 mo
(\017])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 191.863 mo
(\017]) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 175.973 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 175.973 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 160.082 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 160.082 mo
(,\344) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 144.192 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 144.192 mo
(\022x) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 128.301 mo
(G\203)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 128.301 mo
(G\203) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 112.411 mo
(\007\374)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
199.314 112.411 mo
(\007\374) false chp
@
163.014 144.883 mo
171.354 144.883 li
171.354 147.463 li
163.014 147.463 li
cp
170.034 142.243 mo
177.894 146.143 li
170.034 150.103 li
.75021 .679683 .670222 .90164 cmyk
f
229.794 201.403 mo
227.154 201.403 224.994 199.243 224.994 196.603 cv
224.994 91.663 li
224.994 88.963 227.154 86.803 229.794 86.803 cv
249.114 86.803 li
251.814 86.803 253.974 88.963 253.974 91.663 cv
253.974 196.603 li
253.974 199.243 251.814 201.403 249.114 201.403 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
229.794 201.403 mo
227.154 201.403 224.994 199.243 224.994 196.603 cv
224.994 91.663 li
224.994 88.963 227.154 86.803 229.794 86.803 cv
249.114 86.803 li
251.814 86.803 253.974 88.963 253.974 91.663 cv
253.974 196.603 li
253.974 199.243 251.814 201.403 249.114 201.403 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 191.863 mo
(\017])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 191.863 mo
(\017]) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 175.973 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 175.973 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 160.082 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 160.082 mo
(,\344) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 144.192 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 144.192 mo
(\022x) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 128.301 mo
(\010<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 128.301 mo
(\010<) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 112.411 mo
(\011p)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
245.394 112.411 mo
(\011p) false chp
@
210.654 144.883 mo
218.994 144.883 li
218.994 147.463 li
210.654 147.463 li
cp
217.674 142.243 mo
225.534 146.143 li
217.674 150.103 li
.75021 .679683 .670222 .90164 cmyk
f
253.974 142.783 mo
270.474 142.783 li
270.474 211.783 li
269.154 210.463 li
277.734 210.463 li
277.734 213.103 li
267.834 213.103 li
267.834 144.103 li
269.154 145.423 li
253.974 145.423 li
cp
276.414 207.823 mo
284.274 211.783 li
276.414 215.683 li
f
291.774 269.083 mo
287.634 269.083 284.274 265.723 284.274 261.583 cv
284.274 161.923 li
284.274 157.783 287.634 154.483 291.774 154.483 cv
321.594 154.483 li
325.734 154.483 329.034 157.783 329.034 161.923 cv
329.034 261.583 li
329.034 265.723 325.734 269.083 321.594 269.083 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
291.774 269.083 mo
287.634 269.083 284.274 265.723 284.274 261.583 cv
284.274 161.923 li
284.274 157.783 287.634 154.483 291.774 154.483 cv
321.594 154.483 li
325.734 154.483 329.034 157.783 329.034 161.923 cv
329.034 261.583 li
329.034 265.723 325.734 269.083 321.594 269.083 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 259.483 mo
(\0160)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 259.483 mo
(\0160) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 243.593 mo
(\004\304)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 243.593 mo
(\004\304) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 227.702 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 227.702 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 211.812 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 211.812 mo
(,\344) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 195.921 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 195.921 mo
(\022x) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 180.031 mo
(,\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 180.031 mo
(,\272) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 243.584 mo
(\022\224)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 243.584 mo
(\022\224) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 227.704 mo
(\026])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 227.704 mo
(\026]) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 211.825 mo
(\024\334)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 211.825 mo
(\024\334) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 195.945 mo
(H\005)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 195.945 mo
(H\005) false chp
@
291.774 133.903 mo
287.634 133.903 284.274 130.543 284.274 126.403 cv
284.274 26.743 li
284.274 22.603 287.634 19.303 291.774 19.303 cv
321.594 19.303 li
325.734 19.303 329.034 22.603 329.034 26.743 cv
329.034 126.403 li
329.034 130.543 325.734 133.903 321.594 133.903 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
291.774 133.903 mo
287.634 133.903 284.274 130.543 284.274 126.403 cv
284.274 26.743 li
284.274 22.603 287.634 19.303 291.774 19.303 cv
321.594 19.303 li
325.734 19.303 329.034 22.603 329.034 26.743 cv
329.034 126.403 li
329.034 130.543 325.734 133.903 321.594 133.903 cv
cp
.719539 .300053 1 .150149 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 124.303 mo
(\017])sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 124.303 mo
(\017]) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 108.413 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 108.413 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 92.5225 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 92.5225 mo
(,\344) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 76.632 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 76.632 mo
(\022x) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
16030 <001C60D8A8C9B5EE3103A087582F73F891DA130B4A2BEA6611C7EDAC3
65DE1B94EAF5F113DE14F15A67401AFC1CBE6D7888E86BD3C6208C148F6277DE
96C70ECF934CED1999990B342D28D8321F7FEA19A933FDA699B92CCE9B6F41F2
7502AD1DEED4C27F30638AEC30061F5966726A63BD9D6A23E48FED29B1107914
4F55F4B8607500B5C04FB47F7EB428DA1348D35451D4E41E0304B7BE5437FB72
A06D2514F88D87CA2CABE7FE4A5668B3184233E66F2F18D5E878EA726D264A6B
F5DB8E5A20E87653866E51301393CF0D92023C037EB895C3C2771E2626FD6527
BEA08D64A78FC98480A913E38962CA447373BC0669814D92EB33A54FA0670B18
C3846A9188D66C125E5BC8304F6A30AF248457354FF6CEE3160EC18F5D56FC57
599CD3BCDD10195823BB8FD3EBDEB196785CB3063A72ECE276788EBA842A3F11
BFD3488181A8711A37A> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 60.7414 mo
(>\236)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 60.7414 mo
(>\236) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
19864 <001C60D8A8C9B5EE310D9DE75307C454149D311B7668A5A7E7FBE69E2
8CCA281ECECFD365C11B3CD8838F42B47115F50D7D4B19332287CAB6E609CA23
1FC952DC13AD8F07806C81A6B9F4107999F74F552886ADEB542304F0664CBF55
68E639D35BDFB6C5AEE81C8C51B4E1A1AF190D5533A8CA7AFD3F6963F501A79A
648B6BDB3011BDBF975DD2178F0C54B4C14C9F226CF1F49B337CE6AC57127C68
6C3D4F72C9B4CFC521BCADB455BDAE47EFE7358E623394519D1F559D87C4C388
959B468802FD54FD43BEF5A896E874C54496AD17F97D9274F66A905C79895611
1AC09FB5D52938837F587209E84FE9BBCD135EE0AA32A9F80043676C02CE9B84
D345ECD2FBE82C10513447F32587947181E4E98A66EFD733A4A0E924B> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 44.8509 mo
(M\230)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
303.954 44.8509 mo
(M\230) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 108.404 mo
( W)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 108.404 mo
( W) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 92.5241 mo
(\035\265)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 92.5241 mo
(\035\265) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 76.6447 mo
(\035\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 76.6447 mo
(\035\272) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 60.7653 mo
(\0250)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
322.074 60.7653 mo
(\0250) false chp
@
253.974 145.423 mo
270.474 145.423 li
270.474 76.603 li
269.154 77.923 li
277.734 77.923 li
277.734 75.283 li
267.834 75.283 li
267.834 144.103 li
269.154 142.783 li
253.974 142.783 li
cp
276.414 80.503 mo
284.274 76.603 li
276.414 72.643 li
.75021 .679683 .670222 .90164 cmyk
f
97.3737 293.143 mo
97.4337 210.223 li
100.074 210.223 li
100.014 293.143 li
cp
94.7937 211.543 mo
98.7537 203.623 li
102.714 211.543 li
f
256.134 476.743 mo
253.494 476.743 li
253.494 484.663 li
256.134 484.663 li
cp
253.494 476.743 mo
cp
253.494 487.303 mo
253.494 492.523 li
254.814 491.203 li
252.174 491.203 li
252.174 493.843 li
256.134 493.843 li
256.134 487.303 li
cp
249.534 491.203 mo
241.674 491.203 li
241.674 493.843 li
249.534 493.843 li
cp
239.034 491.203 mo
231.114 491.203 li
231.114 493.843 li
239.034 493.843 li
cp
228.534 491.203 mo
220.614 491.203 li
220.614 493.843 li
228.534 493.843 li
cp
217.974 491.203 mo
210.114 491.203 li
210.114 493.843 li
217.974 493.843 li
cp
207.474 491.203 mo
199.554 491.203 li
199.554 493.843 li
207.474 493.843 li
cp
196.914 491.203 mo
189.054 491.203 li
189.054 493.843 li
196.914 493.843 li
cp
186.414 491.203 mo
178.554 491.203 li
178.554 493.843 li
186.414 493.843 li
cp
175.914 491.203 mo
167.994 491.203 li
167.994 493.843 li
175.914 493.843 li
cp
165.354 491.203 mo
157.494 491.203 li
157.494 493.843 li
165.354 493.843 li
cp
154.854 491.203 mo
146.934 491.203 li
146.934 493.843 li
154.854 493.843 li
cp
144.294 491.263 mo
146.934 491.263 li
146.934 483.403 li
144.294 483.403 li
cp
146.934 491.263 mo
cp
144.294 480.763 mo
146.934 480.763 li
146.934 472.843 li
144.294 472.843 li
cp
146.934 480.763 mo
cp
144.294 470.203 mo
146.934 470.203 li
146.934 462.343 li
144.294 462.343 li
cp
146.934 470.203 mo
cp
144.294 459.703 mo
146.934 459.703 li
146.934 451.783 li
144.294 451.783 li
cp
146.934 459.703 mo
cp
144.294 449.203 mo
146.934 449.203 li
146.934 441.283 li
144.294 441.283 li
cp
146.934 449.203 mo
cp
144.294 438.643 mo
146.934 438.643 li
146.934 430.783 li
144.294 430.783 li
cp
146.934 438.643 mo
cp
144.294 428.143 mo
146.934 428.143 li
146.934 420.223 li
144.294 420.223 li
cp
146.934 428.143 mo
cp
149.514 419.083 mo
145.614 411.163 li
141.654 419.083 li
f
307.974 19.303 mo
305.334 19.303 li
305.334 11.383 li
307.974 11.383 li
cp
305.334 19.303 mo
cp
305.334 8.74298 mo
305.334 3.52399 li
306.654 4.78296 li
304.014 4.78296 li
304.014 2.20398 li
307.974 2.20398 li
307.974 8.74298 li
cp
301.434 4.78296 mo
293.514 4.78296 li
293.514 2.20294 li
301.434 2.20294 li
cp
290.874 4.78296 mo
283.014 4.78296 li
283.014 2.20294 li
290.874 2.20294 li
cp
280.374 4.78296 mo
272.454 4.78296 li
272.454 2.20294 li
280.374 2.20294 li
cp
269.814 4.78296 mo
261.954 4.78296 li
261.954 2.20294 li
269.814 2.20294 li
cp
259.314 4.78296 mo
251.394 4.78296 li
251.394 2.20294 li
259.314 2.20294 li
cp
248.814 4.78296 mo
240.894 4.78296 li
240.894 2.20294 li
248.814 2.20294 li
cp
238.254 4.78296 mo
230.394 4.78296 li
230.394 2.20294 li
238.254 2.20294 li
cp
227.754 4.78296 mo
219.834 4.78296 li
219.834 2.20294 li
227.754 2.20294 li
cp
217.194 4.78296 mo
209.334 4.78296 li
209.334 2.20294 li
217.194 2.20294 li
cp
206.694 4.78296 mo
198.834 4.78296 li
198.834 2.20294 li
206.694 2.20294 li
cp
196.194 4.78296 mo
192.594 4.78296 li
193.854 3.52399 li
193.854 7.78296 li
191.274 7.78296 li
191.274 2.20398 li
196.194 2.20398 li
cp
191.274 10.423 mo
193.854 10.423 li
193.854 18.283 li
191.274 18.283 li
cp
193.854 10.423 mo
cp
191.274 20.923 mo
193.854 20.923 li
193.854 28.843 li
191.274 28.843 li
cp
193.854 20.923 mo
cp
191.274 31.484 mo
193.854 31.484 li
193.854 39.344 li
191.274 39.344 li
cp
193.854 31.484 mo
cp
191.274 41.984 mo
193.854 41.984 li
193.854 49.904 li
191.274 49.904 li
cp
193.854 41.984 mo
cp
191.274 52.484 mo
193.854 52.484 li
193.854 60.404 li
191.274 60.404 li
cp
193.854 52.484 mo
cp
191.274 63.043 mo
193.854 63.043 li
193.854 70.903 li
191.274 70.903 li
cp
193.854 63.043 mo
cp
191.274 73.543 mo
193.854 73.543 li
193.854 80.263 li
191.274 80.263 li
cp
193.854 73.543 mo
cp
196.494 78.943 mo
192.594 86.804 li
188.634 78.943 li
f
347.814 401.263 mo
346.014 401.263 344.574 399.763 344.574 397.963 cv
344.574 385.003 li
344.574 383.203 346.014 381.703 347.814 381.703 cv
360.834 381.703 li
362.634 381.703 364.074 383.203 364.074 385.003 cv
364.074 397.963 li
364.074 399.763 362.634 401.263 360.834 401.263 cv
.362768 .0159915 .574731 0 cmyk
ef
.877 lw
8 ml
347.814 401.263 mo
346.014 401.263 344.574 399.763 344.574 397.963 cv
344.574 385.003 li
344.574 383.203 346.014 381.703 347.814 381.703 cv
360.834 381.703 li
362.634 381.703 364.074 383.203 364.074 385.003 cv
364.074 397.963 li
364.074 399.763 362.634 401.263 360.834 401.263 cv
cp
.91632 .751125 .156588 .0256046 cmyk
@
.361486 .0162661 .571405 0 cmyk
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 377.323 mo
(\0160)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 377.323 mo
(\0160) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 361.438 mo
(\004\304)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 361.438 mo
(\004\304) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 345.552 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 345.552 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 329.666 mo
(\005\211)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 329.666 mo
(\005\211) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 313.781 mo
(0%)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 313.781 mo
(0%) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 297.895 mo
(,\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 297.895 mo
(,\272) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 282.009 mo
(\010<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 282.009 mo
(\010<) false chp
@
%ADOBeginSubsetFont: OABXXE+FangSong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/OABXXE+FangSong-GBK-EUC-H 1 GetGlyphDirectory
7622 <001C60D8A8C9B5EE310282C85CA73CE0241FA98E0E8BA0091780150E8C
31698F7DC6318C82CD7C027EA081113F83AAEC9010B5C20C71E0FDEA3176C25A
B04BBAEDDCB9C6F39D4192FD8BC30C9B793484E3C23DF26CE75F83D28D286133
65C1FF0070FA7916BEABA410F5EC039DADB99A9894A77E79BB1FC3741E78643B
5EBD7E4A67A26B5185A448514A586A9F26EF552CAA5C17DA80B290EB5FEF379B
E50999FFA5931BA439325488F7AF9DBE6E1BA520BB81C5330C05553908BF3FBB
2888BAA3388036BAEBCF5E1533F1297B88F86CD9EFCBA3777BFA23185608D071
02FAC22AFA002300839439D09E04619524479A42C6E491EBA5C58946867656D3
F6103819F670A1F5B65B64DB237C7F37B309E3FDDD0B5ED7EBEE3389A22621AD
D820> |
!
end
end end
%ADOEndSubsetFont
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 266.124 mo
(\035\306)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 266.124 mo
(\035\306) false chp
@
347.814 210.103 mo
346.014 210.103 344.574 208.663 344.574 206.863 cv
344.574 193.843 li
344.574 192.043 346.014 190.603 347.814 190.603 cv
360.834 190.603 li
362.634 190.603 364.074 192.043 364.074 193.843 cv
364.074 206.863 li
364.074 208.663 362.634 210.103 360.834 210.103 cv
.00228885 .260288 1 0 cmyk
ef
.877 lw
8 ml
347.814 210.103 mo
346.014 210.103 344.574 208.663 344.574 206.863 cv
344.574 193.843 li
344.574 192.043 346.014 190.603 347.814 190.603 cv
360.834 190.603 li
362.634 190.603 364.074 192.043 364.074 193.843 cv
364.074 206.863 li
364.074 208.663 362.634 210.103 360.834 210.103 cv
cp
.91632 .751125 .156588 .0256046 cmyk
@
.00244144 .258488 1 0 cmyk
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 185.923 mo
(\0160)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 185.923 mo
(\0160) false chp
.316 lw
1 ml
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 170.038 mo
(\004\304)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 170.038 mo
(\004\304) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 154.152 mo
(7G)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 154.152 mo
(7G) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 138.266 mo
(,\344)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 138.266 mo
(,\344) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 122.381 mo
(\022x)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 122.381 mo
(\022x) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 106.495 mo
(,\272)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 106.495 mo
(,\272) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 90.6093 mo
(\010<)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 90.6093 mo
(\010<) false chp
@
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 74.7236 mo
(\035\306)sh
/OABXXE+FangSong-GBK-EUC-H-Identity-H findfont [0 -15.78 -15.78 0 0 0 ]msf
360.954 74.7236 mo
(\035\306) false chp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/OABXXF+TimesNewRomanPSMT*1 uf
/OABXXF+TimesNewRomanPSMT uf
/LAAAAA+TimesNewRomanPSMT uf
/OABXXE+FangSong-GBK-EUC-H-Identity-H uf
/OABXXE+FangSong-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
